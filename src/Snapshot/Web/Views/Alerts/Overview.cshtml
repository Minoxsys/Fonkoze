@using Microsoft.Web.Mvc;

@section page_title{
User Administration Clients: Overview
}

@{
    Html.RenderPartial("_EmptySubNavigation");
    Html.RenderPartial("_EmptySideBar");
}

<script type="text/javascript">
    Ext.onReady(function () {
        var administrationBtnId = window.res.header.navigation.alerts;
        var administrationBtn = Ext.getCmp(administrationBtnId);
        administrationBtn.toggle(true);

    });
</script>


<script type="text/javascript">
    Ext.onReady(function () {
        window.feature = {};
        window.feature.searchAlerts = 'Search-OutpostName-ALerts-Name-Id';
        window.feature.comboboxDistrictsId = 'comboboxDistrictsId';

        window.feature.alertsStore = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSuport: true,
            fields: ['Id', 'OutpostId', 'OutpostName', 'ProductGroupId', 'ProductGroupName', 'LowLevelStock', 'LastUpdate', 'Contact','AlertType','Date'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "Alerts", action = "GetAlerts" })',
                reader: {
                    type: 'json',
                    root: 'Alerts',
                    totalProperty: 'TotalItems'
                },
                extraParams: { searchValue: '', DistrictId: '' },
                simpleSortMode: true
            },
            remoteSort: true,
            sorters: [{
                property: 'Date',
                direction: 'DESC'
            }]
        });

        window.feature.doSearch = new Ext.util.DelayedTask(function(){
			window.feature.alertsStore.loadPage(1);
		});

        window.feature.DistrictStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "Alerts", action = "GetAllDistricts" })',
                reader: {
                    type: 'json',
                    root: 'districts',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.comboBoxDistricts = Ext.create('Ext.form.ComboBox', {
            store: window.feature.DistrictStore,
            queryMode: 'local',
            id: window.feature.comboboxDistrictsId,
            labelAlign: 'top',
            fieldLabel: 'Selected District',
            labelClsExtra: 'combo-label',
            displayField: 'Name',
            valueField: 'Id',
            disabled: false,
            editable: false,
            typeAhead: false,
            emptyText: _t('District List'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedDistrictId = record[0].data.Id;
                    
                    window.feature.alertsStore.load({ params: { districtId: selectedDistrictId } });
                },
                render: function (p) {
                    p.setLoading({
                        store: p.getStore()
                    });
                }
            }
        });

        window.feature.container = Ext.create('Ext.container.Container', {
            margin: '15 15 15 15',
            padding: '20 20 0 20',
            autoScroll: true,
            id: 'TopContainer',
            layout: {
                align: 'stretch',
                type: 'vbox'
            },
            items: [{
                    xtype: 'container',
                    layout: {
                        align: 'stretch',
                        type: 'vbox'
                    },
                    height: 110,
                    items: [{
                            xtype: 'container',
                            layout: {
                                type: 'hbox'
                            },
                            height: 50,
                            items: [{
                                xtype: 'container',
                                flex: 1,
                                layout: {
                                    type: 'column'
                                },
                                height: 50,
                                items: [{
                                    xtype: 'container',
                                    height: 30,
                                    width: 30,
                                    html: '&nbsp;'
                                }, {
                                    xtype: 'image',
                                    src: '@(Url.RouteUrl<AssetsController>(it => it.Shared("/img/Alerts/AlertsAdministration.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                    margin: '0 10 10 0'
                                }, {
                                    xtype: 'label',
                                    cls: 'x-title-label',
                                    text: 'All Alerts'
                                }]
                                }, {
                                    xtype: 'container',
                                    flex: 1,
                                    layout: {
                                        type: 'hbox',
                                        pack: 'end'
                                    },
                                    height: 50,
                                    items: [{
                                        xtype: 'textfield',
                                        id: window.feature.searchAlerts,
                                        width: 200,
                                        frame: true,
                                        emptyText: 'Seller Search',
                                        enableKeyEvents: true,
                                        listeners: {
                                            'keyup': {
                                                fn: function () {
                                                    var searchValue = window.feature.container.down('#' + window.feature.searchAlerts).getValue();
                                                    window.feature.alertsStore.proxy.extraParams.searchValue = searchValue;
                                                    window.feature.doSearch.delay(500);
                                                }
                                            }
                                        }
                                    }]
                            }]
                        }, {
                            xtype: 'container',
                            id: 'combosContainer',
                            height: 65,
                            margin: '0 0 0 30',
                            layout: {
                                type: 'column'
                            },
                            items: [
                                window.feature.comboBoxDistricts
                            ]
                        }]
                }, {
                xtype: 'gridpanel',
                cls: 'white-border',
                store: window.feature.alertsStore,
                loadMask: true,
                disableSelection: true,
                flex:3,
                autoScroll: true,
                viewConfig: {
                    emptyText: '<div align="center" style="margin-top:75px; font: 17px Lucida Sans Unicode,Arial,Verdana,Geneva,Helvetica,sans-serif; color: #666666;">No data matches the parameters specified.</div>',
                },
                columns: [{
                    header: 'Date',
                    menuDisabled: true,
                    dataIndex: 'Date',
                    minWidth: 100,
                    flex: 1,
                    sortable: true
                }, {
                    header: 'Seller Name',
                    dataIndex: 'OutpostName',
                    flex: 1,
                    minWidth: 100,
                    menuDisabled: true,
                },{
                    header: 'Contact',
                    dataIndex: 'Contact',
                    menuDisabled: true,
                    minWidth: 80,
                    flex: 1
                },{
                    header: 'Product Level',
                    dataIndex: 'LowLevelStock',
                    menuDisabled: true,
                    minWidth: 80,
                    flex: 1
                },{
                    header: 'Last Stock Update',
                    menuDisabled:true,
                    dataIndex: 'LastUpdate',
                    minWidth: 100,
                    flex: 1
                }, {
                    header: 'Alert Type',
                    menuDisabled: true,
                    dataIndex: 'AlertType',
                    minWidth: 100,
                    flex: 1
                }],
                bbar: Ext.create('Ext.PagingToolbar', {
                    store: window.feature.alertsStore,
                    displayInfo: true,
                    displayMsg: 'Displaying topics {0} - {1} of {2}',
                    emptyMsg: "",
                    ui: 'snapshot-pagination-toolbar'
                })
            }]
        });


        var contentRes = window.res.content;
        var mainContent = Ext.getCmp(contentRes.maincontent.id);

        mainContent.add(window.feature.container);
        window.feature.alertsStore.loadPage(1); 

        window.feature.DistrictStore.load({
            params: { regionId: '@Guid.Empty' }
        });
        window.feature.comboBoxDistricts.setValue('@Guid.Empty');
        window.feature.comboBoxDistricts.setDisabled(false);

    });

</script>