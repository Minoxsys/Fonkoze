@using Web.Areas.AnalysisManagement
@model Web.Models.Home.IndexModel

@section page_title{
    Fonkoze Application
}

@{
    Html.RenderPartial("SelectPositionGoogleMapWindow");
}

<style type="text/css">

.imgHeight {
    height: 40px;
}

.alignRight {
    text-align: right;
}
    
.goodStock {
   color: black;
   background-color: #98fb98;
   font-family: "Lucida Grande", "Arial", sans-serif;
   font-size: 10px;
   font-weight: bold;
   text-align: center;
   width: 30px;     
   border: 1px solid black;
   white-space: nowrap;
}

.closeToBadStock {
   color: black;
   background-color: #FFD24C; 	
   font-family: "Lucida Grande", "Arial", sans-serif;
   font-size: 10px;
   font-weight: bold;
   text-align: center;
   width: 30px;     
   border: 1px solid black;
   white-space: nowrap;
}

.badStock {
   color: black;
   background-color: #FFCCCC;
   font-family: "Lucida Grande", "Arial", sans-serif;
   font-size: 10px;
   font-weight: bold;
   text-align: center;
   width: 30px;     
   border: 1px solid black;
   white-space: nowrap;
}

.outpost {
   color: black;
   background-color: #FFCCCC;
   font-family: "Lucida Grande", "Arial", sans-serif;
   font-size: 10px;
   font-weight: bold;
   text-align: center;
   width: 30px;     
   border: 1px solid black;
   white-space: nowrap;
}

.warehouse {
   color: black;
   background-color: #99FFFF;
   font-family: "Lucida Grande", "Arial", sans-serif;
   font-size: 10px;
   font-weight: bold;
   text-align: center;
   width: 30px;     
   border: 1px solid black;
   white-space: nowrap;
}
</style>

<script type="text/javascript">
    window.res.header.subnavigation.buttonTabs = {
        id: 'ButtonTabs',
        group:'AdministrationButtonsGroup',
        outpost: 'ButtonTabs-OutpostAdministration-Button',
        product: 'ButtonTabs-ProductAdministration-Button',
        user: 'ButtonTabs-UserAdministration-Button'
        
    };



    Ext.onReady(function () {
        window.feature = {};
        var outpostMarkersArray = [];
        
        var content = Ext.getCmp(window.res.content.id);

        window.feature.outpostMarkersStore = Ext.create('Ext.data.Store', {
            fields: ['Id', 'Name', 'Number', 'Coordonates', 'Type', 'InfoWindowContent'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(AnalysisManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "LocationReport", action = "GetOutpostMarkers" })',
                reader: {
                    type: 'json',
                    root: 'Markers',
                    totalProperty: 'TotalItems'
                },
                extraParams: { countryId: '' },
                simpleSortMode: true
            }
        });

        window.feature.outpostMarkersStore.load({
            callback: function () {
                var map = googleMapPanel.getMap();
                createMarker(window.feature.outpostMarkersStore, outpostMarkersArray, map);
                centerOnPlace("Haiti", map);
            }
        });
        
        window.feature.outpostMarkersStore.load();

        var googleMapPanelConfig = { flex: 1, margin: '40 50 10 0' };
        googleMapPanelConfig.centerPosition = new google.maps.LatLng(19.110542, -72.697233);
        googleMapPanelConfig.zoom = 7;
        var googleMapPanel = Ext.create('Ext.feature.GoogleMapPanel', googleMapPanelConfig);
      
        
        content.add(
            {
                xtype: 'container',
                layout: 'border',
                defaults: {
                    collapsible: false,
                    split: false,
                },
                style:
                {
                    background: 'transparent'
                },
                items:
                [
                    //main hbox
                    {
                        xtype: 'container',
                        layout: {
                            type: 'hbox',
                            pack: 'start',
                            align: 'stretch'
                        },
                        region: 'center',
                        items:
                        [
                            //main vbox
                            {
                                xtype: 'container', 
                                layout: 'vbox',
                                width: 600,
                                items:
                                [
                                    //alerts
                                    {
                                        xtype: 'container',
                                        margin: '40 0 20 50',
                                        layout: {
                                            type: 'hbox',
                                            pack: 'start',
                                        },
                                        items: [
                                            {
                                                xtype: 'image',
                                                itemId: 'No-of-alerts-image',
                                                cls: 'imgHeight',
                                                width: 40,
                                            }, {
                                                xtype: 'label',
                                                width: 400,
                                                cls: 'blue-label analysis-label',
                                                padding: '10 0 0 30',
                                                itemId: 'No-of-alerts-label',
                                                autoEl: { tag: 'a', cls: 'blue-label analysis-label', href: '@(Url.RouteUrl<AlertsController>(x => x.Overview(), Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE))', html: '' }
                                            }
                                        ]
                                    },
                                    //end alerts hbox item

                                    //begin report links table
                                    {
                                        xtype: 'container',
                                        padding: '20 20 20 20',
                                        layout: {
                                            type: 'table',
                                            columns: '2'
                                        },
                                        items: [
                                            {
                                                xtype: 'image',
                                                autoEl:
                                                {
                                                    html: "<a href='@(Url.RouteUrl<Web.Areas.AnalysisManagement.Controllers.LocationReportController>(x=>x.Overview(),Web.Areas.AnalysisManagement.AnalysisManagementAreaRegistration.DEFAULT_ROUTE))'><img height='60' src = '@(Url.RouteUrl<AssetsController>(it => it.Shared("/img/Analysis/LocationReport.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))'/></a>"
                                                },
                                                margin: '0 20 0 20',
                                                height: 110,
                                                rowspan: 2
                                            }, {
                                                xtype: 'label',
                                                tdAttrs: { height: 25, valign: 'top' },
                                                autoEl:
                                                {
                                                    tag: 'a',
                                                    cls: 'blue-label analysis-label',
                                                    href: '@(Url.RouteUrl<Web.Areas.AnalysisManagement.Controllers.LocationReportController>(x=>x.Overview(),Web.Areas.AnalysisManagement.AnalysisManagementAreaRegistration.DEFAULT_ROUTE))',
                                                    html: 'Detailed Location Report'
                                                }
                                            }, {
                                                xtype: 'label',
                                                tdAttrs: { height: 60, valign: 'top' },
                                                text: 'This report shows the geographical position of sellers and their stock levels.'
                                            }, {
                                                xtype: 'image',
                                                autoEl:
                                                {
                                                    html: "<a href='@(Url.RouteUrl<Web.Areas.AnalysisManagement.Controllers.ReportRegionLevelController>(x => x.Overview(null), Web.Areas.AnalysisManagement.AnalysisManagementAreaRegistration.DEFAULT_ROUTE))'><img height='60' src = '@(Url.RouteUrl<AssetsController>(it => it.Shared("/img/Analysis/StockLevelInformationReport.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))'/></a>"
                                                },
                                                margin: '0 20 0 20',
                                                height: 110,
                                                rowspan: 2
                                            }, {
                                                xtype: 'label',
                                                tdAttrs: { height: 25, valign: 'top' },
                                                autoEl:
                                                {
                                                    tag: 'a',
                                                    cls: 'blue-label analysis-label',
                                                    href: '@(Url.RouteUrl<Web.Areas.AnalysisManagement.Controllers.ReportOutpostLevelController>(x => x.Overview(null), Web.Areas.AnalysisManagement.AnalysisManagementAreaRegistration.DEFAULT_ROUTE))',
                                                    html: 'Product Level Information'
                                                }
                                            }, {
                                                xtype: 'label',
                                                tdAttrs: { height: 60, valign: 'top' },
                                                text: 'This report shows detailed information about stock levels.'
                                            }, {
                                                xtype: 'image',
                                                autoEl:
                                                {
                                                    html: "<a href='@(Url.RouteUrl<Web.Areas.StockAdministration.Controllers.HistoricalProductLevelController>(x => x.Overview(), Web.Areas.StockAdministration.StockAdministrationAreaRegistration.DEFAULT_ROUTE))'><img height='60' src = '@(Url.RouteUrl<AssetsController>(it => it.Shared("/img/Analysis/ActivityReport.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))'/></a>"
                                                },
                                                margin: '0 20 0 20',
                                                height: 110,
                                                rowspan: 2
                                            }, {
                                                xtype: 'label',
                                                tdAttrs: { height: 25, valign: 'top' },
                                                autoEl:
                                                {
                                                    tag: 'a',
                                                    cls: 'blue-label analysis-label',
                                                    href: '@(Url.RouteUrl<Web.Areas.StockAdministration.Controllers.HistoricalProductLevelController>(x => x.Overview(), Web.Areas.StockAdministration.StockAdministrationAreaRegistration.DEFAULT_ROUTE))',
                                                    html: 'Sales Report'
                                                }
                                            }, {
                                                xtype: 'label',
                                                tdAttrs: { height: 60, valign: 'top' },
                                                text: 'This report shows details about product distribution to clients.'
                                            }
                                        ]
                                    }//end report links table
                                ]//end left vbox items           
                            }, //end left vbox
                            googleMapPanel
                        ]//end main hbox items
                    }, //end main hbox

                    //begin powered by logo
                    {
                        xtype: 'container',
                        region: 'south',
                        layout: {
                            type: 'fit'
                        },
                        margin: '0 0 20 0',
                        items: [{
                            xtype: 'image',
                            cls: 'alignRight',
                            autoEl:
                            {
                                html: "<img height='35' src = '@(Url.RouteUrl<AssetsController>(it => it.Shared("/img/copyright.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))'/>"
                            },
                        }]
                    }//end power by logo
                ]//main border items
            }//main border
        );

        var noOfAlertsLabel = content.down('#No-of-alerts-label');
        var noOfAlertsImg = content.down('#No-of-alerts-image');
        var getFromUrl = '@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "Home", action = "GetNoOfAlertsInLast2Days" })';
        var action = $.get(getFromUrl);
        action.success(function(response) {
            var alertStr = 'alert';
            if (response == "0") {
                alertStr += 's';
                noOfAlertsImg.getEl().dom.src = '@(Url.RouteUrl<AssetsController>(it => it.Shared("/img/green-ok.gif"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))';
            } else {
                if (response > 1) {
                    alertStr += 's';
                }
                noOfAlertsImg.getEl().dom.src = '@(Url.RouteUrl<AssetsController>(it => it.Shared("/img/alert.gif"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))';
            }
            noOfAlertsLabel.setText(response + " " + alertStr + " received in the last two days!");
        });
    });

    function centerOnPlace(country, map) {
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({ 'address': country }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
            }
        });
    };
    
    function getGooglePositionFromText(coordinates) {
        var a = parseFloat(coordinates.substring(1, coordinates.indexOf(',')));
        var b = parseFloat(coordinates.substring(coordinates.indexOf(',') + 1, coordinates.length - 1));
        return new google.maps.LatLng(a, b);
    };

    function createMarker(store, markerArray, map) {
        var a = markerArray.length;

        if (markerArray.length == 0) {
            var i = 0;

            store.each(function(item) {
                var marker = new MarkerWithLabel({
                    position: getGooglePositionFromText(item.get('Coordonates')),
                    draggable: false,
                    raiseOnDrag: true,
                    map: map,
                    labelContent: item.get('Number'),
                    labelAnchor: new google.maps.Point(15, 0),
                    labelClass: item.get('Type'),
                    title: item.get('Name'),
                    id: item.get('Id'),
                    animation: google.maps.Animation.DROP
                });
                var infowindow = new google.maps.InfoWindow({
                    content: "<h3>" + marker.title + "</h3><br/><p>" + item.get('InfoWindowContent') + "</p>"
                });
                google.maps.event.addListener(marker, 'mouseover', function() {
                    infowindow.open(map, marker);
                });

                google.maps.event.addListener(marker, 'mouseout', function() {
                    infowindow.close(map, marker);
                });

                markerArray[i] = marker;
                i = i + 1;
            }, this);
        }
    }

</script>


<script type="text/javascript">
    Ext.onReady(function () {
        var subNavRes = window.res.header.subnavigation;
        var subnav = Ext.getCmp(subNavRes.id);

        subnav.add([{
            xtype: 'container',
            id: subNavRes.buttonTabs.id,
            margin: 0,
            padding: 0,
            width: 500,
            layout: {
                align: 'stretch',
                padding: 0,
                type: 'vbox'
            },
            items: [{
                    xtype: 'container',
                    flex: 1,
                    items: [{
                        xtype: 'label',
                        html: '&nbsp;' 
                    }]
                },{
                    xtype: 'container',
                    layout: {
                        type: 'column'
                    },
                    flex: 1,
                    items: []
                }]
        }]);
                        
        subnav.ownerCt.doLayout();

    });
</script>