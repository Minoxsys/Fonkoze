@using Web.Areas.MessagesManagement
@using Web.Areas.MessagesManagement.Controllers
@using Web.Areas.OutpostManagement;
@using Web.Areas.OutpostManagement.Controllers;
@using Web.Areas.StockAdministration.Controllers;
@using Web.Areas.CampaignManagement.Controllers;
@using Web.Areas.CampaignManagement;
@using Web.Areas.AnalysisManagement.Controllers;
@using Web.Areas.AnalysisManagement;
@using Web.Bootstrap.Routes;
@using Web.WarehouseMgmtUseCase.Controllers

<!DOCTYPE html>   
<html> 
    <head>
        <meta charset="utf-8" />
        <title >@RenderSection("page_title", required: true)</title>
        <link rel="shortcut icon" href="../../Assets/resources/img/logo_title.png" />
        <link href="@(Url.RouteUrl<CssController>(req => req.Index("theme"), ScriptsRoutesRegistrar.CSS))"
              rel="stylesheet" type="text/css" media="screen,projection" />
        <link href="@(Url.RouteUrl<CssController>(req => req.Index("button"), ScriptsRoutesRegistrar.CSS))"
              rel="stylesheet" type="text/css" media="screen,projection" />
        <link href="@(Url.RouteUrl<CssController>(req => req.Index("toolbar"), ScriptsRoutesRegistrar.CSS))"
              rel="stylesheet" type="text/css" media="screen,projection" />
        <link href="@(Url.RouteUrl<CssController>(req => req.Index("window"), ScriptsRoutesRegistrar.CSS))"
              rel="stylesheet" type="text/css" media="screen,projection" />
        <link href="@(Url.RouteUrl<CssController>(req => req.Index("wrap-headers"), ScriptsRoutesRegistrar.CSS))"
              rel="stylesheet" type="text/css" media="screen,projection" />
        <!--[if IE]>
            <link href="@(Url.RouteUrl<CssController>(req => req.Index("ie"), ScriptsRoutesRegistrar.CSS))"
                  rel="stylesheet" type="text/css" media="screen, projection" />
        <![endif]-->
        <script src="@(Url.RouteUrl<JavascriptController>(req => req.Index("frameworks"), ScriptsRoutesRegistrar.JAVASCRIPT))"
                language="javascript" type="text/javascript"> </script>
    </head>

    <body>
        <style>
            .x-mask, .x-mask.x-mask-gray {
                background-color: transparent;
            }

            .x-tree-elbow-end-minus {
                background-image: none !important;
            }
            .x-tree-elbow-end-plus {
                background-image: none !important;
            }

            .x-tree-elbow-minus {
                background-image: none !important;
            }
            .x-tree-elbow-plus {
                background-image: none !important;
            }

        </style>        

        <script type="text/javascript">
            function navigateTo(endpoint){
                var loc = window.location;

                window.location.href = loc.protocol + '//' +  loc.host + endpoint;
            }
            function _t(text){
                return text;
            }
            window.res = {
                viewport: 'SnapshotViewport',
                link:{
                    dashboard:'@Url.RouteUrl(DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "Home", action = "Index" })',
                    administration:'@(Url.RouteUrl<OutpostController>( x=>x.Overview() ,  OutpostManagementAreaRegistration.DEFAULT_ROUTE ))',
                    regionOverview:'@(Url.RouteUrl<RegionController>( x => x.Overview() ,  OutpostManagementAreaRegistration.DEFAULT_ROUTE ))',
                    district: '@(Url.RouteUrl<DistrictController>( x=>x.Overview() ,  OutpostManagementAreaRegistration.DEFAULT_ROUTE ))',
                    product:'@(Url.RouteUrl<ProductController>(x=>x.Overview(),Web.Areas.StockAdministration.StockAdministrationAreaRegistration.DEFAULT_ROUTE))',
                    productGroup: '@(Url.RouteUrl<ProductGroupController>( x=>x.Overview() ,  Web.Areas.StockAdministration.StockAdministrationAreaRegistration.DEFAULT_ROUTE ))',
                    usersOverview: '@(Url.RouteUrl<UserManagerController>( x=>x.Overview() ,  DefaultRouteRegistrar.DEFAULT_ROUTE ))',
                    clientsOverview: '@(Url.RouteUrl<ClientManagerController>( x=>x.Overview() ,  DefaultRouteRegistrar.DEFAULT_ROUTE ))',
                    outpostStockLevelCurrent: '@(Url.RouteUrl<OutpostStockLevelController>(x=>x.Overview(null),Web.Areas.StockAdministration.StockAdministrationAreaRegistration.DEFAULT_ROUTE))',
                    rolesOverview: '@(Url.RouteUrl<RoleManagerController>( x=>x.Overview() ,  DefaultRouteRegistrar.DEFAULT_ROUTE ))',
                    historicalLevel: '@(Url.RouteUrl<HistoricalProductLevelController>( x=>x.GraphicOverview() ,  Web.Areas.StockAdministration.StockAdministrationAreaRegistration.DEFAULT_ROUTE ))',
                    campaignOverview: '@(Url.RouteUrl<CampaignController>(x=>x.Overview(),CampaignManagementAreaRegistration.DEFAULT_ROUTE))',
                    alerts: '@(Url.RouteUrl<AlertsController>(x => x.Overview(), DefaultRouteRegistrar.DEFAULT_ROUTE))',
                    automaticSchedules: '@(Url.RouteUrl<RequestScheduleController>(x=>x.Overview(),CampaignManagementAreaRegistration.DEFAULT_ROUTE))',
                    analysisAndReports: '@(Url.RouteUrl<AnalysisController>(x=>x.Overview(),AnalysisManagementAreaRegistration.DEFAULT_ROUTE))',
                    warehouseadmin: '@(Url.RouteUrl<WarehouseManagementController>( x=>x.Overview() ,  DefaultRouteRegistrar.DEFAULT_ROUTE ))',
                    seller: '@(Url.RouteUrl<SellerController>(x=>x.Overview(), MessagesManagementAreaRegistration.DefaultRoute))',
                    warehouse: '@(Url.RouteUrl<WarehouseController>(x=>x.Overview(), MessagesManagementAreaRegistration.DefaultRoute))',
                    sentMessage: '@(Url.RouteUrl<SentMessagesController>(x=>x.Overview(), MessagesManagementAreaRegistration.DefaultRoute))',
                    otherActivity: '@(Url.RouteUrl<ApplicationActivityController>(x=>x.Overview(), MessagesManagementAreaRegistration.DefaultRoute))',
                    errorRates: '@(Url.RouteUrl<ErrorRateController>(x=>x.Overview(), MessagesManagementAreaRegistration.DefaultRoute))'
                },
                header:{
                    id:'Header',
                    navigation:{
                        id:'Navigation',
                        toggleGroup: 'navigation-toggle-group',
                        logo: 'Logo',
                        dashboard:'Dashboard',
                        administration: 'Administration',
                        outpostStockLevel: 'OutpostStockLevel',
                        alerts: 'Alerts',
                        messages: 'Messages',
                        analysisAndReports:'AnalysisAndReports'

                    },
                    subnavigation:{
                        id:'SubNavigation'
                    }
                },
                content:{
                    id:'Content'
                }
            }

            Ext.onReady(function() {
                var viewport = Ext.create('Ext.container.Viewport', {
                    id: res.viewport,
                    renderTo: Ext.getBody(),
                    margin: '0 0 0 0',
                    padding: '0',
                    layout: 'fit',
                    minWidth: 1300,
                    scrollable: true,
                    overflowX: 'auto',
                    items: [{
                        xtype: 'container',
                        layout: 'fit',
                        margin: '0 0 0 0',
                        items: [{
                            xtype: 'container',
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            items: [{
                                    xtype: 'container',
                                    height: 107,
                                    id: res.header.id,
                                    itemId: '',
                                    layout: {
                                        align: 'stretch',
                                        type: 'vbox'
                                    },
                                    items: [{
                                            xtype: 'container',
                                            height: 70,
                                            id: res.header.navigation.id,
                                            cls: 'x-add-navigation-gradient',
                                            layout: {
                                                align: 'stretch',
                                                type: 'hbox'
                                            },
                                            items: [{
                                                    xtype: 'container',
                                                    width: 1000,
                                                    layout: 'column',
                                                    items: [{
                                                            xtype: 'container',
                                                            height: 70,
                                                            margin: '15 60 0 20',
                                                            id: res.header.navigation.logo,
                                                            padding: 0,
                                                            width: 180,
                                                            items: [{
                                                                xtype: 'image',
                                                                src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/LogoFon.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))'
                                                            }]
                                                        }, {
                                                            xtype: 'button',
                                                            id: res.header.navigation.dashboard,
                                                            height: 70,
                                                            padding: '0 0 0 9',
                                                            width: 135,
                                                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/Dashboard.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                                            iconAlign: 'left',
                                                            ui: 'snapshot-navigation-btn',
                                                            toggleGroup: res.header.navigation.toggleGroup,
                                                            enableToggle: true,
                                                            pressed: true,
                                                            text: '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dashboard',
                                                            handler: function() {
                                                                navigateTo(res.link.dashboard);
                                                            }
                                                        }, {
                                                            xtype: 'button',
                                                            id: res.header.navigation.administration,
                                                            height: 70,
                                                            padding: '0 0 0 7',
                                                            width: 157,
                                                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/Administration.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                                            iconAlign: 'left',
                                                            ui: 'snapshot-navigation-btn',
                                                            toggleGroup: res.header.navigation.toggleGroup,
                                                            handler: function() {
                                                                navigateTo(res.link.administration);
                                                            },
                                                            enableToggle: true,
                                                            text: '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Administration'
                                                        }, {
                                                            xtype: 'button',
                                                            id: res.header.navigation.outpostStockLevel,
                                                            height: 70,
                                                            padding: '0 0 0 9',
                                                            width: 165,
                                                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/OutpostProductLevel.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                                            iconAlign: 'left',
                                                            ui: 'snapshot-navigation-btn',
                                                            toggleGroup: res.header.navigation.toggleGroup,
                                                            enableToggle: true,
                                                            handler: function() {
                                                                navigateTo(res.link.outpostStockLevelCurrent);
                                                            },
                                                            text: '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Product status'
                                                        }, {
                                                            xtype: 'button',
                                                            id: res.header.navigation.alerts,
                                                            height: 70,
                                                            padding: '0 0 0 9',
                                                            width: 105,
                                                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/Alerts.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                                            iconAlign: 'left',
                                                            ui: 'snapshot-navigation-btn',
                                                            toggleGroup: res.header.navigation.toggleGroup,
                                                            enableToggle: true,
                                                            handler: function() {
                                                                navigateTo(res.link.alerts);
                                                            },
                                                            text: '&nbsp;&nbsp;&nbsp;&nbsp;Alerts'
                                                        }, {
                                                            xtype: 'button',
                                                            id: res.header.navigation.messages,
                                                            height: 70,
                                                            padding: '0 0 0 15',
                                                            width: 130,
                                                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/ActivityHeaderIcon.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                                            iconAlign: 'left',
                                                            ui: 'snapshot-navigation-btn',
                                                            toggleGroup: res.header.navigation.toggleGroup,
                                                            enableToggle: true,
                                                            handler: function() {
                                                                navigateTo(res.link.seller);
                                                            },
                                                            text: '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Activity'
                                                        }
                                                                                                                                                                                                                 @*   , {
                                                            xtype: 'button',
                                                            id: res.header.navigation.analysisAndReports,
                                                            height: 70,
                                                            padding: '0 0 0 5',
                                                            width: 120,
                                                            icon:'@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/Analysis.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                                            iconAlign: 'left',
                                                            ui: 'snapshot-navigation-btn',
                                                            toggleGroup:res.header.navigation.toggleGroup,
                                                            enableToggle:true,
                                                            text: '&nbsp;&nbsp;&nbsp;&nbsp;Reports',
                                                            handler:function(){
                                                                navigateTo( res.link.analysisAndReports );
                                                            }}
                                                                                                             *@
                                                    ]
                                                }, {
                                                    xtype: 'container',
                                                    id: 'userInfo',
                                                    flex: 1,
                                                    minWidth: 300,
                                                    height: 70,
                                                    layout: {
                                                        align: 'stretch',
                                                        type: 'vbox',
                                                        pack: 'end'
                                                    },
                                                    items: [{
                                                        xtype: 'container',
                                                        flex: 1,
                                                        layout: {
                                                            align: 'stretch',
                                                            pack: 'end',
                                                            type: 'hbox'
                                                        },
                                                        items: [{
                                                            xtype: 'container',
                                                            width: 300,
                                                            layout: {
                                                                align: 'stretch',
                                                                type: 'vbox'
                                                            },
                                                            items: [{
                                                                    xtype: 'label',
                                                                    style: 'text-align:right; color: white;',
                                                                    margin: '13, 20, 7, 0',
                                                                    text: '@Html.Action("UserDetails", new { area=string.Empty,controller="Home" })',
                                                                    cls: 'x-username-label'
                                                                }, {
                                                                    xtype: 'container',
                                                                    style: 'text-align:right;',
                                                                    items: [{
                                                                            xtype: 'label',
                                                                            margin: '0, 20, 0, 0',
                                                                            cls: 'x-userMenu-label',
                                                                            style: {
                                                                                'color': 'white',
                                                                            },
                                                                            text: 'Help',
                                                                            //autoEl: { tag: 'a', href: '#' },
                                                                            listeners: {
                                                                                render: function(c) {
                                                                                    c.getEl().addCls('pseudolink');

                                                                                    c.getEl().on('click', function() {
                                                                                        var win = Ext.create('Ext.window.Window', {
                                                                                            title: 'Help - v. 0.5.0.0',
                                                                                            width: 400,
                                                                                            height: 320,
                                                                                            modal: true,
                                                                                            ui: 'snapshot-popup-window',
                                                                                            buttons: [
                                                                                                {
                                                                                                    text: 'Ok',
                                                                                                    margin: '10 10 20 0',
                                                                                                    ui: 'snapshot-add-btn',
                                                                                                    cls: 'x-add-button-gradient',
                                                                                                    handler: function() { win.close(); }
                                                                                                },
                                                                                            ],

                                                                                            layout: {
                                                                                                padding: 10,
                                                                                                type: 'fit'
                                                                                            },
                                                                                            items: [{
                                                                                                xtype: 'container',
                                                                                                padding: '10',
                                                                                                html: "<p>Support and help for all web users where any functionality" +
                                                                                                    " related to the system and solution is unavailable shall be processed" +
                                                                                                    " by email request.</p><br/> <p>Support is available from 08:00-18:00 GMT," +
                                                                                                    " (Monday to Friday except public holidays).</p><br/><p>Please contact us at" +
                                                                                                    " <a href='mailto:support@minoxsys.com' style='font-weight:bold; color:black'>" +
                                                                                                    "support@minoxsys.com</a><br/>Acknowledgement shall be received within one (1) " +
                                                                                                    "business hour from receipt of report and resolution target is five (5) days for" +
                                                                                                    " 95% of incidents.</p>",
                                                                                                style: {
                                                                                                    'text-align': 'justify',
                                                                                                    'color': '#222',
                                                                                                    'line-height': '1.5',
                                                                                                }
                                                                                            }],
                                                                                        });
                                                                                        win.show();

                                                                                        //alert("Support and help for all web users where any functionality related to the system and solution is unavailable shall be processed by email request. \nSupport is available from 08:00-18:00 GMT, (Monday to Friday except public holidays).\n\nPlease contact us at support@minoxsys.com\nAcknowledgement shall be received within one (1) business hour from receipt of report and resolution target is five (5) days for 95% of incidents.");
                                                                                    });

                                                                                }
                                                                            }
                                                                        }, {
                                                                            xtype: 'label',
                                                                            margin: '0, 20, 0, 0',
                                                                            cls: 'x-userMenu-label',
                                                                            style: 'color: white;',
                                                                            text: ' · Account Options ·',
                                                                            autoEl: { tag: 'a', href: '@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "AccountOptions", action = "Overview" })' }
                                                                        }, {
                                                                            xtype: 'label',
                                                                            text: 'Log Out',
                                                                            margin: '0, 20, 0, 0',
                                                                            cls: 'x-userMenu-label',
                                                                            style: 'color: white;',
                                                                            autoEl: { tag: 'a', href: '@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "Account", action = "LogOff" })' }
                                                                        }, {
                                                                            xtype: 'image',
                                                                            src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Logout.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                                                            margin: '-4 10 0 -15'
                                                                        }]
                                                                }]
                                                        }]
                                                    }]
                                                }]
                                        }, {
                                            xtype: 'container',
                                            id: res.header.subnavigation.id,
                                            style: { background: '#DDDDAA' },
                                            height: 37,
                                            layout: {
                                                align: 'stretch',
                                                type: 'hbox'
                                            }
                                        }]
                                }, {
                                    xtype: 'container',
                                    id: res.content.id,
                                    layout: {
                                        type: 'fit'
                                    },
                                    flex: 1
                                }]
                        }]
                    }]
                });
            });

        </script>

        @RenderBody()
    </body>
</html>
