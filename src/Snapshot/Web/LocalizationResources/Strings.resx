<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoGeneratedEmail" xml:space="preserve">
    <value>This is an automatically generated email message. Please do not reply.</value>
  </data>
  <data name="StockBellowLimitEmailSubject" xml:space="preserve">
    <value>Stock below limit</value>
  </data>
  <data name="StockBellowLimitEmailBody" xml:space="preserve">
    <value>Seller: {1} {0}Product below limit: {2} {0}Current stock: {3} {0}Minimum limit set at: {6} {0}Contact details: {4} {0}{0}{5}</value>
  </data>
  <data name="IncorrectSMSAlertSubject" xml:space="preserve">
    <value>Incorrect SMS alert</value>
  </data>
  <data name="TwoConsecutiveInvalidSMSEmailBody" xml:space="preserve">
    <value>Seller {0} with phone number {1} has send the second consecutive invalid SMS. Please assist.</value>
  </data>
  <data name="PhoneNumberNotActive" xml:space="preserve">
    <value>Phone number not active. Please activate your phone number to send update stock messages.</value>
  </data>
  <data name="InvalidFileSelectedForUpload" xml:space="preserve">
    <value>The file selected is invalid. Please choose another one.</value>
  </data>
  <data name="InactiveSellerDetectedSubject" xml:space="preserve">
    <value>Inactive seller detected</value>
  </data>
  <data name="InactiveSellerDetectedBody" xml:space="preserve">
    <value>The following sellers have not sent stock or sell updates in {0} days:
</value>
  </data>
  <data name="SenderIsUnknown" xml:space="preserve">
    <value>Sender is unknown.</value>
  </data>
  <data name="PhoneNumberNotRecognized" xml:space="preserve">
    <value>Phone number not recognized. Please register your phone number to send messages.</value>
  </data>
  <data name="DistrictInputModel_Name_Name_for_district_is_required" xml:space="preserve">
    <value>Name for district is required</value>
  </data>
  <data name="RegionInputModel_Id_Region_is_required" xml:space="preserve">
    <value>Region is required</value>
  </data>
  <data name="InvalidCodesPart1" xml:space="preserve">
    <value>Invalid codes:{0}.</value>
  </data>
  <data name="InvalidCodesPart2" xml:space="preserve">
    <value>Others updated successfully.</value>
  </data>
  <data name="InvalidSmsReceived" xml:space="preserve">
    <value>Invalid sms: {0}{1}Please call this toll free number to get assistance: +000000000000</value>
  </data>
  <data name="InvalidMessageFormat" xml:space="preserve">
    <value>Invalid message format.</value>
  </data>
  <data name="At_least_one_product_specification_is_invalid" xml:space="preserve">
    <value>At least one product specification is invalid.</value>
  </data>
  <data name="StockBellowLimitSmsBody" xml:space="preserve">
    <value>LOW STOCK: Seller: {1} {0}Product: {2} {0}Stock: {3} {0} {0}Contact: {4}</value>
  </data>
  <data name="2ndMistakeSmsToManager" xml:space="preserve">
    <value>2nd mistake for: {0}({1}), MSG: {2}</value>
  </data>
  <data name="LastSmsInvalidNoFollowUpSmsMessage" xml:space="preserve">
    <value>Seller: {0}({1}). Last message sent invalid and no follow-up in over 4 hours. Message sent at {2}</value>
  </data>
  <data name="Upload_The_file_uploaded_succesfully" xml:space="preserve">
    <value>The stock update was successful.</value>
  </data>
  <data name="CSV_file_parsing_has_failed" xml:space="preserve">
    <value>CSV file parsing has failed. Please check the contents of the CSV file to be valid.</value>
  </data>
  <data name="StockUpdateSuccessConfirmation" xml:space="preserve">
    <value>Stock updated successfully! Thank you for your message.</value>
  </data>
  <data name="CSV_file_failed_products" xml:space="preserve">
    <value>The file uploaded successfully. The following Products could not be updated:</value>
  </data>
  <data name="CSV_file_failed_outposts" xml:space="preserve">
    <value>The file uploaded successfully. The following Sellers could not be updated:</value>
  </data>
  <data name="CSV_outposts_file_uploaded_successfully" xml:space="preserve">
    <value>The Sellers update was succesful.</value>
  </data>
  <data name="EmailAppActivityText" xml:space="preserve">
    <value>Email sent to {0}. Email Message: {1}</value>
  </data>
  <data name="MoreThanTwoConsecutiveInvalidSMSEmailBody" xml:space="preserve">
    <value>Seller {0} with phone number {1} has send three or more consecutive invalid SMSes. Please assist.</value>
  </data>
  <data name="AccountController_LogOn_The_user_name_or_password_provided_is_incorrect_" xml:space="preserve">
    <value>The user name or password provided is incorrect.</value>
  </data>
  <data name="ChangePasswordModel_ChangePasswordModel_The_new_password_and_confirmation_password_do_not_match_" xml:space="preserve">
    <value>The new password and confirmation password do not match.</value>
  </data>
  <data name="StoreProductLevelRequestDetailService_GetReqMessage_No_product_s__for_this_seller_matched_those_assigned_to_this_product_level_request" xml:space="preserve">
    <value>No product(s) for this seller matched those assigned to this product level request</value>
  </data>
</root>