
@using Web.Areas.OutpostManagement.Models.StockLevel


@model OutpostStockLevelOutputModel


@section page_title{
OutpostManagement Countries: Overview
}
@section title_bar{
}
@section breadcrumbs{
    @Url.HomeLink("Outpost Administration")
> OutpostStock Level
}

@section master_content{

    @if (!string.IsNullOrWhiteSpace(Model.Error))
    {
        <div class="error">
            @Model.Error 
        </div>
    }
    
 

     <div class="page_header_buttons">
        @*@(Html.ActionLink<CountryController>(it => it.Create(), "Add new Country", OutpostManagementAreaRegistration.DEFAULT_ROUTE))*@
    </div>
 
    <div>
    <table id="Header">
        <thead>
            <tr>
                <th>
                </th>
                <th></th>
                <th></th>
                <th>
                     <label><input type="text" 
                                   id="StockLevelSearch" 
                                   name="StockLevelSearch" 
                                   maxlength="50" 
                                   style="width:200px; 
                                   height   :30px; 
                                   margin-left:0px" /> 
                       </label>
                </th>
            </tr>
        </thead>
    </table>
    </div>



@using (Html.BeginForm<StockLevelController>(m => m.CreateOutpostStockLevel(null, Model.OutpostId), FormMethod.Post))
{
    @Html.HiddenFor(m=>m.OutpostId)
    @Html.HiddenFor(m => m.ProductGroupName)
  
    <div>
        <label id="OutpostId"> @Model.OutpostName</label>
    </div>
    
    <div>
    &nbsp;
    </div>

    <div class="row">
    <label>
                     Product Group:</label>
                    <select name="ProductGroupId" id="ProductGroupId">
                        <option value="@Guid.Empty">- Select a Product Group - </option>
                        @{
                            foreach (var item in Model.ProductGroups)
                            {
                               <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
     </div>
    
    
            <div>
            @{
                Html.RenderPartial("OverviewProducts", Model);
            }
            </div>
                            
            <div>
                &nbsp;
            </div>
    
            <div>
                @Html.SubmitButton("submit-form", "Save") 
             </div>
           <div>
                &nbsp;
            </div>

          <div id="stocklevel-overview">          

                <table id="ProductsSelection">
                    <thead>
                        <tr>
                            <th  class="sort-alpha">
                                Group Name
                            </th>
                            <th  class="sort-alpha">
                                Product Name
                            </th>
                             <th>
                                SMS Reference Code
                           </th>
                             <th>
                                Product Stock Level
                           </th>
                             <th>
                                Update
                           </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                var itemNo = 0;
                        }
                        @foreach (var item in Model.StockLevels)
                        {
                            var _class = (itemNo++ % 2 == 0) ? "odd" : "even";
       
                            <tr>
                                 <td>@item.ProductGroupName
                                </td>
                                <td>@item.ProductName
                                </td>
                                <td>@item.ProdSmsRef
                                </td>
                                <td>@item.PrevStockLevel
                                </td>
                                <td>@item.Updated
                                </td>
                            </tr> 
                        }
                    </tbody>
                </table>
            </div>
                
}
}


@section scripts{
    <script type="text/javascript">

                 $(function () {
                               $('#ProductGroupId').change(onProductGroupChanged);
                           });



        function onProductGroupChanged() {
            
            var e = $(this)[0];
            var selectedProductGroupId = e.options[e.selectedIndex].value;

            
            var reg = document.getElementById("Products");
 
            
            $("#Products option[value='@Guid.Empty.ToString()']").remove();
            var drop = $("#products-overview");
            drop.html('');


            var urlOverview = '@Url.Action("OverviewProducts")?outpostId=@Model.OutpostId&productGroupId=' + selectedProductGroupId;
            $.get(urlOverview, function (data) {
             $('#products-overview').html(data);
          });
        };

        function onStockLevelChanged() {

            var e = $(this)[0];
            var selectedProductGroupId = e.options[e.selectedIndex].value;
            debugger;



            $("#Products option[value='@Guid.Empty.ToString()']").remove();
            var drop = $("#stocklevel-overview");
            drop.html('');


            var urlOverview = '@Url.Action("OverviewStockLevel")?outpostId=@Model.OutpostId&productGroupId=' + selectedProductGroupId;
            $.get(urlOverview, function (data) {
                $('#stocklevel-overview').html(data);
            });
        };
        
    </script>
}


