@using Web.Areas.OutpostManagement.Models.StockLevel


@model OutpostStockLevelOverviewModel


@section page_title{
OutpostManagement Countries: Overview
}
@section title_bar{
}
@section breadcrumbs{
    @Url.HomeLink("Outpost Administration")
> OutpostStock Level
}

@section master_content{

    @if (!string.IsNullOrWhiteSpace(Model.Error))
    {
        <div class="error">
            @Model.Error 
        </div>
    }
  
     <div class="page_header_buttons">
        @*@(Html.ActionLink<CountryController>(it => it.Create(), "Add new Country", OutpostManagementAreaRegistration.DEFAULT_ROUTE))*@
    </div>
   @Html.Hidden(Model.OutpostId.ToString())
   @Html.Hidden(Model.ProductGroupId.ToString())
   @Html.Hidden(Model.Products.ToString())
   @Html.Hidden(Model.StockLevels.ToString())

    <table id="Header">
        <thead>
            <tr>
                <th>
                </th>
                <th></th>
                <th></th>
                <th>
                     <label>Search:<input type="text" 
                                   id="StockLevelSearch" 
                                   name="StockLevelSearch" 
                                   maxlength="50" 
                                   style="width:200px; 
                                   height   :30px; 
                                   margin-left:0px" /> 
                       </label>
                </th>
            </tr>
        </thead>
    </table>

<div class="pager">
  @* @Html.PageLinks(Model.PagingInfo, x => Url.Action("Overview", new {page = x})) *@
</div>

@*@{Html.BeginForm("CreateOutpostStockLevel", "StockLevel", this.Model, FormMethod.Post);}*@

@{Html.BeginForm();}



<div> 
<label id="OutpostName"> @Model.OutpostName</label>
</div>
<div>
<label id="OutpostID"> @Model.OutpostId</label>
</div>
    <div>
    &nbsp;</div>

    <div>
    &nbsp;</div>

<div class="row">
<label>
                     Product Group:</label>
                    <select name="ProductGroupName" id="ProductGroupId">
                        <option value="@Guid.Empty">- Select a Product Group - </option>
                        @{
                            foreach (var item in Model.ProductGroups)
                            {
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
                    </div>
     <div>
    &nbsp;</div>
    <div>
    @{
        Html.RenderPartial("OverviewProducts", Model.Products);
    }
    <div>
    &nbsp;
    </div>
    <div>
      @Html.SubmitButton("submit-form", "Save") 
    </div>

    @{
        Html.RenderPartial("OverviewStockLevel", Model.StockLevels);
    }

@{Html.EndForm();}

 @{Html.BeginForm<StockLevelController>(m => m.CreateOutpostStockLevel(@Model), FormMethod.Post, new { @class = "save-model-form", @Model.ProductGroupId });}
 @Html.Button("save-model-special", "Save Special", HtmlButtonType.Submit)
 @{Html.EndForm();}



</div>

}

@section scripts{
    <script type="text/javascript">
        $(function () {
            $(".delete-user-form").submit(function () {
                return confirm('Are you sure that you want to delete this Outpost?');
            });

            $('#ProductGroupId').change(onProductGroupChanged);
            $('#ProductGroupId').change(onStockLevelChanged);
        });



        function onProductGroupChanged() {
            
            var e = $(this)[0];
            var selectedProductGroupId = e.options[e.selectedIndex].value;
            
            var reg = document.getElementById("Products");

            $("#Products option[value='@Guid.Empty.ToString()']").remove();
            var drop = $("#products-overview");
            drop.html('')

            var urlOverview = '@Url.Action("OverviewProducts")?productGroupId=' + selectedProductGroupId;
            $.get(urlOverview, function (data) {
                $('#products-overview').html(data);
            });


            };

            function onStockLevelChanged() {

                var e = $(this)[0];
                var selectedProductGroupId = e.options[e.selectedIndex].value;
                var reg = document.getElementById("OutpostId");

                $("#Products option[value='@Guid.Empty.ToString()']").remove();
                var drop = $("#stocklevel-overview");
                drop.html('')

                var urlOverview = '@Url.Action("OverviewStockLevel")?productGroupId=' + selectedProductGroupId;
                $.get(urlOverview, function (data) {
                    $('#stocklevel-overview').html(data);
                });


            };

            $(function () {

                // Add onclick handler to checkbox w/id checkme
                $("input[type='checkbox']").click(function () {
                    var productId = $(this).attr('name');
                    alert("hhhhhhh");
                    

                    // If checked
                    if ($(this).is(":checked")) {
                    }
                    else {
                    }

                });
            });

    </script>
}

