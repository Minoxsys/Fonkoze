 

@model  Web.Areas.OutpostManagement.Models.Outpost.OutpostOutputModel

           
@section breadcrumbs{
    @Url.HomeLink("Outpost Administration") / @(Html.ActionLink<OutpostController>(act => act.Overview(@Model.Region.CountryId, @Model.Region.Id , @Model.District.Id), "Outposts Overview", OutpostManagementAreaRegistration.DEFAULT_ROUTE))
    > Edit Outpost : @Model.Name}
@section page_title{

}
@section title_bar{
 
}

@section master_content{
    @{Html.BeginForm();}
   <div style="display: none">
        @Html.HiddenFor(m => m.Client.Id)
        @Html.HiddenFor(m => m.Region.CountryId)
        @Html.HiddenFor(m => m.Region.Id)
        @Html.HiddenFor(m => m.District.Id)

    </div>
    <div class="row of-2">
                 <label>
                        Country:</label>
                    <select name="@(Html.NameFor(m => m.Countries))">
                        <option value="@Guid.Empty">- Select a country - </option>
                        @{
                            foreach (var item in Model.Countries)
                            {
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
                    <label>
                        Region:</label>
                    @Html.DropDownList("Regions", Model.Regions, new { onChange = "onRegionChanged()" })
                    <label>
                        District:</label>
                    @Html.DropDownList("Districts", Model.Districts, new { onChange = "onDistrictChanged()" })


    </div>

     <div>
            <fieldset class="fieldsCollection ">
                @{
                    Html.RenderPartial("OutpostInput", Model);     
                }
            </fieldset>

            &nbsp;
                  @Html.SubmitButton("submit-form", "Save") <span>or </span>
                 <a href="@(Html.BuildUrlFromExpression<OutpostController>(it => it.Overview(@Model.Region.CountryId, @Model.Region.Id, @Model.District.Id)))">
                        Cancel</a>
            &nbsp;
                <fieldset class="fieldsContacts ">
                    @{
                        Html.RenderPartial("OverviewContacts", Model);     
                    }
                </fieldset>
    </div>
   
    @{Html.EndForm();}
}


@section master_actions{
    @*<h3>
        Actions</h3>
    <div class="page_header_buttons">*@

        @*
         <div style="margin:50px 0px 5px 0px"> 
            @(Html.DeleteButton<OutpostController>(it => it.Delete(Model.Id), OutpostManagementAreaRegistration.DEFAULT_ROUTE))
        </div>
        *@     
    
}
@section scripts{
    <script type="text/javascript">
        $("select[name='@Html.NameFor(m => m.Region.CountryId)'] option[value='@Guid.Empty.ToString()']").remove();

     $(function () {
         $("select[name='@Html.NameFor(m=>m.Countries)']").change(onCountryChanged);
    });


    function onCountryChanged() {
        var e = $(this)[0];
        var selectedCountryId = e.options[e.selectedIndex].value;

        $.getJSON('@Url.Action("GetRegionsForCountry", "District")?countryId=' + selectedCountryId, function (data) {
            var drop = $("#Regions")
            drop.html('');

            var drop = $("#regions-overview")
            drop.html('');

            var ddlRegions = document.getElementById("Regions");
            var opt = document.createElement("option");
            opt.text = 'Please select a region';
            opt.value = '@Guid.Empty.ToString()';
            ddlRegions.options.add(opt);

            $.each(data, function () {
                var opt = document.createElement("option");
                opt.text = this['Text'];
                opt.value = this['Value'];
                ddlRegions.options.add(opt);
            });

        });

        $("select[name='@Html.NameFor(m => m.Countries)'] option[value='@Guid.Empty.ToString()']").remove();
    }

    function onRegionChanged() {
        var reg = document.getElementById("Regions");
        var selectedRegionId = reg.options[reg.selectedIndex].value;

        $.getJSON('@Url.Action("GetDistrictsForRegion", "Outpost")?regionId=' + selectedRegionId, function (data) {
            var drop = $("#Districts")
            drop.html('');

            var drop = $("#districts-overview")
            drop.html('');

            var ddlDistricts = document.getElementById("Districts");
            var opt = document.createElement("option");
            opt.text = 'Please select a district';
            opt.value = '@Guid.Empty.ToString()';
            ddlDistricts.options.add(opt);

            $.each(data, function () {
                var opt = document.createElement("option");
                opt.text = this['Text'];
                opt.value = this['Value'];
                ddlDistricts.options.add(opt);
            });

        });

        $("select[name='@Html.NameFor(m => m.Regions)'] option[value='@Guid.Empty.ToString()']").remove();
    }

    function onDistrictChanged() {

        var reg = document.getElementById("Districts");

        var selectedDistrictId = reg.options[reg.selectedIndex].value;

        $("#Districts option[value='@Guid.Empty.ToString()']").remove();
        var drop = $("#outpost-overview")
        drop.html('')

        var urlOverview = '@Url.Action("OverviewOutpost")?districtId=' + selectedDistrictId;
        $.get(urlOverview, function (data) {
            console.log(data);
            $('#outpost-overview').html(data);
        });

    }

    $(function () {

        // Add onclick handler to checkbox w/id checkme
        $("input[type='checkbox']").click(function () {
            var phoneId = $(this).attr('name');

            // If checked
            if ($(this).is(":checked")) {
                uncheckAllExcept(phoneId);
                $.getJSON('@Url.Action("SetCheckContactMainMethod", "Contact")?phoneId=' + phoneId)
            }
            else {
                $.getJSON('@Url.Action("SetUncheckContactMainMethod", "Contact")?phoneId=' + phoneId)
            }

        });
    });

    function uncheckAllExcept(phoneId) {
        $("input[type='checkbox']").each(function (idx, val) {
            var el = $(val);
            if (el.attr('name') !== phoneId) {
                el.attr('checked', false);
                el.attr('value', false);
            }

        });
    }

    $(function () {
        $(".delete-user-form").submit(function () {
            return confirm('Are you sure that you want to delete this Contact?');
        });
    });

    </script>
}