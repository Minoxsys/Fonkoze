@using Web.Areas.OutpostManagement.Models.Outpost

@model OutpostOutputModel
           
@Html.HiddenFor(m => m.Region.CountryId)
@Html.HiddenFor(m => m.Region.Id)
@Html.HiddenFor(m => m.District.Id)
           
@section breadcrumbs{
    @Url.HomeLink("Outpost Administration") / @(Html.ActionLink<OutpostController>(act => act.Overview(null, null, null), "Outposts Overview", OutpostManagementAreaRegistration.DEFAULT_ROUTE))
> Create
}
@section page_title{
OutpostManagement : Outpost : Create
}

@section title_bar{
}
@section master_content{
    <div class="row of-2">
                 <label>
                        Country:</label>
                    <select name="@(Html.NameFor(m => m.Countries))">
                        <option value="@Guid.Empty">- Select a country - </option>
                        @{
                            foreach (var item in Model.Countries)
                            {
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
                    <label>
                        Region:</label>
                    @Html.DropDownList("Regions", Model.Regions, new { onChange = "onRegionChanged()" })
                    <label>
                        District:</label>
                    @Html.DropDownList("Districts", Model.Districts, new { onChange = "onDistrictChanged()" })


    </div>
      @{Html.BeginForm<OutpostController>(r => r.Create());}
    <fieldset class="fieldsCollection ">
        @{
            Html.RenderPartial("OutpostInput", Model);     
        }
    </fieldset>
    @Html.SubmitButton("submit-form", "Save") <span>or </span><a href="@(Html.BuildUrlFromExpression<OutpostController>(it => it.Overview(null, null, null)))">
        Cancel</a>
    @{Html.EndForm();}
}

@section scripts{
<script type="text/javascript">
    $(function () {
         $("select[name='@Html.NameFor(m=>m.Countries)']").change(onCountryChanged);
    });


    function onCountryChanged() {
        var e = $(this)[0];
        var selectedCountryId = e.options[e.selectedIndex].value;

        $.getJSON('@Url.Action("GetRegionsForCountry", "District")?countryId=' + selectedCountryId, function (data) {
            var drop = $("#Regions")
            drop.html('');

            var drop = $("#regions-overview")
            drop.html('');

            var ddlRegions = document.getElementById("Regions");
            var opt = document.createElement("option");
            opt.text = 'Please select a region';
            opt.value = '@Guid.Empty.ToString()';
            ddlRegions.options.add(opt);

            $.each(data, function () {
                var opt = document.createElement("option");
                opt.text = this['Text'];
                opt.value = this['Value'];
                ddlRegions.options.add(opt);
            });

        });

        $("select[name='@Html.NameFor(m => m.Countries)'] option[value='@Guid.Empty.ToString()']").remove();
    }

    function onRegionChanged() {
        var reg = document.getElementById("Regions");
        var selectedRegionId = reg.options[reg.selectedIndex].value;

        $.getJSON('@Url.Action("GetDistrictsForRegion", "Outpost")?regionId=' + selectedRegionId, function (data) {
            var drop = $("#Districts")
            drop.html('');

            var drop = $("#districts-overview")
            drop.html('');

            var ddlDistricts = document.getElementById("Districts");
            var opt = document.createElement("option");
            opt.text = 'Please select a district';
            opt.value = '@Guid.Empty.ToString()';
            ddlDistricts.options.add(opt);

            $.each(data, function () {
                var opt = document.createElement("option");
                opt.text = this['Text'];
                opt.value = this['Value'];
                ddlDistricts.options.add(opt);
            });

        });

        $("select[name='@Html.NameFor(m => m.Regions)'] option[value='@Guid.Empty.ToString()']").remove();
    }

    function onDistrictChanged() {

        var reg = document.getElementById("Districts");

        var selectedDistrictId = reg.options[reg.selectedIndex].value;

        $("#Districts option[value='@Guid.Empty.ToString()']").remove();
        var drop = $("#outpost-overview")
        drop.html('')

        var urlOverview = '@Url.Action("OverviewOutpost")?districtId=' + selectedDistrictId;
        $.get(urlOverview, function (data) {
            console.log(data);
            $('#outpost-overview').html(data);
        });

    }


    
     </script>
}
