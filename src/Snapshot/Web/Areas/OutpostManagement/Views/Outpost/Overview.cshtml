@using Web.Areas.OutpostManagement.Models.Outpost

@model OutpostOverviewModel
           
@section page_title
{
OutpostManagement Outposts: Overview
}

@section title_bar
{
}

@section breadcrumbs
{
   @Url.HomeLink("Outpost Administration") > Outposts
   }

@section master_content
{

    @if (Model.Error != null)
    {
        <div class="error">
            @Model.Error
        </div>
        
    }

    <div class="page_header_buttons">
        @(Html.ActionLink<OutpostController>(it => it.Create(), "Add new Outpost", OutpostManagementAreaRegistration.DEFAULT_ROUTE))
    </div>
 
    <div>
    <table id="DistrictSearch">
        <thead>
            <tr>
                <th>
                    <label for="@Html.NameFor(m => m.Country.Id)">
                        Country</label>
                    <select name="@Html.NameFor(m => m.Country.Id)">
                        <option value="@Guid.Empty.ToString()">- Select Country - </option>
                        @foreach (var item in Model.Countries)
                        { 
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                        }
                    </select>
                   </th>
                <th>
                 <label for="@Html.NameFor(m => m.Region.Id)">
                    Region</label>
               <select name="@Html.NameFor(m => m.Region.Id)">
               <option value="@Guid.Empty.ToString()">- Select Region - </option>
                </select>
                </th>
                <th>
                     <label for="@Html.NameFor(m => m.District.Id)">
                        District</label>
                    <select name="@Html.NameFor(m => m.District.Id)">
                         <option value="@Guid.Empty.ToString()">- Select District - </option>
                   </select>
                </th>
                <th>
                     <label>Search:
                                   
                       </label>
                
                <input type="text" 
                                   id="outpostSearch" 
                                   name="outpostSearch" 
                                   maxlength="50" 
                                   style="width:200px; 
                                   height   :30px; 
                                   margin-left:0px" 
                                   align="right"/> </th>
         </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    </div>

    @{
        Html.RenderPartial("OverviewOutpost", Model.Outposts);
    }
}

@section master_actions{
    @{
        Html.RenderPartial("~/Views/Shared/_OutpostManagementActions.cshtml");
    }
}


@section scripts{
    <script type="text/javascript">

       $("select[name='@Html.NameFor(m => m.Country.Id)']").change(function () {

            var e = $(this)[0];
            var selectedCountryId = e.options[e.selectedIndex].value;

            $.getJSON('@Url.Action("GetRegionsForCountry", "District")?countryId=' + selectedCountryId, function (data) {
                var drop = $("select[name='@Html.NameFor(m => m.Region.Id)']")
                drop.html('')

                var opt = document.createElement("option");
                opt.text = "- Select Region -";
                opt.value = '@Guid.Empty.ToString("n")';

                drop.append(opt);

                $.each(data, function () {
                    var opt = document.createElement("option");
                    opt.text = this['Text'];
                    opt.value = this['Value'];

                    drop.append(opt);
                });

            });

            $("select[name='@Html.NameFor(m => m.Region.CountryId)'] option[value='@Guid.Empty.ToString()']").remove();
        });


        $("select[name='@Html.NameFor(m => m.Region.Id)']").change(function () {

            var e = $(this)[0];
            var selectedRegionId = e.options[e.selectedIndex].value;

            $.getJSON('@Url.Action("GetDistrictsForRegion", "Outpost")?regionId=' + selectedRegionId, function (data) {
                var drop = $("select[name='@Html.NameFor(m => m.District.Id)']")
                drop.html('')

                var opt = document.createElement("option");
                opt.text = "- Select District -";
                opt.value = '@Guid.Empty.ToString("n")';

                drop.append(opt);

                $.each(data, function () {
                    var opt = document.createElement("option");
                    opt.text = this['Text'];
                    opt.value = this['Value'];

                    drop.append(opt);
                });

                 $("select[name='@Html.NameFor(m=>m.District.Id)']").change(onDistrictChanged);

            });

        });

        $(function () {
            $(".delete-user-form").submit(function () {
                return confirm('Are you sure that you want to delete this Outpost?');
            });
        });


        function onDistrictChanged() {

            var e = $(this)[0];
            var selectedDistrictId = e.options[e.selectedIndex].value;

            var drop = $("#outpost-overview");

            var urlOverview = '@Url.Action("OverviewOutpost")?districtId=' + selectedDistrictId;
            $.get(urlOverview, function (data) {

                drop.html('');

                $('#outpost-overview').html(data);
            });

        };

        //search for ouposts by Name

        jQuery.expr[":"].containsNoCase = function (el, i, m) {
            var search = m[3];
            if (!search) return false;
            return eval("/" + search + "/i").test($(el).text());
        };

        jQuery(document).ready(function () {

            // cancel the search if the user presses the ESC key
            jQuery('#outpostSearch').keyup(function (event) {
                if (event.keyCode == 27) {
                    resetSearch();
                }
            });

            // execute the search
            jQuery('#outpostSearch').keyup(function () {
                // only search when there are 3 or more characters in the textbox
                if (jQuery('#outpostSearch').val().length > 0) {
                    // hide all rows
                    jQuery('#Outposts tr').hide();
                    // show the header row
                    jQuery('#Outposts tr:first').show();
                    // show the matching rows (using the containsNoCase from Rick Strahl)
                    jQuery('#Outposts tr td:containsNoCase(\'' + jQuery('#outpostSearch').val() + '\')').parent().show();
                }
                else if (jQuery('#outpostSearch').val().length == 0) {
                    // if the user removed all of the text, reset the search
                    resetSearch();
                }

                // if there were no matching rows, tell the user
                if (jQuery('#Outposts tr:visible').length == 1) {
                    // remove the norecords row if it already exists
                    jQuery('.norecords').remove();
                    // add the norecords row
                    jQuery('#Outposts').append('<tr class="norecords"><td colspan="5" class="Normal">No records were found</td></tr>');
                }
            });
        });

        function resetSearch() {
            // clear the textbox
            jQuery('#outpostSearch').val('');
            // show all table rows
            jQuery('#Outposts tr').show();
            // remove any no records rows
            jQuery('.norecords').remove();
            // make sure we re-focus on the textbox for usability
            jQuery('#outpostSearch').focus();
        };
      
</script>
}


     