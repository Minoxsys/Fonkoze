@section page_title{
Campaign Management
}
@{
    Html.RenderPartial("_SubNavigation");
    Html.RenderPartial("_CampaignManagementSideBar");
}
<style>
    .x-grid-checkheader
    {
        height: 14px;
        background-image: url(''@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/unchecked.gif"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))'');
        background-position: 50% -2px;
        background-repeat: no-repeat;
        background-color: transparent;
    }
    
    .x-grid-checkheader-checked
    {
        background-image: url('@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/checked.gif"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))');
    }
    
    .x-grid-checkheader-editor .x-form-cb-wrap
    {
        text-align: center;
    }
</style>
<script type="text/javascript">

    Ext.onReady(function () {

        var administrationBtnId = window.res.header.navigation.administration;
        var administrationBtn = Ext.getCmp(administrationBtnId);
        administrationBtn.toggle(true);

        var campaignAdministrationBtnId = window.res.header.subnavigation.buttonTabs.campaign;
        var campaignAdministrationBtn = Ext.getCmp(campaignAdministrationBtnId);
        campaignAdministrationBtn.toggle(true);

        var smsRequestBtnId = window.res.content.maincontent.sidebar.smsRequest;
        var smsrequestBtn = Ext.getCmp(smsRequestBtnId);
        smsrequestBtn.toggle(true);


    });
</script>
<script type="text/javascript">

    Ext.onReady(function () {

        window.feature.campaignButtonId = 'campaignButtonId';
        window.feature.automaticScheduleButtonId = 'automaticScheduleButtonId';
        window.feature.createRequestsButtonId = 'createRequestsId';


        window.feature.searchCampaignName = 'Campaign-Search-Name';
        window.feature.wizardCampaignManagement = 'Wizard-Campaign-Management';
        window.feature.formCampaignNameId = 'Form-Campaign-Name';
        window.feature.formCampaignStartDateId = 'Form-Campaign-Start-Date';
        window.feature.formCampaignEndDateId = 'Form-Campaign-End-Date';
        window.feature.gridCountryLeft = 'Grid-Add-Country-Left';
        window.feature.gridCountryRight = 'Grid-Add-Country-Right';
        window.feature.gridRegionLeft = 'Grid-Add-Region-Left';
        window.feature.gridRegionRight = 'Grid-Add-Region-Right';
        window.feature.gridDistrictLeft = 'Grid-Add-District-Left';
        window.feature.gridDistrictRight = 'Grid-Add-District-Right';
        window.feature.gridOutpostLeft = 'Grid-Add-Outpost-Left';
        window.feature.gridOutpostRight = 'Grid-Add-Outpost-Right';
        window.feature.nextButton = 'Form-Add-Campaign-Next-Button';

        var navigate = function (panel, direction) {
            var layout = panel.getLayout();
            layout[direction]();
            Ext.getCmp(window.feature.campaignButtonId).setDisabled(!layout.getPrev());
            Ext.getCmp(window.feature.automaticScheduleButtonId).setDisabled(!layout.getNext());
        };

        Ext.QuickTips.init();

        window.feature.modalSchedule = Ext.define('Ext.feature.Schedule.Modal', {
            extend: 'Ext.window.Window',
            title: 'Schedule Automatic Product Level Request',
            height: 870,
            width: 1090,
            modal: true,
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
            items: [{
                xtype: 'tabpanel',
                activeTab: 0,
                align: 'stretch',
                height: 810,
                tabPosition: 'top',
                items: [{
                    title: 'Campaign',
                    items: [{
                        xtype: 'container',
                        margin: '20 0 20 0',
                        autoScroll: true,
                        layout: {
                            align: 'stretch',
                            type: 'vbox'
                        },
                        items: [{
                            xtype: 'container',
                            layout: {
                                type: 'hbox',
                            },
                            height: 70,
                            items:[{
                                xtype: 'container',
                                flex: 1,
                                layout: {
                                    type: 'column'
                                },
                                height:70,
                                items: [{
                                    xtype: 'container',
                                    height: 30,
                                    width: 30,
                                    html:'&nbsp;'
                                },{
                                    xtype: 'label',
                                    text: 'Campaign Administration',
                                },{
                                    xtype: 'button',
                                    margin: '0 0 0 20',
                                    text: 'Add New Campaign',
                                    handler: function(){
                                        var modalWindowAddCampaign = new window.feature.modalAddCampaignManagement();
                                        modalWindowAddCampaign.show();
                                    }
                                }]
                            },{
                                xtype: 'container',
                                flex: 1,
                                layout: {
                                    type: 'hbox',
                                    pack:'end'
                                },
                                height:70,
                                items: [{
                                    xtype: 'textfield',
                                    id: window.feature.searchCampaignName,
                                    width: 200,
                                    frame: true,
                                    emptyText: 'Campaign Search',
                                    enableKeyEvents: true,
                                    listeners: {
                                        'keyup': {
                                            fn: function(key) {
                                                var searchValue = Ext.getCmp(window.feature.searchCampaignName).getValue();
                                                window.feature.campaignStore.proxy.extraParams.searchValue = searchValue;
                                                window.feature.campaignStore.loadPage(1);
                                            }
                                        }
                                    }
                                }]
                            }]
                        }, 
                            window.feature.grid 
                        ]
                    }]
                },
                {
                    title: 'Automatic Schedule',
                    html: 'Automatic Schedule'
                }, {
                    title: 'Create product level requests',
                    html: 'requests'
                }]

            }]
        });

        //Campaign

        window.feature.campaignStore = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSuport: true,
            fields: ['Id', 'Name', 'StartDate', 'EndDate', 'CreationDate', 'Status'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetCampaigns" })',
                reader: {
                    type: 'json',
                    root: 'Campaigns',
                    totalProperty: 'TotalItems'
                },
                extraParams: { searchValue: '' },
                simpleSortMode: true
            },
            remoteSort: true,
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        window.feature.countryStore = Ext.create('Ext.data.Store', {
            remoteSuport: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(Web.Areas.OutpostManagement.OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Region", action = "GetCountries" })',
                reader: {
                    type: 'json',
                    root: 'Countries',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

         window.feature.regionStore = Ext.create('Ext.data.Store', {
            remoteSuport: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetRegions" })',
                reader: {
                    type: 'json',
                    root: 'Items',
                    totalProperty: 'TotalItems'
                },
                extraParams: { countryIdList: '' },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        window.feature.districtStore = Ext.create('Ext.data.Store', {
            remoteSuport: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetDistricts" })',
                reader: {
                    type: 'json',
                    root: 'Items',
                    totalProperty: 'TotalItems'
                },
                extraParams: { regionIdList: '' },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        window.feature.outpostStore = Ext.create('Ext.data.Store', {
            remoteSuport: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetOutposts" })',
                reader: {
                    type: 'json',
                    root: 'Items',
                    totalProperty: 'TotalItems'
                },
                extraParams: { districtIdList: '' },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        Ext.define('Ext.ux.CheckColumn', {
        extend: 'Ext.grid.column.Column',
        alias: 'widget.checkcolumn',
        
        tdCls: Ext.baseCSSPrefix + 'grid-cell-checkcolumn',
                
        constructor: function () {
            this.addEvents(
                'checkchange'
                );
            this.callParent(arguments);
        },
                
        processEvent: function (type, view, cell, recordIndex, cellIndex, e) {
            if (type == 'mousedown' || (type == 'keydown' && (e.getKey() == e.ENTER || e.getKey() == e.SPACE))) {
                var record = view.panel.store.getAt(recordIndex),
                dataIndex = this.dataIndex,
                checked = !record.get(dataIndex);

                hasStockLevels = record.get('HasStockLevels');
                if (hasStockLevels)
                    return false;
    
                record.set(dataIndex, checked);
                this.fireEvent('checkchange', this, recordIndex, checked);
                // cancel selection.
                return false;
            }
            else {
                return this.callParent(arguments);
            }
        },
    
        renderer: function (value, styles, record, recordIndex, columnIndex, store, gridView) {
            var cssPrefix = Ext.baseCSSPrefix,
            cls = [cssPrefix + 'grid-checkheader'];
    
            if (value) {
                cls.push(cssPrefix + 'grid-checkheader-checked');
            }
            return '<div class="' + cls.join(' ') + '">&#160;</div>';
        }
    });

        var stepNumber = 0;
        var campaign = {};

        window.feature.modalAddCampaignManagement = Ext.define('Ext.feature.campaign.Modal', {
            extend: 'Ext.window.Window',
            title: 'Add New Campaign',
            modal:true,
            height: 400,
            width: 800,
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [window.feature.wizardCampaignManagementContainer]

                });
                me.buttons = [{ 
                    text: 'Prev', 
                    handler: function () {
                        stepNumber--;
                    }
                },{
                    text: 'Cancel', 
                    handler: function () {
                        me.close(); 
                        me.destroy(); 
                    }
                }, {
                    text: 'Next', 
                    id: window.feature.nextButton,
                    handler: function () {
                        stepNumber++;
                        if (stepNumber == 1){
                            campaign.Name = window.feature.wizardCampaignManagementContainer.down('#'+ window.feature.formCampaignNameId).getValue(); 
                            campaign.StartDate = Ext.util.Format.date(window.feature.wizardCampaignManagementContainer.down('#'+ window.feature.formCampaignStartDateId).getValue()); 
                            campaign.EndDate = Ext.util.Format.date(window.feature.wizardCampaignManagementContainer.down('#'+ window.feature.formCampaignEndDateId).getValue()); 

                            me.remove(window.feature.wizardCampaignManagementContainer);
                            window.feature.countryStore.load();
                            me.add(window.feature.wizardCountryManagementContainer);
                            me.doLayout();
                        }

                        if (stepNumber == 2){
                            var ids = '';
                            var gridRightStore = Ext.getCmp(window.feature.gridCountryRight).getStore();
                            gridRightStore.each(function(record){
                                    ids = ids + record.get('Id') + ',';
                            });
                            window.feature.regionStore.proxy.extraParams.countryIdList = ids; 
                            campaign.Countries = ids;

                            me.remove(window.feature.wizardCountryManagementContainer);
                            window.feature.regionStore.load();
                            me.add(window.feature.wizardRegionManagementContainer);
                            me.doLayout();
                        }

                        if (stepNumber == 3){
                            var ids = '';
                            var gridRightStore = Ext.getCmp(window.feature.gridRegionRight).getStore();
                            gridRightStore.each(function(record){
                                    ids = ids + record.get('Id') + ',';
                            });
                            window.feature.districtStore.proxy.extraParams.regionIdList = ids; 
                            campaign.Regions = ids;

                            me.remove(window.feature.wizardRegionManagementContainer);
                            window.feature.districtStore.load();
                            me.add(window.feature.wizardDistrictManagementContainer);
                            me.doLayout();
                        }

                        if (stepNumber == 4){
                            Ext.getCmp(window.feature.nextButton).setText('Save');
                            var ids = '';
                            var gridRightStore = Ext.getCmp(window.feature.gridDistrictRight).getStore();
                            gridRightStore.each(function(record){
                                    ids = ids + record.get('Id') + ',';
                            });
                            window.feature.outpostStore.proxy.extraParams.districtIdList = ids; 
                            campaign.Districts = ids;

                            me.remove(window.feature.wizardDistrictManagementContainer);
                            window.feature.outpostStore.load();
                            me.add(window.feature.wizardOutpostManagementContainer);
                            me.doLayout();
                        }

                        if (stepNumber == 5){

                            var ids = '';
                            var gridRightStore = Ext.getCmp(window.feature.gridOutpostRight).getStore();
                            gridRightStore.each(function(record){
                                    ids = ids + record.get('Id') + ',';
                            }); 
                            campaign.Outposts = ids;

                            var values = { 
                                CampaignName:  campaign.Name,
                                StartDate:  campaign.StartDate,
                                EndDate:  campaign.EndDate,
                                CountriesIds: campaign.Countries,
                                RegionsIds: campaign.Regions,
                                DistrictsIds: campaign.Districts,
                                OutpostsIds: campaign.Outposts
                            };

                            var postToUrl = '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "Create" })';
                            var action = $.post(postToUrl, values);
                            action.success(function(serverResponse){
                                if(serverResponse.CloseModal ==false)
                                {
                                    Ext.Msg.alert(serverResponse.Status, serverResponse.Message);
                                }
                                else
                                {                                                    
                                    me.close();
                                    me.destroy();

                                    window.feature.campaignStore.loadPage(1); 
                                }
                            });

                        }
                        
                    }
                }],
                me.callParent(arguments);
            }
        });

        window.feature.wizardCampaignManagementContainer = Ext.create('Ext.container.Container', {
            id: window.feature.wizardCampaignManagement,
            flex: 1,
            margin: '20 0 0 20',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [{
                xtype: 'container',
                flex: 1,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'textfield',
                    fieldLabel: 'Campaign Name',
                    itemId: window.feature.formCampaignNameId,
                },{
                    xtype: 'datefield',
                    margin: '20 0 0 0',
                    fieldLabel: 'Start Date',
                    format: 'm/d/Y',
                    itemId: window.feature.formCampaignStartDateId,
                },{
                    xtype: 'datefield',
                    margin: '20 0 0 0',
                    fieldLabel: 'End Date',
                    format: 'm/d/Y',
                    itemId: window.feature.formCampaignEndDateId,
                }] 
            },{
                xtype: 'container',
                flex: 1,
            }]
        });

        var sml = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });
        var smr = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });

        var countryRightStore = Ext.create('Ext.data.ArrayStore', {
            fields: [
               {name: 'Id'},
               {name: 'Name'},     
            ]
        });

        window.feature.wizardCountryManagementContainer = Ext.create('Ext.container.Container', {
            id: window.feature.wizarCountryManagement,
            flex: 1,
            margin: '20 0 0 20',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'label',
                    text: 'Country',
                },{
                    xtype: 'gridpanel',
                    id: window.feature.gridCountryLeft,
                    store: window.feature.countryStore,
                    selModel: sml,
                    columnLines: true,
                    margin: '0 0 10 0',
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            },{
                xtype: 'container',
                flex: 1,
                layout: {
                    type: 'vbox',
                    align: 'center'
                },

                items: [{
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'vbox',
                        pack: 'center',
                    },
                    items: [{
                        xtype: 'button',
                        margin: '0 0 5 0',
                        width: 80,
                        text: 'Add',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridCountryRight);
                            var gridLeft = Ext.getCmp(window.feature.gridCountryLeft);

	                        Ext.each(gridLeft.getSelectionModel().getSelection(), function(row, index, value) {
                                var newValue = {
                                    Id: row.get('Id'), 
                                    Name: row.get('Name')
                                };
                                countryRightStore.insert(0, newValue);
	                        });
                        }
                    },{
                        xtype: 'button',
                        width: 80,
                        text: 'Remove',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridCountryRight);
                            var selection = gridRight.getSelectionModel().getSelection();

                            for (var i = 0; i < selection.length; i++) {
                                countryRightStore.remove(selection[i]);
                            }
                        }
                    }]

                }]
            },{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'container',
                    height: 25,
                    layout: {
                        type: 'hbox',
                    },
                    items: [{
                        xtype: 'label',
                        text: 'Country',
                        flex: 1,
                    }]
                },{
                    xtype: 'gridpanel',
                    id: window.feature.gridCountryRight,
                    store: countryRightStore,
                    selModel: smr,
                    columnLines: true,
                    margin: '0 40 10 0',
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            }]
        });


        var selModelRegionLeft = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });
        var selModelRegionRight = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });

        var regionRightStore = Ext.create('Ext.data.ArrayStore', {
            fields: [
               {name: 'Id'},
               {name: 'Name'},     
            ]
        });

        window.feature.wizardRegionManagementContainer  = Ext.create('Ext.container.Container', {
            id: window.feature.wizardRegionManagement,
            flex: 1,
            margin: '20 0 0 20',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'gridpanel',
                    id: window.feature.gridRegionLeft,
                    store: window.feature.regionStore,
                    margin: '0 0 10 0',
                    selModel: selModelRegionLeft,
                    columnLines: true,
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            },{
                xtype: 'container',
                flex: 1,
                layout: {
                    type: 'vbox',
                    align: 'center'
                },

                items: [{
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'vbox',
                        pack: 'center',
                    },
                    items: [{
                        xtype: 'button',
                        margin: '0 0 5 0',
                        width: 80,
                        text: 'Add',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridRegionRight);
                            var gridLeft = Ext.getCmp(window.feature.gridRegionLeft);

	                        Ext.each(gridLeft.getSelectionModel().getSelection(), function(row, index, value) {
                                var newValue = {
                                    Id: row.get('Id'), 
                                    Name: row.get('Name')
                                };
                                regionRightStore.insert(0, newValue);
	                        });
                        }
                    },{
                        xtype: 'button',
                        width: 80,
                        text: 'Remove',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridRegionRight);
                            var selection = gridRight.getSelectionModel().getSelection();

                            for (var i = 0; i < selection.length; i++) {
                                regionRightStore.remove(selection[i]);
                            }
                        }
                    }]

                }]
            },{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'gridpanel',
                    id: window.feature.gridRegionRight,
                    store: regionRightStore,
                    margin: '0 40 10 0',
                    selModel: selModelRegionRight,
                    columnLines: true,
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            }]
        });

        var selModelDistrictLeft = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });
        var selModelDistrictRight = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });

        var districtRightStore = Ext.create('Ext.data.ArrayStore', {
            fields: [
               {name: 'Id'},
               {name: 'Name'},     
            ]
        });

        window.feature.wizardDistrictManagementContainer  = Ext.create('Ext.container.Container', {
            id: window.feature.wizardDistrictManagement,
            flex: 1,
            margin: '20 0 0 20',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'gridpanel',
                    id: window.feature.gridDistrictLeft,
                    store: window.feature.districtStore,
                    margin: '0 0 10 0',
                    selModel: selModelDistrictLeft,
                    columnLines: true,
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            },{
                xtype: 'container',
                flex: 1,
                layout: {
                    type: 'vbox',
                    align: 'center'
                },

                items: [{
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'vbox',
                        pack: 'center',
                    },
                    items: [{
                        xtype: 'button',
                        margin: '0 0 5 0',
                        width: 80,
                        text: 'Add',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridDistrictRight);
                            var gridLeft = Ext.getCmp(window.feature.gridDistrictLeft);

	                        Ext.each(gridLeft.getSelectionModel().getSelection(), function(row, index, value) {
                                var newValue = {
                                    Id: row.get('Id'), 
                                    Name: row.get('Name')
                                };
                                districtRightStore.insert(0, newValue);
	                        });
                        }
                    },{
                        xtype: 'button',
                        width: 80,
                        text: 'Remove',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridDistrictRight);
                            var selection = gridRight.getSelectionModel().getSelection();

                            for (var i = 0; i < selection.length; i++) {
                                districtRightStore.remove(selection[i]);
                            }
                        }
                    }]

                }]
            },{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'gridpanel',
                    id: window.feature.gridDistrictRight,
                    store: districtRightStore,
                    margin: '0 40 10 0',
                    selModel: selModelDistrictRight,
                    columnLines: true,
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            }]
        });

        var selModelOutpostLeft = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });
        var selModelOutpostRight = Ext.create('Ext.selection.CheckboxModel',{
     	    checkOnly:true
	    });

        var outpostRightStore = Ext.create('Ext.data.ArrayStore', {
            fields: [
               {name: 'Id'},
               {name: 'Name'},     
            ]
        });

        window.feature.wizardOutpostManagementContainer  = Ext.create('Ext.container.Container', {
            id: window.feature.wizardOutpostManagement,
            flex: 1,
            margin: '20 0 0 20',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'gridpanel',
                    id: window.feature.gridOutpostLeft,
                    store: window.feature.outpostStore,
                    margin: '0 0 10 0',
                    selModel: selModelOutpostLeft,
                    columnLines: true,
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            },{
                xtype: 'container',
                flex: 1,
                layout: {
                    type: 'vbox',
                    align: 'center'
                },

                items: [{
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'vbox',
                        pack: 'center',
                    },
                    items: [{
                        xtype: 'button',
                        margin: '0 0 5 0',
                        width: 80,
                        text: 'Add',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridOutpostRight);
                            var gridLeft = Ext.getCmp(window.feature.gridOutpostLeft);

	                        Ext.each(gridLeft.getSelectionModel().getSelection(), function(row, index, value) {
                                var newValue = {
                                    Id: row.get('Id'), 
                                    Name: row.get('Name')
                                };
                                outpostRightStore.insert(0, newValue);
	                        });
                        }
                    },{
                        xtype: 'button',
                        width: 80,
                        text: 'Remove',
                        handler: function () {
                            var gridRight = Ext.getCmp(window.feature.gridOutpostRight);
                            var selection = gridRight.getSelectionModel().getSelection();

                            for (var i = 0; i < selection.length; i++) {
                                outpostRightStore.remove(selection[i]);
                            }
                        }
                    }]

                }]
            },{
                xtype: 'container',
                flex: 2,
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'gridpanel',
                    id: window.feature.gridOutpostRight,
                    store: outpostRightStore,
                    margin: '0 40 10 0',
                    selModel: selModelOutpostRight,
                    columnLines: true,
                    loadMask: true,
                    flex:3,
                    autoScroll:true,
                    columns: [{
                        text: "Name",
                        dataIndex: 'Name',
                        flex: 1,
                        sortable: true
                    }]
                }]
            }]
        });

        //window.feature.wizardSelectionContainer = Ext.create('Ext.container.Container', {


        window.feature.grid = Ext.create('Ext.grid.Panel', {
            store: window.feature.campaignStore,
            disableSelection: true,
            loadMask: true,
            columns: [{
                text: "Campaign Name",
                dataIndex: 'Name',
                sortable: true,
                flex: 1
            }, {
                text: "Start Date",
                dataIndex: 'StartDate',
                sortable: true,
                flex: 1
            }, {
                text: "End Date",
                dataIndex: 'EndDate',
                sortable: true,
                flex: 1
            }, {
                text: "Creation Date",
                dataIndex: 'CreationDate',
                sortable: true,
                flex: 1
            }, {
                xtype: 'actioncolumn',
                text: 'Actions',
                items: [{
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/edit.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                    tooltip: _t('Edit this campaign'),
                    handler: function (grid, rowIndex, colIndex) {
                    }
                }, {
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/open.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                    tooltip: _t('Reopen this campaign'),
                    handler: function (grid, rowIndex, colIndex) {
                    }
                }

            ]
            }],
            bbar: Ext.create('Ext.PagingToolbar', {
                store: window.feature.store,
                displayInfo: true,
                displayMsg: 'Displaying topics {0} - {1} of {2}',
                emptyMsg: "No topics to display"
            })
        });

        //End Campaign

        var contentRes = window.res.content;

        var mainContent = Ext.getCmp(contentRes.maincontent.id);
        mainContent.add({
            xtype: 'container',
            margin: '20 50 20 0',
            autoScroll: true,
            id: 'TopContainer',
            layout: {
                align: 'stretch',
                type: 'vbox'
            },
            items: [{
                xtype: 'fieldset',
                height: 200,
                defaults: { anchor: '100%' },
                layout: 'vbox',
                items: [{ xtype: 'container',
                    align: 'center',
                    padding: '60 50 0 500',
                    layout: { align: 'center', type: 'anchor' },
                    items: [{
                        xtype: 'button',
                        pack: 'end',
                        text: 'Schedule Automatic Product Level Request',
                        handler: function () {
                            var modalWindow = new window.feature.modalSchedule();
                            // modalWindow.items.items[0].items.items[0].title = 'Campaign';
                            modalWindow.show();
                        }
                    }]
                }, { xtype: 'label',
                    padding: '0 10 0 500',
                    text: 'Click to open'
                }]
            }]
        });


    });
</script>
