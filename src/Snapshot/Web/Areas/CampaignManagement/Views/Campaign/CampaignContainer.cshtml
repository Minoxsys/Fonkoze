<script type="text/javascript">
    Ext.onReady(function () {

        window.feature = {};
        window.feature.optionsSelected = [];
        window.feature.campaignButtonId = 'campaignButtonId';
        window.feature.countryButtonId = 'countryButtonId';
        window.feature.regionButtonId = 'regionButtonId';
        window.feature.districtButtonId = 'districtButtonId';
        window.feature.outpostButtonId = 'outpostButtonId';
        window.feature.countryRegionButtonId = 'countryRegion';
        window.feature.regionDistrictButtonId = 'regionDistrict';
        window.feature.districtOutpostButtonId = 'districtOutpost';
        window.feature.campaignCountryButtonId = 'campaignCountry';
        window.feature.modalMainContentContainerId = 'mainContentModalId';

        window.feature.wizardCountryId = 'wizardCountryId';
        window.feature.wizardRegionId = 'wizardRegionId';
        window.feature.wizardDistrictId = 'wizardDistrictId';
        window.feature.wizardOutpostId = 'wizardOutpostId';
        window.feature.wizardCampaignManagement = 'wizardCampaidId';

        window.feature.wizardSelectionContainer = Ext.create('Ext.container.Container', {
            layout: { type: 'hbox',
                align: 'stretch'
            },
            margin: '10 20 0 110',
            width: 900,
            items: [{
                xtype: 'button',
                height: 40,
                width: 40,
                text: '1',
                id: window.feature.campaignButtonId
            }, {
                xtype: 'container',
                padding: '8 0 0 0',
                layout: {
                    type: 'hbox'
                },
                items: [{
                    xtype: 'button',
                    height: 20,
                    width: 170,
                    id: window.feature.campaignCountryButtonId
                }]
            }, {
                xtype: 'button',
                height: 40,
                width: 40,
                text: '2',
                id: window.feature.countryButtonId
            }, {
                xtype: 'container',
                padding: '8 0 0 0',
                layout: {
                    type: 'hbox'
                },
                items: [{
                    xtype: 'button',
                    height: 20,
                    width: 150,
                    id: window.feature.countryRegionButtonId
                }]
            }, {
                xtype: 'button',
                height: 40,
                width: 40,
                text: '3',
                id: window.feature.regionButtonId
            }, {
                xtype: 'container',
                padding: '8 0 0 0',
                layout: {
                    type: 'hbox'
                },
                items: [{
                    xtype: 'button',
                    height: 20,
                    width: 150,
                    id: window.feature.regionDistrictButtonId
                }]
            }, {
                xtype: 'button',
                height: 40,
                width: 40,
                text: '4',
                id: window.feature.districtButtonId
            }, {
                xtype: 'container',
                padding: '8 0 0 0',
                layout: {
                    type: 'hbox'
                },
                items: [{
                    xtype: 'button',
                    height: 20,
                    width: 150,
                    id: window.feature.districtOutpostButtonId
                }]
            }, {
                xtype: 'button',
                height: 40,
                width: 40,
                text: '5',
                id: window.feature.outpostButtonId
            }]
        });
        window.feature.wizardSelectionLabelsContainer = Ext.create('Ext.container.Container', {
            layout: {
                type: 'hbox'
            },
            margin: '10 20 0 50',
            items: [{
                xtype: 'label',
                text: 'Campaign Management'
            }, {
                xtype: 'label',
                margin: '0 0 0 140',
                text: 'Country'
            }, {
                xtype: 'label',
                text: 'Region',
                margin: '0 0 0 150'
            }, {
                xtype: 'label',
                text: 'District',
                margin: '0 0 0 155'
            }, {
                xtype: 'label',
                text: 'Outpost',
                margin: '0 0 0 150'
            }]
        });


        window.feature.countryStore = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: false,
            fields: ['Id', 'Name', 'BelongsTo'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetCountries" })',
                reader: { type: 'json',
                    root: 'countries',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true

            },
            sorters: [{
                property: 'Name',
                direction: 'DESC'
            }]
        });
        window.feature.regionStore = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: false,
            fields: ['Id', 'Name', 'BelongsTo_LocationEntityName'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetRegions" })',
                extraParams: { EntitiesIds: [] },
                reader: { type: 'json',
                    root: 'regions',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true

            },
            sorters: [{
                property: 'Name',
                direction: 'DESC'
            }]
        });
        window.feature.districtStore = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: false,
            fields: ['Id', 'Name', 'BelongsTo_LocationEntityName'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetDistricts" })',
                extraParams: { EntitiesIds: [] },
                reader: { type: 'json',
                    root: 'districts',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true

            },
            sorters: [{
                property: 'Name',
                direction: 'DESC'
            }]
        });
        window.feature.outpostStore = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: false,
            fields: ['Id', 'Name', 'BelongsTo_LocationEntityName'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetOutposts" })',
                extraParams: { EntitiesIds: [] },
                reader: { type: 'json',
                    root: 'outposts',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true

            },
            sorters: [{
                property: 'Name',
                direction: 'DESC'
            }]
        });

        window.feature.CountryGetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            margin: '100 10 0 50',
            width: 250,
            store: window.feature.countryStore,
            loadMask: true,
            columns: [{
                text: "Name",
                sortable: true,
                dataIndex: 'Name',
                flex: 1
            }, {
                //                xtype: 'checkcolumn',
                //                text: 'Indoor?',
                //                dataIndex: 'Name',
                //                width: 55
            }]
        });
        window.feature.CountrySetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            loadMask: true,
            width: 250,
            margin: '100 0 0 80',
            // padding: '40 0 0 0',
            columns: [{
                text: 'Name',
                sortable: true,
                flex: 1
            }
            ]

        });

        window.feature.RegionGetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            margin: '100 10 0 50',
            width: 250,
            loadMask: true,
            store: window.feature.regionStore,
            columns: [{
                text: "Name",
                sortable: true,
                dataIndex: 'Name',
                flex: 1
            }]
        });
        window.feature.RegionSetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            loadMask: true,
            width: 250,
            margin: '100 0 0 80',
            // padding: '40 0 0 0',
            columns: [{
                text: 'Name',
                sortable: true,
                flex: 1
            }
            ]
        });

        window.feature.DistrictGetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            margin: '100 10 0 50',
            width: 250,
            loadMask: true,
            store: window.feature.districtStore,
            columns: [{
                text: "Name",
                sortable: true,
                dataIndex: 'Name',
                flex: 1
            }]
        });
        window.feature.DistrictSetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            loadMask: true,
            width: 250,
            margin: '100 0 0 80',
            // padding: '40 0 0 0',
            columns: [{
                text: 'Name',
                sortable: true,
                flex: 1
            }
            ]
        });

        window.feature.OutpostGetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            margin: '100 10 0 50',
            width: 250,
            store: window.feature.outpostStore,
            loadMask: true,
            columns: [{
                text: "Name",
                dataIndex: 'Name',
                sortable: true,
                flex: 1
            }]
        });
        window.feature.OutpostSetGrid = Ext.create('Ext.grid.Panel', {
            flex: 1,
            loadMask: true,
            width: 250,
            margin: '100 0 0 80',
            // padding: '40 0 0 0',
            columns: [{
                text: 'Name',
                sortable: true,
                flex: 1
            }
            ]
        });

        window.feature.wizardCountryContainer = Ext.create('Ext.container.Container', {
            layout: {
                type: 'hbox',
                align: 'fit'
            },
            id: window.feature.wizardCountryId,
            items: [{ xtype: 'label', text: 'Country' }, window.feature.CountryGetGrid,
            { xtype: 'container',
                layout: {
                    type: 'vbox',
                    align: 'fit'
                },
                items: [{ xtype: 'button',
                    margin: '150 100 0 140',
                    text: 'Add'
                }, { xtype: 'button',
                    margin: '10 100 0 140',
                    text: 'Remove'
                }]
            }, window.feature.CountrySetGrid]

        });
        window.feature.wizardRegionContainer = Ext.create('Ext.container.Container', {
            layout: {
                type: 'hbox',
                align: 'fit'
            },
            id: window.feature.wizardRegionId,
            items: [{ xtype: 'label', text: 'Region' }, window.feature.RegionGetGrid,
            { xtype: 'container',
                layout: {
                    type: 'vbox',
                    align: 'fit'
                },
                items: [{ xtype: 'button',
                    margin: '150 100 0 140',
                    text: 'Add'
                }, { xtype: 'button',
                    margin: '10 100 0 140',
                    text: 'Remove'
                }]
            }, window.feature.RegionSetGrid]

        });
        window.feature.wizardDistrictContainer = Ext.create('Ext.container.Container', {
            layout: {
                type: 'hbox',
                align: 'fit'
            },
            id: window.feature.wizardDistrictId,
            items: [{ xtype: 'label', text: 'District' }, window.feature.DistrictGetGrid,
            { xtype: 'container',
                layout: {
                    type: 'vbox',
                    align: 'fit'
                },
                items: [{ xtype: 'button',
                    margin: '150 100 0 140',
                    text: 'Add'
                }, { xtype: 'button',
                    margin: '10 100 0 140',
                    text: 'Remove'
                }]
            }, window.feature.DistrictSetGrid]

        });
        window.feature.wizardOutpostContainer = Ext.create('Ext.container.Container', {
            layout: {
                type: 'hbox',
                align: 'fit'
            },
            id: window.feature.wizardOutpostId,
            items: [{ xtype: 'label', text: 'Outpost' }, window.feature.OutpostGetGrid,
            { xtype: 'container',
                layout: {
                    type: 'vbox',
                    align: 'fit'
                },
                items: [{ xtype: 'button',
                    margin: '150 100 0 140',
                    text: 'Add'
                }, { xtype: 'button',
                    margin: '10 100 0 140',
                    text: 'Remove'
                }]
            }, window.feature.OutpostSetGrid]

        });
        window.feature.wizardCampaignManagementContainer = Ext.create('Ext.container.Container', {
            layout: {
                type: 'hbox'
            },
            id: window.feature.wizardCampaignManagement,
            margin: '100 0 0 50',
            items: [{ xtype: 'container',
                layout: {
                    type: 'vbox'
                },
                items: [{ xtype: 'textfield',
                    fieldLabel: 'Campaign Name',
                    width: 300
                }, {
                    xtype: 'datefield',
                    margin: '20 0 0 0',
                    fieldLabel: 'Start Date'
                }, {
                    xtype: 'datefield',
                    margin: '20 0 0 0',
                    fieldLabel: 'End Date'
                }]
            }, { xtype: 'label',
                text: 'Please define the campaign selection:',
                margin: '0 10 0 200'
            }, { xtype: 'container',
                layout: {
                    type: 'vbox'
                },
                margin: '0 10 0 30',
                items: [{ xtype: 'checkbox',
                    boxLabel: 'Country',
                    listeners: {
                        change: function (newValue, checked) {
                            if (checked === true) {
                                window.feature.optionsSelected.push(window.feature.wizardCountryId);
                            }
                        }
                    }
                }, { xtype: 'checkbox',
                    boxLabel: 'Region',
                    padding: '10 0 0 0',
                    listeners: {
                        change: function (newValue, checked) {
                            if (checked === true)
                                window.feature.optionsSelected.push(window.feature.wizardRegionId);
                        }
                    }
                }, { xtype: 'checkbox',
                    boxLabel: 'District',
                    padding: '10 0 0 0',
                    listeners: {
                        change: function (newValue, checked) {
                            if (checked === true)
                                window.feature.optionsSelected.push(window.feature.wizardDistrictId);
                        }
                    }
                }, { xtype: 'checkbox',
                    boxLabel: 'Outpost',
                    padding: '10 0 0 0',
                    listeners: {
                        change: function (newValue, checked) {
                            if (checked === true)
                                window.feature.optionsSelected.push(window.feature.wizardOutpostId);
                        }
                    }
                }]
            }]
        });

        window.feature.modalAddCampaignManagement = Ext.define('Ext.feature.Campaign.Modal', {
            extend: 'Ext.window.Window',
            title: 'Add New Campaign',
            height: 670,
            width: 1090,
            modal: true,
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: []
                });
                me.buttons = [{ text: 'Cancel', handler: function () { me.close(); me.destroy(); }
                }, {
                    text: 'Next', handler: function () {
                        var previousContainerId = me.items.items[2].id;

                        var modalWindow = new window.feature.modalAddCampaignManagement();
                        modalWindow.add(window.feature.wizardSelectionContainer);
                        modalWindow.add(window.feature.wizardSelectionLabelsContainer);

                        if (previousContainerId === window.feature.wizardCampaignManagement) {
                            modalWindow.add(window.feature.wizardCountryContainer);
                        }
                        if (previousContainerId === window.feature.wizardCountryId) {
                            modalWindow.add(window.feature.wizardRegionContainer);
                        }

                        if (previousContainerId === window.feature.wizardRegionId) {
                            modalWindow.add(window.feature.wizardDistrictContainer);
                        }

                        if (previousContainerId === window.feature.wizardDistrictId) {
                            modalWindow.add(window.feature.wizardOutpostContainer);

                        }

                        if (previousContainerId === window.feature.wizardOutpostId) {
                            me.close(); me.destroy();
                        } else {
                            me.close(); me.destroy();
                            modalWindow.show();
                        }
                    }
                }],
                me.callParent(arguments);
            }
        });
        window.feature.countryStore.load();

        window.feature.store = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: true,
            fields: ['Id', 'Name', 'StartDate', 'EndDate', 'CreationDate', 'Status'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(CampaignManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Campaign", action = "GetCampaigns" })',
                reader: { type: 'json',
                    root: 'Campaigns',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true

            },
            sorters: [{
                property: 'Name',
                direction: 'DESC'
            }]
        });



        window.feature.grid = Ext.create('Ext.grid.Panel', {
            width: 970,
            height: 650,
            store: window.feature.store,
            disableSelection: true,
            loadMask: true,
            columns: [{
                text: "Campaign Name",
                dataIndex: 'Name',
                anchor: '90%',
                sortable: true,
                flex: 1
            }, {
                text: "Start Date",
                dataIndex: 'StartDate',
                sortable: true,
                flex: 1
            }, {
                text: "End Date",
                dataIndex: 'EndDate',
                sortable: true,
                flex: 1
            }, {
                text: "Creation Date",
                dataIndex: 'CreationDate',
                sortable: true,
                flex: 1
            }, {
                xtype: 'actioncolumn',
                text: 'Actions',
                items: [{
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/edit.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                    tooltip: _t('Edit this campaign'),
                    handler: function (grid, rowIndex, colIndex) {
                    }
                }, {
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/open.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                    tooltip: _t('Reopen this campaign'),
                    handler: function (grid, rowIndex, colIndex) {
                    }
                }

            ]
            }],
            bbar: Ext.create('Ext.PagingToolbar', {
                store: window.feature.store,
                displayInfo: true,
                displayMsg: 'Displaying topics {0} - {1} of {2}',
                emptyMsg: "No topics to display"
            })
        });

        window.feature.campaignContainer = Ext.create('Ext.container.Container', {
            padding: '60 60 0 10',
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [{
                xtype: 'container',
                layout: {
                    type: 'hbox',
                    align: 'stretch'
                },
                items: [{
                    xtype: 'label',
                    text: 'Campaign Administration',
                    padding: '2 40 0 10'
                }, {
                    xtype: 'button',
                    height: 20,
                    align: 'center',
                    text: 'Add New Campaign',
                    handler: function () {
                        var modalWindowAddCampaign = new window.feature.modalAddCampaignManagement();
                        modalWindowAddCampaign.add(window.feature.wizardSelectionContainer);
                        modalWindowAddCampaign.add(window.feature.wizardSelectionLabelsContainer);
                        modalWindowAddCampaign.add(window.feature.wizardCampaignManagementContainer);
                        modalWindowAddCampaign.show();
                    }
                }, {
                    xtype: 'textfield',
                    pack: 'end',
                    width: 150,
                    padding: '2 20 10 400',
                    emptyText: 'Campaign Search'
                }]
            }, window.feature.grid]
        });
        window.feature.store.loadPage(1);

    });

</script>

