@using Microsoft.Web.Mvc;

@section page_title{
Historical Product Level: Overview
}

@{
    Html.RenderPartial("_OutpostStockLevelSubNavigation");
    Html.RenderPartial("_OutpostStockLevelSideBar");
}

<script type="text/javascript">
    Ext.onReady(function () {
        var outpostStockLevelBtnId = window.res.header.navigation.outpostStockLevel;
        var outpostStockLevelBtn = Ext.getCmp(outpostStockLevelBtnId);
        outpostStockLevelBtn.toggle(true);

        var historicalBtnId = window.res.content.maincontent.sidebar.outpostStockLevelHistorical;
        var historicalBtn = Ext.getCmp(historicalBtnId);
        historicalBtn.toggle(true);
    });
</script>

<script type="text/javascript">

    Ext.onReady(function () {
        window.feature = {};
        window.feature.countryComboboxId = 'Overview-Combobox-Country-Historical';
        window.feature.regionComboboxId = 'Overview-Combobox-Region-Historical';
        window.feature.districtComboboxId = 'Overview-Combobox-District-Historical';
        window.feature.outpostComboboxId = 'Overview-Combobox-Outpost-Historical';
        window.feature.containerForHistoricalGridId = 'Container-For-Historical-Grid-Id';
        window.feature.viewProductStockLevelId = 'Button-For-View-Product-Stock-Level-Id';
        window.feature.outpostName = 'Product-Group-Level-Outpost-Name';
        window.feature.productGroupName = 'Product-Group-Level-Product-Group-Name';
        window.feature.editLastUpdated = 'Edit-Last-Updated-Historical-Id';
        window.feature.editDescription = 'Edit-Description-Historical-Id';
        window.feature.editProductGroup = 'Edit-Product-Group-Historical-Id';
        window.feature.editProductStockLevel = 'Edit-Product-Stock-Level-Historical-Id';
        window.feature.editUpdateMethod = 'Edit-Update-Method-Historical-Id';
        window.feature.editSMSCode = 'Edit-SMS-Code-Historical-Id';
        window.feature.editProductName = 'Edit-Product-Name-Historical-Id';
        window.feature.editOutpostName = 'Edit-Outpost-Name-Historical-Id';

        window.feature.countryStore = Ext.create('Ext.data.Store', {
            remoteSort: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(Web.Areas.OutpostManagement.OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Region", action = "GetCountries" })',
                reader: {
                    type: 'json',
                    root: 'Countries',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

         window.feature.regionStore = Ext.create('Ext.data.Store', {
            remoteSort: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(Web.Areas.OutpostManagement.OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "GetRegions" })',
                reader: {
                    type: 'json',
                    root: 'regions',
                    totalProperty: 'TotalItems'
                },
                extraParams: { countryId: '' },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        window.feature.districtStore = Ext.create('Ext.data.Store', {
            remoteSort: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(Web.Areas.OutpostManagement.OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Outpost", action = "GetDistricts" })',
                reader: {
                    type: 'json',
                    root: 'Districts',
                    totalProperty: 'TotalItems'
                },
                extraParams: { regionId: '' },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        window.feature.outpostStore = Ext.create('Ext.data.Store', {
            remoteSort: true,
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "HistoricalProductLevel", action = "GetOutposts" })',
                reader: {
                    type: 'json',
                    root: 'Outposts',
                    totalProperty: 'TotalItems'
                },
                extraParams: { districtId: '' },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        window.feature.gridOutpostStore = Ext.create('Ext.data.Store', {
            remoteSort: true,
            fields: ['Id', 'Name', 'ProductGroupId', 'ProductGroupName', 'SMSResponseDate', 'NumberOfProducts'],
            groupField: 'Name',
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "HistoricalProductLevel", action = "GetHistoricalProductLevel" })',
                reader: {
                    type: 'json',
                    root: 'Historical',
                    
                    totalProperty: 'TotalItems'
                },
                extraParams: { 
                    countryId: '', 
                    regionId: '', 
                    districtId: '', 
                    outpostId: '' 
                },
                
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });

        window.feature.productGroupLevels = Ext.create('Ext.data.Store', {
            remoteSort: true,
            fields: ['Id', 'OutpostId', 'OutpostName', 'ProductGroupId', 'ProductGroupName', 'ProductId', 'ProductName', 'SMSReferenceCode', 'ProductStockLevel', 'LastUpdated', 'UpdateMethod', 'Description'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "HistoricalProductLevel", action = "GetProductGroupLevels" })',
                reader: {
                    type: 'json',
                    root: 'Products',
                    totalProperty: 'TotalItems'
                },
                extraParams: { 
                    outpostId: '',
                    productGroupId: '',
                    smsResponseDate: '' 
                },
                simpleSortMode: true
            },
            sorters: [{
                property: 'Name',
                direction: 'ASC'
            }]
        });
        
        function ResetCountryDependencies(){
            var regionCombobox = window.feature.container.down('#'+window.feature.regionComboboxId);
            regionCombobox.setValue(null); 
            regionCombobox.disable();

            var districtCombobox = window.feature.container.down('#'+window.feature.districtComboboxId);
            districtCombobox.setValue(null); 
            districtCombobox.disable();

            var outpostCombobox = window.feature.container.down('#'+window.feature.outpostComboboxId);
            outpostCombobox.setValue(null); 
            outpostCombobox.disable();

            var viewButton = window.feature.container.down('#'+window.feature.viewProductStockLevelId);
            viewButton.disable();
        };

        function ResetDistrictDependencies(){
            var outpostCombobox = window.feature.container.down('#'+window.feature.outpostComboboxId);
            outpostCombobox.setValue(null); 
            outpostCombobox.disable();

            var viewButton = window.feature.container.down('#'+window.feature.viewProductStockLevelId);
            viewButton.disable();
        };

        function ResetRegionDependencies(){
            var districtCombobox = window.feature.container.down('#'+window.feature.districtComboboxId);
            districtCombobox.setValue(null); 
            districtCombobox.disable();

            var outpostCombobox = window.feature.container.down('#'+window.feature.outpostComboboxId);
            outpostCombobox.setValue(null); 
            outpostCombobox.disable();

            var viewButton = window.feature.container.down('#'+window.feature.viewProductStockLevelId);
            viewButton.disable();
        };

        var tooltipText = 'Click on the product group to view the historical product level';
        Ext.QuickTips.init();

        function addTooltip(val, meta, rec, rowIdx, colIdx, ds){
            meta.tdAttr = 'data-qtip="' + tooltipText +'"' ;
            return val;
        }; 

         window.feature.productGroupLevel = Ext.define('Ext.feature.region.Modal', {
            extend: 'Ext.window.Window',
            title: 'Product Group Level',
            modal:true,
            ui: 'snapshot-popup-window',
            height: 500,
            width: 950,
            layout: {
                align: 'stretch',
                type: 'vbox'
            },

            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{
                        xtype: 'container',
                        flex: 1,
                        layout: {
                            type: 'column'
                        },
                        items: [{
                            xtype: 'textfield',
                            fieldLabel: 'Seller',
                            margin: '0 20 0 0',
                            readOnly:true,
                            itemId: window.feature.outpostName
                        },{
                            xtype: 'textfield',
                            readOnly: true,
                            fieldLabel: 'Product Group',
                            itemId: window.feature.productGroupName
                           
                        }]
                    },{
                        xtype: 'gridpanel',
                        cls: 'white-border',
                        flex: 5,
                        loadMask: true,
                        autoScroll:true,
                        store: window.feature.productGroupLevels,
                        columns: [{
                            header: "Product",
                            menuDisabled: true,
                            dataIndex: 'ProductName',
                            flex: 1,
                            sortable: true
                        },{
                            header: "SMS Reference Code",
                            dataIndex: 'SMSReferenceCode',
                            menuDisabled: true,
                            flex: 1
                        },{
                            header: "Product Stock Level",
                            dataIndex: 'ProductStockLevel',
                            menuDisabled:true,
                            flex: 1,
                            sortable: true
                        },{
                            header: "Last Update",
                            dataIndex: 'LastUpdated',
                            menuDisabled:true,
                            flex: 1,
                            sortable: true
                        }],
                        listeners: {
                            itemclick: function(view, record, item, index, e ) {
                                if(@(ViewBag.HasNoRightsToEdit) === true){
                                           var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert("Alert","You have no rights for this action!");
                            }else{
                                var editView = new window.feature.editHistorical({
                                    buttons: [
                                        { text: 'Cancel',
                                         margin: '10 10 20 0',
                                        ui: 'snapshot-cancel-btn',
                                        cls: 'x-add-button-gradient',
                                         handler:function(){ editView.close(); editView.destroy();} },
                                        { text: 'Save',
                                         margin: '10 10 20 0',
                                        ui: 'snapshot-add-btn',
                                        cls: 'x-add-button-gradient',
                                         handler:function(){

                                            var stockLevel = editView.down('#'+window.feature.editProductStockLevel);
                                            if (stockLevel.getValue() == ''){
                                            }else{
                                                var values = {
                                                    Id: record.get('Id'),
                                                    StockLevel: editView.down('#'+window.feature.editProductStockLevel).getValue()
                                                };
                                                var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "HistoricalProductLevel", action = "Edit" })';
                                                var action = $.post(postToUrl, values);                                               
                                                action.success(function(serverResponse){
                                                if(serverResponse.Status === "Error")
                                                {
                                                   var msgAlert = Ext.Msg;
                                                                    msgAlert.ui = 'snapshot-popup-window';
                                                                    msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                                                    msgAlert.msgButtons['ok'].margin = '10 10 20 0',
                                                                    msgAlert.alert(serverResponse.Status, serverResponse.Message);
                                                }
                                                else
                                                {                                                    
                                                    editView.close();
                                                    editView.destroy();

                                                    ResetExtraParams();
                                                    SetNewExtraParams();
                                                    window.feature.gridOutpostStore.load();  
                                                }
                                            });  
                                            }   
                                        }  
                                    }]    
                                });
                        
                                editView.down('#'+window.feature.editOutpostName).setValue(record.get('OutpostName'));
                                editView.down('#'+window.feature.editProductGroup).setValue(record.get('ProductGroupName'));
                                editView.down('#'+window.feature.editProductName).setValue(record.get('ProductName'));
                                editView.down('#'+window.feature.editSMSCode).setValue(record.get('SMSReferenceCode'));
                                editView.down('#'+window.feature.editProductStockLevel).setValue(record.get('ProductStockLevel'));
                                editView.down('#'+ window.feature.editLastUpdated).setValue(record.get('LastUpdated'));
                                editView.down('#'+window.feature.editUpdateMethod).setValue(record.get('UpdateMethod'));
                                editView.down('#'+window.feature.editDescription).setValue(record.get('Description'));

                                me.close();
                                me.destroy();

                                editView.show();
                                }
                             }
                        }
                    }]
                });

                 me.callParent(arguments);
            }
        }); 

        window.feature.editHistorical = Ext.define('Ext.feature.region.Modal', {
            extend: 'Ext.window.Window',
            title: 'Product Group Level',
            modal:true,
            ui: 'snapshot-popup-window',
            height: 350,
            width: 950,
            layout: {
                align: 'stretch',
                type: 'vbox'
            },

            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{
                        xtype: 'container',
                        flex: 1,
                        layout: {
                            align: 'stretch',
                            type: 'hbox'
                        },
                        items: [{
                            xtype: 'container',
                            flex: 1,
                            margin: '0 20 0 0',
                            layout: {
                                align: 'stretch',
                                padding: 10,
                                type: 'vbox'
                            },
                            items: [{                                                                                         
                                xtype: 'textfield',
                                fieldLabel: 'Outpost Name',
                                disabled: true,
                                itemId: window.feature.editOutpostName
                            },{
                                xtype: 'textfield',
                                fieldLabel: 'Product',
                                disabled: true,
                                itemId: window.feature.editProductName
                            },{
                                xtype: 'textfield',
                                fieldLabel: 'SMS Code',
                                disabled: true,
                                itemId: window.feature.editSMSCode
                            },{
                                xtype: 'textfield',
                                fieldLabel: 'Update Method',
                                disabled: true,
                                itemId: window.feature.editUpdateMethod
                            },{
                                xtype: 'textfield',
                                fieldLabel: 'Product Stock Level',
                                itemId: window.feature.editProductStockLevel
                            }]
                        }, {
                            xtype: 'container',
                            flex: 1,
                            layout: {
                                align: 'stretch',
                                padding: 10,
                                type: 'vbox'
                            },
                            items: [{
                                xtype: 'textfield',                           
                                fieldLabel: 'Product Group',
                                disabled: true,
                                itemId: window.feature.editProductGroup
                            },{
                                xtype: 'textareafield',
                                fieldLabel: 'Description',
                                disabled: true,
                                grow: true,
                                anchor: '100%',
                                itemId: window.feature.editDescription
                            },{
                                xtype: 'textfield',
                                fieldLabel: 'Last updated at:',
                                disabled: true,
                                itemId: window.feature.editLastUpdated
                            }]
                        }]
                    }]
                });

                 me.callParent(arguments);
            }
        }); 

        window.feature.container = Ext.create('Ext.container.Container', {
            margin: '15 15 15 15',
            padding: '20 20 0 20',
            autoScroll:true,
            id:'TopContainer',
            layout: {
                align: 'stretch',
                type: 'vbox'
            },
            items: [{
                xtype: 'container',
                layout: {
                    align: 'stretch',
                    type: 'vbox'
                },
                height: 110,
                items: [
                {
                    xtype: 'container',
                    height: 50,
                    layout: {
                        type: 'column'
                    },
                    items: [{
                        xtype: 'container',
                        height: 30,
                        width: 30,
                        html:'&nbsp;'
                    },{
                        xtype: 'image',
                        src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/OutpostStockLevel/HistoricalProductLevel.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                        margin: '0 10 10 0'
                    },{
                        xtype: 'label',
                        cls: 'x-title-label',
                        text: 'Historical Product Status'
                    }]
                    },{
						xtype: 'container',
                        height: 65,
                        margin: '0 0 0 30',
						layout: {
							type: 'column'
						},
						items: [{
                            xtype: 'combobox',
                            itemId: window.feature.countryComboboxId,
			                store: window.feature.countryStore,
                            labelAlign: 'top',
                            fieldLabel: 'Selected Country',
			                displayField: 'Name',
			                valueField:'Id',
                            labelClsExtra: 'combo-label',
			                emptyText: 'Country List', 
			                typeAhead: true,
                            editable: false,
                            typeAhead: false,
			                listeners:{
				                'select': function(combo, record){
                                    ResetCountryDependencies();

                                    window.feature.regionStore.proxy.extraParams.countryId = combo.getValue();
                                    window.feature.regionStore.load();

                                    var regionCombobox = window.feature.container.down('#'+window.feature.regionComboboxId);
                                    regionCombobox.enable();
				                },
                                specialkey: function(field, e){
                                    if (e.getKey() == e.BACKSPACE || e.getKey() == e.DELETE) {
                                        field.setValue(null);
                                        ResetCountryDependencies();
                                    }
                                }
			                } 
                        },{ 
                            xtype: 'combobox',
                            itemId: window.feature.regionComboboxId,
			                store: window.feature.regionStore,
                            disabled: true,
                            labelAlign: 'top',
                            fieldLabel: 'Selected Region',
			                displayField: 'Name',
			                valueField:'Id',
                            labelClsExtra: 'combo-label',
			                emptyText: 'Region List', 
			                typeAhead: true,
                            editable: false,
                            typeAhead: false,
			                listeners:{
                                'select': function(combo, record){
                                    ResetRegionDependencies();

                                    window.feature.districtStore.proxy.extraParams.regionId = combo.getValue();
                                    window.feature.districtStore.load();

                                    var districtCombobox = window.feature.container.down('#'+window.feature.districtComboboxId);
                                    districtCombobox.enable();
				                },
                                specialkey: function(field, e){
                                    if (e.getKey() == e.BACKSPACE || e.getKey() == e.DELETE) {
                                        field.setValue(null);
                                        ResetRegionDependencies();
                                    }
                                }
			                } 
                        },{ 
                            xtype: 'combobox',
                            itemId: window.feature.districtComboboxId,
			                store: window.feature.districtStore,
                            disabled: true,
                            labelAlign: 'top',
                            fieldLabel: 'Selected District',
			                displayField: 'Name',
                            labelClsExtra: 'combo-label',
			                valueField:'Id',
			                emptyText: 'District List', 
			                typeAhead: true,
                            editable: false,
                            typeAhead: false,
			                listeners:{
                                'select': function(combo, record){
                                    ResetDistrictDependencies();

                                    window.feature.outpostStore.proxy.extraParams.districtId = combo.getValue();
                                    window.feature.outpostStore.load();

                                    var outpostCombobox = window.feature.container.down('#'+window.feature.outpostComboboxId);
                                    outpostCombobox.enable();
				                },
                                specialkey: function(field, e){
                                    if (e.getKey() == e.BACKSPACE || e.getKey() == e.DELETE) {
                                        field.setValue(null);
                                        ResetDistrictDependencies();
                                    }
                                }
			                } 
                        },{ 
                            xtype: 'combobox',
                            itemId: window.feature.outpostComboboxId,
			                store: window.feature.outpostStore,
                            disabled: true,
                            labelAlign: 'top',
                            labelClsExtra: 'combo-label',
                            fieldLabel: 'Selected Seller',
			                displayField: 'Name',
			                valueField:'Id',
			                emptyText: 'Seller List', 
			                typeAhead: true,
                            editable: false,
                            typeAhead: false,
                            listeners:{
                                'select': function(combo, record){
                                    var viewButton = window.feature.container.down('#'+window.feature.viewProductStockLevelId);
                                    viewButton.enable();
				                },
                                specialkey: function(field, e){
                                    if (e.getKey() == e.BACKSPACE || e.getKey() == e.DELETE) {
                                        field.setValue(null);
                                        var viewButton = window.feature.container.down('#'+window.feature.viewProductStockLevelId);
                                        viewButton.disable();
                                    }
                                }
                            }
			                
                        },{ 
                            xtype: 'button',
                            margin: '25 0 0 0',
                            text: 'View Product Status',
                            ui: 'snapshot-add-btn',
							cls: 'x-add-button-gradient',
                            disabled: true,
                            itemId: window.feature.viewProductStockLevelId,
                            handler: function(){
                                ResetExtraParams();
                                SetNewExtraParams();
                                window.feature.gridOutpostStore.load();  
                            }

                        }]
				    }]
			},{
                xtype: 'gridpanel',
                cls: 'white-border',
                store: window.feature.gridOutpostStore,
                flex: 3,
                loadMask: true,
                autoScroll:true,
                features: [{
                    id: 'group',
                    ftype: 'groupingsummary',
                    groupHeaderTpl: '{name}',
                    hideGroupedHeader: true,                    
                    startCollapsed: true
                }],
                columns: [{
                    header: "Product Group",
                    dataIndex: 'ProductGroupName',
                    menuDisabled:true,
                    flex: 1,
                    minWidth: 100,
                    sortable: true,
                    renderer: addTooltip
                },{
                    header: "SMS Response Date",
                    dataIndex: 'SMSResponseDate',
                    menuDisabled:true,
                    flex: 1,
                    minWidth: 100,
                    sortable: true
                },{
                    header: "Number Of Products",
                    dataIndex: 'NumberOfProducts',
                    menuDisabled:true,
                    flex: 1,
                    minWidth: 100,
                    align: 'center',
                    sortable: true
                }],
                listeners: {
                    itemclick: function(view, record, item, index, e ) {

                        window.feature.productGroupLevels.proxy.extraParams.outpostId = record.get('Id');
                        window.feature.productGroupLevels.proxy.extraParams.smsResponseDate = record.get('SMSResponseDate');
                        window.feature.productGroupLevels.proxy.extraParams.productGroupId = record.get('ProductGroupId');
                        window.feature.productGroupLevels.load();

                        var productView = new window.feature.productGroupLevel();
                        
                        productView.down('#'+window.feature.outpostName).setValue(record.get('Name'));
                        productView.down('#'+window.feature.productGroupName).setValue(record.get('ProductGroupName'));

                        productView.show();
                     }
                }
            }]
        });

        function ResetExtraParams(){
            window.feature.gridOutpostStore.proxy.extraParams.outpostId = null;
            window.feature.gridOutpostStore.proxy.extraParams.districtId = null;
            window.feature.gridOutpostStore.proxy.extraParams.regionId = null;
            window.feature.gridOutpostStore.proxy.extraParams.countryId = null;
        };

        function SetNewExtraParams(){
            var outpostSelectedValue = window.feature.container.down('#'+window.feature.outpostComboboxId).getValue();
            if (outpostSelectedValue != null){
                window.feature.gridOutpostStore.proxy.extraParams.outpostId = outpostSelectedValue;
            }

            var districtSelectedValue = window.feature.container.down('#'+window.feature.districtComboboxId).getValue();
            if (districtSelectedValue != null){
                window.feature.gridOutpostStore.proxy.extraParams.districtId = districtSelectedValue;
            }

            var regionSelectedValue = window.feature.container.down('#'+window.feature.regionComboboxId).getValue();
            if (regionSelectedValue != null){
                window.feature.gridOutpostStore.proxy.extraParams.regionId = regionSelectedValue;
            }

            var countrySelectedValue = window.feature.container.down('#'+window.feature.countryComboboxId).getValue();
            if (countrySelectedValue != null){
                window.feature.gridOutpostStore.proxy.extraParams.countryId = countrySelectedValue;
            }
        };

        var contentRes = window.res.content;
        var mainContent = Ext.getCmp(contentRes.maincontent.id);

        mainContent.add(window.feature.container);

    });
</script>

