
@section page_title{
Outpost Stock Level Current
}
@{
    Html.RenderPartial("_OutpostStockLevelSubNavigation");
    Html.RenderPartial("_OutpostStockLevelMainContent");
    
}
<script type="text/javascript">
    Ext.onReady(function () {

        var outpostStockLevelBtnId = window.res.content.maincontent.sidebar.outpostStockLevelCurrent;
        var outpostStockLevelBtn = Ext.getCmp(outpostStockLevelBtnId);
        outpostStockLevelBtn.toggle(true);

    });
</script>
<script type="text/javascript">
    Ext.onReady(function () {

        window.feature = {};
        window.feature.comboboxCountriesId = 'comboboxCountriesId';
        window.feature.comboboxRegionsId = 'combobxRegionsId';
        window.feature.comboboxDistrictsId = 'comboboxDistrictsId';
        window.feature.comboboxOutpostsId = 'comboboxOutpostId';
        window.feature.ProductLevelValueForEditRecord = '';
        window.feature.OutpostStockLevelIdForEditRecord = '';

        window.feature.CountryStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetCountries" })',
                reader: {
                    type: 'json',
                    root: 'countries',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.RegionStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetRegions" })',
                reader: {
                    type: 'json',
                    root: 'regions',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.DistrictStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetDistricts" })',
                reader: {
                    type: 'json',
                    root: 'districts',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.OutpostStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetOutposts" })',
                reader: {
                    type: 'json',
                    root: 'outposts',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.comboBoxCountries = Ext.create('Ext.form.ComboBox', {
            store: window.feature.CountryStore,
            queryMode: 'local',
            id: window.feature.comboboxCountriesId,
            displayField: 'Name',
            valueField: 'Id',
            margin: '0 0 0 30',
            emptyText: _t('Country List'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedCountryId = record[0].data.Id;
                    var comboboxRegions = Ext.getCmp(window.feature.comboboxRegionsId);
                    comboboxRegions.setValue(null);
                    comboboxRegions.setDisabled(false);

                    window.feature.RegionStore.load({ params: { countryId: selectedCountryId} });

                    var comboboxDistricts = Ext.getCmp(window.feature.comboboxDistrictsId);
                    var comboboxOutposts = Ext.getCmp(window.feature.comboboxOutpostsId);


                    comboboxDistricts.setValue(null);
                    comboboxDistricts.setDisabled(true);

                    comboboxOutposts.setValue(null);
                    comboboxOutposts.setDisabled(true);

                }
            }
        });

        window.feature.comboBoxRegions = Ext.create('Ext.form.ComboBox', {
            store: window.feature.RegionStore,
            queryMode: 'local',
            id: window.feature.comboboxRegionsId,
            displayField: 'Name',
            valueField: 'Id',
            disabled: true,
            margin: '0 0 0 30',
            emptyText: _t('Region List'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedRegionId = record[0].data.Id;
                    Ext.getCmp(window.feature.comboboxDistrictsId).setDisabled(false);
                    Ext.getCmp(window.feature.comboboxDistrictsId).setValue(null);
                    window.feature.DistrictStore.load({ params: { regionId: selectedRegionId} });

                    var comboboxOutpost = Ext.getCmp(window.feature.comboboxOutpostsId);

                    comboboxOutpost.setValue(null);
                    comboboxOutpost.setDisabled(true);

                }
            }
        });

        window.feature.comboBoxDistricts = Ext.create('Ext.form.ComboBox', {
            store: window.feature.DistrictStore,
            queryMode: 'local',
            id: window.feature.comboboxDistrictsId,
            displayField: 'Name',
            valueField: 'Id',
            disabled: true,
            margin: '0 0 0 30',
            emptyText: _t('District List'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedDistrictId = record[0].data.Id;
                    window.feature.OutpostStore.load({ params: { districtId: selectedDistrictId} });

                    Ext.getCmp(window.feature.comboboxOutpostsId).setDisabled(false);

                }
            }
        });

        window.feature.comboBoxOutposts = Ext.create('Ext.form.ComboBox', {
            store: window.feature.OutpostStore,
            queryMode: 'local',
            id: window.feature.comboboxOutpostsId,
            displayField: 'Name',
            valueField: 'Id',
            disabled: true,
            margin: '0 0 0 30',
            emptyText: _t('Outpost List')

        });
        window.feature.fieldOutpostNameId = 'fieldOutpostNAmeId';
        window.feature.fieldProductNameId = 'fieldProductNameId';
        window.feature.fieldSMSCodeId = 'fieldSMSCodeId';
        window.feature.fieldUpdateMethodId = 'fieldUpdateMethodId';
        window.feature.fieldProductLevelId = 'fieldProductLevelId';
        window.feature.fieldPreviousLevelId = 'fieldPreviousLevelId';
        window.feature.fieldProductGroupNameId = 'fieldProductGroupNameId';
        window.feature.fieldDescriptionId = 'fielddescriptionId';
        window.feature.labelLastUpdateId = 'labelLastUpdatedId';
        window.feature.fieldOutpostStockLevelId = 'OutpostStockLevelId';

        window.feature.ModalWindowForEdit = Ext.define('Ext.feature.OutpostStockLevelEdit.Modal', {
            extend: 'Ext.window.Window',
            title: 'Edit a current level for an outpost',
            height: 370,
            width: 750,
            modal: true,
           initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{
                        xtype: 'container',
                        layout: {
                            type: 'hbox'
                        },
                       items: [{ xtype: 'container',
                            layout: {
                                type: 'vbox'
                            },
                            items: [{ xtype: 'textfield',
                                fieldLabel: 'Outpost Name',
                                name: 'OutpostName',
                                padding:10,
                                width:300,
                                id: window.feature.fieldOutpostNameId,
                                readOnly: true
                            }, { xtype: 'textfield',
                                fieldLabel: 'Product',
                                padding: 10,
                                width:300,
                                name: 'ProductName',
                                id: window.feature.fieldProductNameId,
                                readOnly: true
                            }, { xtype: 'textfield',
                                fieldLabel: 'SMS Code',
                                padding: 10,
                                name: 'SMSCode',
                                id: window.feature.fieldSMSCodeId,
                                width: 150,
                                readOnly: true
                            }, { xtype: 'textfield',
                                fieldLabel: 'Update Method',
                                name: 'UpdateMethod',
                                padding: 10,
                                width: 190,
                                id: window.feature.fieldUpdateMethodId,
                                readOnly: true
                            }, { xtype: 'textfield',
                                fieldLabel: 'Product Stock Level',
                                name: 'ProductLevel',
                                padding: 10,
                                width: 190,
                                id: window.feature.fieldProductLevelId,
                                allowBlank: false
                            }, { xtype: 'textfield',
                                fieldLabel: 'Previous Stock Level',
                                name: 'PreviousLevel',
                                padding: 10,
                                width: 190,
                                id: window.feature.fieldPreviousLevelId,
                                readOnly: true
                            }]
                        }, { xtype: 'container',
                            layout: {
                                type: 'vbox'
                            },
                            items: [{ xtype: 'textfield',
                                fieldLabel: 'Product Group',
                                name: 'ProductGroupName',
                                padding: '10 10 0 90',
                                width:320,
                                id: window.feature.fieldProductGroupNameId,
                                readOnly: true
                            }, { xtype: 'textarea',
                                fieldLabel: 'Description',
                                name: 'Description',
                                padding: '10 10 0 90',
                                id: window.feature.fieldDescriptionId,
                                width:320,
                                height:80,
                                readOnly: true
                            }, { xtype: 'container',
                                layout: { type: 'hbox' },
                                items: [{ xtype: 'label',
                                    text: 'Last Update At',
                                    padding:'10 10 0 90',
                                }, { xtype: 'label',
                                    id: window.feature.labelLastUpdateId,
                                    padding:'10 10 0 10',
                                    text: ''
                                }, { xtype: 'textfield',
                                    id: window.feature.fieldOutpostStockLevelId,
                                    hidden: true
                                }]
                            }]
                        }]
                    }]
                });

                me.buttons = [{ text: 'Cancel', handler: function () { me.close(); me.destroy(); }
                }, {
                    text: 'Save', handler: function () {
                        var outpostStockLevelId = Ext.getCmp(window.feature.fieldOutpostStockLevelId);
                        var ProductLevel = me.down('#' + window.feature.fieldProductLevelId);

                        var ok = IsValid(ProductLevel);
                        if (ok == true) {
                            var values = {
                                'outpostStockLevelInput.StockLevel': ProductLevel.getValue(),
                                'outpostStockLevelInput.Id': outpostStockLevelId.getValue()
                            };
                            var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "Edit" })';
                            var action = $.post(postToUrl, values);
                            action.success(function (result) {

                            var selectedOutpostId = window.feature.comboBoxOutposts.getValue();
                             var selectedDistrictId = window.feature.comboBoxDistricts.getValue();
                             var ProductGroupExpanded = Ext.getCmp(window.feature.fieldProductGroupNameId).getValue();
                             window.feature.treegrid.getStore().proxy.extraParams.OutpostId = selectedOutpostId;
                             window.feature.treegrid.getStore().proxy.extraParams.DistrictId = selectedDistrictId;
                             window.feature.treegrid.getStore().proxy.extraParams.ProductGroupExpandedOnEdit = ProductGroupExpanded;
                             window.feature.treegrid.setRootNode(null);
                             window.feature.treegrid.getRootNode().expand();
                             
                             me.close();
                             me.destroy();

                            });
                        }
                    }
                }]
                me.callParent(arguments);
            }
        });

        function IsValid(ProductLevel) {

            var ok = true;
            if (ProductLevel.getValue() == '') {
                ProductLevel.markInvalid('Field Product Stock Level is required!');
                ProductLevel.setValue(null);
                ok = false;
            }
            return ok;
        }

        Ext.define('OutpostStockLevel', {
            extend: 'Ext.data.Model',
            fields: ['Name', 'Id', 'ProductLevel', 'SMSCode', 'LastUpdate', 'UpdateMethod', 'PreviousLevel', 'Description', 'ProductGroupName', 'OutpostName', 'leaf']
        });

        window.feature.treeStore = Ext.create('Ext.data.TreeStore', {
            model: 'OutpostStockLevel',
            autoLoad: false,
            root: {},
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetOutpostStockLevelData" })',
                extraParams: { OutpostId: '', DistrictId: '', ProductGroupExpandedOnEdit: '' }
            }
        });

        window.feature.treegrid = Ext.create('Ext.tree.Panel', {
            width: 1300,
            height: 600,
            useArrows: true,
            rootVisible: false,
            root: {},
            store: window.feature.treeStore,
            multiSelect: true,
            singleExpand: false,
            columns: [{
                xtype: 'treecolumn',
                text: 'Products',
                flex: 2,
                sortable: true,
                dataIndex: 'Name'
            }, {
                xtype: 'templatecolumn',
                text: 'Product Level',
                flex: 1,
                sortable: true,
                dataIndex: 'ProductLevel',
                align: 'right',
                tpl: Ext.create('Ext.XTemplate', '{ProductLevel:this.ProductLevel}', {
                    ProductLevel: function (value) {
                        if (value === 0) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, {
                xtype: 'templatecolumn',
                text: 'SMS Code',
                flex: 1,
                sortable: false,
                dataIndex: 'SMSCode',
                align: 'right',
                tpl: Ext.create('Ext.XTemplate', '{SMSCode:this.SMSCode}', {
                    SMSCode: function (value) {
                        if (value === null) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'templatecolumn',
                text: 'Last Update',
                flex: 1,
                dataIndex: 'LastUpdate',
                align: 'center',
                tpl: Ext.create('Ext.XTemplate', '{LastUpdate:this.LastUpdate}', {
                    LastUpdate: function (value) {
                        if (value === null) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'templatecolumn',
                text: 'Update Method',
                flex: 1,
                dataIndex: 'UpdateMethod',
                align: 'center',
                tpl: Ext.create('Ext.XTemplate', '{UpdateMethod:this.UpdateMethod}', {
                    UpdateMethod: function (value) {
                        if (value === null) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'templatecolumn',
                text: ' Previous Level',
                flex: 1,
                dataIndex: 'PreviousLevel',
                align: 'right',
                tpl: Ext.create('Ext.XTemplate', '{PreviousLevel:this.PreviousLevel}', {
                    PreviousLevel: function (value) {
                        if (value === 0) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'actioncolumn',
                items: [{ icon: '../../Assets/img/edit.png',
                    tooltip: _t('Edit product level'),
                    handler: function (grid, rowIndex, colIndex) {
                        var recordData = grid.store.getAt(rowIndex);

                        var ModalWindowForEdit = new window.feature.ModalWindowForEdit();

                        Ext.getCmp(window.feature.fieldOutpostNameId).setValue(recordData.data.OutpostName);
                        Ext.getCmp(window.feature.fieldOutpostStockLevelId).setValue(recordData.data.Id);
                        Ext.getCmp(window.feature.fieldProductNameId).setValue(recordData.data.Name);
                        Ext.getCmp(window.feature.fieldSMSCodeId).setValue(recordData.data.SMSCode);
                        Ext.getCmp(window.feature.fieldUpdateMethodId).setValue(recordData.data.UpdateMethod);
                        Ext.getCmp(window.feature.fieldDescriptionId).setValue(recordData.data.Description);
                        Ext.getCmp(window.feature.fieldPreviousLevelId).setValue(recordData.data.PreviousLevel);
                        Ext.getCmp(window.feature.fieldProductGroupNameId).setValue(recordData.data.ProductGroupName);
                        Ext.getCmp(window.feature.fieldProductLevelId).setValue(recordData.data.ProductLevel);
                        Ext.getCmp(window.feature.labelLastUpdateId).text = recordData.data.LastUpdate;

                        ModalWindowForEdit.show();
                    },
                     getClass:function(value,metadata,record){
                        var leaf = record.data.leaf;
                        if(leaf == false)
                            return 'x-hide-display';
                        }
                }]
               
            }]
        });
        
        var contentRes = window.res.content;
        window.feature.CountryStore.load();

        var mainContent = Ext.getCmp(contentRes.maincontent.id);
        mainContent.add({
            xtype: 'container',
            margin: 20,
            id: 'TopContainer',
            border: '10 10 10 10',
            layout: {
                align: 'stretch',
                type: 'vbox'
            },
            items: [{ xtype:'label',
                      text: 'Current Product Level',
                      padding:'10 10 0 100'},
                      {
                          xtype: 'container',
                          layout: {
                              type: 'column'
                          },
                          height: 50,
                          items: [{ xtype: 'container',
                              height: 30,
                              width: 30,
                              html: '&nbsp;'
                          }]
                      }, {
                          xtype: 'container',
                          layout: {
                              type: 'hbox'
                          },
                          height: 50,
                          items: [{ xtype: 'label',
                              text: 'Selected Country',
                              margin: '0 0 0 40'
                          }, { xtype: 'label',
                              text: 'Selected Region',
                              margin: '0 0 0 120'
                          }, { xtype: 'label',
                              text: 'Selected District',
                              margin: '0 0 0 150'
                          }, { xtype: 'label',
                              text: 'Selected Outpost',
                              margin: '0 0 0 140'
                          }]
                      }, {
                          xtype: 'container',
                          layout: {
                              type: 'hbox'
                          },
                          height: 50,
                          width: 950,
                          items: [window.feature.comboBoxCountries,
                                   window.feature.comboBoxRegions,
                                   window.feature.comboBoxDistricts,
                                   window.feature.comboBoxOutposts,
                                   {
                                       xtype: 'button',
                                       margin: '0 0 0 20',
                                       text: 'View Product Stock Level',
                                       width: 150,
                                       handler: function () {
                                           var selectedOutpostId = window.feature.comboBoxOutposts.getValue();
                                           var selectedDistrictId = window.feature.comboBoxDistricts.getValue();
                                           
                                           if(selectedOutpostId !==null){
                                           window.feature.treegrid.getStore().proxy.extraParams.OutpostId = selectedOutpostId;
                                           window.feature.treegrid.getStore().proxy.extraParams.DistrictId = selectedDistrictId;
                                            window.feature.treegrid.getStore().proxy.extraParams.ProductGroupExpandedOnEdit = '';
                                           window.feature.treegrid.getRootNode().expand();
                                           }else{
                                            Ext.Msg.alert("Alert", "Please select all option in order to see outpost stock level data!");
                                           }
                                       }
                                   }
                          ]
                      }, window.feature.treegrid
                    ]
        });

    });
</script>
@*
@section master_actions{
    @{
        Html.RenderPartial("~/Views/Shared/_OutpostManagementActions.cshtml");
    }
    @{ Html.RenderPartial("~/Views/Shared/_StockAdministrationActions.cshtml");}
}
@section master_content{
    <table>
        <thead>
            <tr>
                <th>
                    <label>
                        Country:</label>
                    <select name="@(Html.NameFor(m => m.Countries))" id="Countries">
                        <option value="@Guid.Empty">- Select a country - </option>
                        @{
                            foreach (var item in Model.Countries)
                            {
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
                </th>
                <th>
                    <label>
                        Region:</label>
                    <select name="@(Html.NameFor(m => m.Regions))" id="Regions">
                        @{
                            foreach (var item in Model.Regions)
                            {
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
                </th>
                <th>
                    <label>
                        District:</label>
                    <select name="@(Html.NameFor(m => m.Districts))" id="Districts">
                        @{
                            foreach (var item in Model.Districts)
                            {
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
                </th>
                <th>
                    <label>
                        Outpost:</label>
                    <select name="@(Html.NameFor(m => m.OutpostId))" id="Outposts">
                        @{
                            foreach (var item in Model.Outposts)
                            {
                            <option value="@item.Value" @(item.Selected ? @"selected='selected'" : @"") >@item.Text</option>
                            }
                        }
                    </select>
                </th>
                <th>
                    <button onclick="ViewStockButtonClicked()">
                        View product stock level</button>
                </th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <span>
        <button onclick="CurrentButtonClicked()">
            Current Product Stock Level</button>
        <button onclick="HistoricalButtonClicked()">
            Historical Product Stock Level</button></span>
   

       @{ Html.RenderPartial("OverviewItemsStockLevel", Model.OutpostList);   }        
    

        @{Html.RenderPartial("OverviewItemsStockLevelHistorical",Model.OutpostList);}
       
    
     
}
@section  scripts{
    <script type="text/javascript">
        var dropHistorical = $("#stocklevel-overview-historical");
        dropHistorical.html('');

        function ViewHistoricalStockLevelButtonClicked(id) {

            var selectedDistrictId = $("select[name='@Html.NameFor(m => m.Districts)']").val()
            var drop = $("#stocklevel-overview-historical")
            var dropCurrent = $("#stocklevel-overview")

            var urlOverview = '@Url.Action("OverviewItemsStockLevelHistorical", "OutpostStockLevel")?OutpostId=' + id + '&DistrictId=' + selectedDistrictId;
            $.get(urlOverview, function (data) {

                drop.html('')
                $('#stocklevel-overview-historical').html(data);
                dropCurrent.html('');

            });
        }
        function CurrentButtonClicked() {

            var outpost = document.getElementById("Outposts");
            var country = document.getElementById("Countries");
            var region = document.getElementById("Regions");
            var guidEmpty = "@Guid.Empty";

            if (country.options[country.selectedIndex].value == guidEmpty)
            { alert(" Please choose an option for each filter! "); }
            else {
                if (region.options[region.selectedIndex].value == guidEmpty) {
                    alert("Please choose an option for region,district and outpost too!");
                }
                else {
                    if ($("select[name='@Html.NameFor(m => m.Districts)']").val() == guidEmpty) {
                        alert("Please choose an option for district and outpost too!");
                    }
                    else {
                        var selectedOutpostId = outpost.options[outpost.selectedIndex].value;
                        var selectedDistrictId = $("select[name='@Html.NameFor(m => m.Districts)']").val()
                        var drop = $("#stocklevel-overview")

                        
                            var urlOverview = '@Url.Action("OverviewItemsStockLevel", "OutpostStockLevel")?OutpostId=' + selectedOutpostId + '&DistrictId=' + selectedDistrictId;
                            $.get(urlOverview, function (data) {

                                drop.html('');
                                $('#stocklevel-overview').html(data);
                                var dropHistorical = $("#stocklevel-overview-historical");
                                dropHistorical.html('');

                            });
                       }
                }
            }

        }

        function ViewStockButtonClicked() {

            var outpost = document.getElementById("Outposts");
            var country = document.getElementById("Countries");
            var region = document.getElementById("Regions");
            var guidEmpty = "@Guid.Empty";

            if (country.options[country.selectedIndex].value == guidEmpty)
            { alert(" Please choose an option for each filter! "); }
            else {
                if (region.options[region.selectedIndex].value == guidEmpty) {
                    alert("Please choose an option for region,district and outpost too!");
                }
                else {
                    if ($("select[name='@Html.NameFor(m => m.Districts)']").val() == guidEmpty) {
                        alert("Please choose an option for district and outpost too!");
                    }
                    else {
                        var selectedOutpostId = outpost.options[outpost.selectedIndex].value;
                        var selectedDistrictId = $("select[name='@Html.NameFor(m => m.Districts)']").val()
                        var drop = $("#stocklevel-overview")

                        if (drop.html().length > 0) {
                            var urlOverview = '@Url.Action("OverviewItemsStockLevel", "OutpostStockLevel")?OutpostId=' + selectedOutpostId + '&DistrictId=' + selectedDistrictId;
                            $.get(urlOverview, function (data) {

                                drop.html('');
                                $('#stocklevel-overview').html(data);
                                var dropHistorical = $("#stocklevel-overview-historical");
                                dropHistorical.html('');

                            });
                        }
                        else {
                            var dropHistorical = $("#stocklevel-overview-historical");
                            var urlOverview = '@Url.Action("OverviewItemsStockLevelHistorical", "OutpostStockLevel")?OutpostId=' + selectedOutpostId + '&DistrictId=' + selectedDistrictId;
                            $.get(urlOverview, function (data) {

                                dropHistorical.html('')
                                $('#stocklevel-overview-historical').html(data);
                                drop.html('');

                            });

                        }


                    }
                }
            }

        }  
        function HistoricalButtonClicked() {

            var outpost = document.getElementById("Outposts");
            var country = document.getElementById("Countries");
            var region = document.getElementById("Regions");
            var guidEmpty = "@Guid.Empty";
            if (country.options[country.selectedIndex].value == guidEmpty)
            { alert(" Please chose an option for each filter! "); }
            else {
                if (region.options[region.selectedIndex].value == guidEmpty) {
                    alert("Please chose an option for region,district and outpost too!");
                }
                else {
                    if ($("select[name='@Html.NameFor(m => m.Districts)']").val() == guidEmpty) {
                        alert("Please chose an option for district and outpost too!");
                    }
                    else {
                        var selectedOutpostId = outpost.options[outpost.selectedIndex].value;
                        var selectedDistrictId = $("select[name='@Html.NameFor(m => m.Districts)']").val()
                        var drop = $("#stocklevel-overview-historical")
                        var dropCurrent = $("#stocklevel-overview")

                        var urlOverview = '@Url.Action("OverviewItemsStockLevelHistorical", "OutpostStockLevel")?OutpostId=' + selectedOutpostId + '&DistrictId=' + selectedDistrictId;
                        $.get(urlOverview, function (data) {

                            drop.html('')
                            dropCurrent.html('');
                            $('#stocklevel-overview-historical').html(data);

                        });

                    }
                }
            }

        }
        $("select[name='@Html.NameFor(m => m.Countries)']").change(function () {
            var e = $(this)[0];
            var selectedCountryId = e.options[e.selectedIndex].value;


            $.getJSON('@Url.Action("GetRegionsForCountry", "OutpostStockLevel")?countryId=' + selectedCountryId, function (data) {

                var drop = $("#Regions")
                drop.html('')


                var drop = $("#Districts")
                drop.html('')

                var drop = $("#Outposts")
                drop.html('')

                var ddlRegions = document.getElementById("Regions");
                var opt = document.createElement("option");
                opt.text = 'Please select a region';
                opt.value = '@Guid.Empty.ToString()';
                ddlRegions.options.add(opt);

                $.each(data, function () {

                    var opt = document.createElement("option");
                    opt.text = this['Text'];
                    opt.value = this['Value'];
                    ddlRegions.options.add(opt);
                });

            });

            $("select[name='@Html.NameFor(m => m.Countries)'] option[value='@Guid.Empty.ToString()']").remove();

        });

        $("select[name='@Html.NameFor(m => m.Regions)']").change(function () {

            var e = $(this)[0];
            var selectedRegionId = e.options[e.selectedIndex].value;

            $.getJSON('@Url.Action("GetDistrictsForRegion", "OutpostStockLevel")?regionId=' + selectedRegionId, function (data) {
                var drop = $("#Districts")
                drop.html('')

                var drop = $("#Outposts")
                drop.html('')

                var ddlRegions = document.getElementById("Districts");
                var opt = document.createElement("option");
                opt.text = 'Please select a district';
                opt.value = '@Guid.Empty.ToString()';
                ddlRegions.options.add(opt);

                $.each(data, function () {
                    var opt = document.createElement("option");
                    opt.text = this['Text'];
                    opt.value = this['Value'];
                    ddlRegions.options.add(opt);
                });

            });

            $("select[name='@Html.NameFor(m => m.Regions)'] option[value='@Guid.Empty.ToString()']").remove();
        });

        $("select[name='@Html.NameFor(m => m.Districts)']").change(function () {

            var e = $(this)[0];
            var selectedDistrictId = e.options[e.selectedIndex].value;

            $.getJSON('@Url.Action("GetOutpostsForDistrict", "OutpostStockLevel")?districtId=' + selectedDistrictId, function (data) {
                var drop = $("#Outposts")
                drop.html('')

                var ddlOutposts = document.getElementById("Outposts");
                var opt = document.createElement("option");
                opt.text = 'Please chose a option';
                opt.value = '@Guid.Empty.ToString()';

                ddlOutposts.options.add(opt);

                opt.text = 'All';
                opt.value = '00000000-0000-0000-0000-000000000001';

                ddlOutposts.options.add(opt);

                $.each(data, function () {
                    var opt = document.createElement("option");
                    opt.text = this['Text'];
                    opt.value = this['Value'];
                    ddlOutposts.options.add(opt);
                });

            });

            $("select[name='@Html.NameFor(m => m.Districts)'] option[value='@Guid.Empty.ToString()']").remove();

        });

        $("select[name='@Html.NameFor(m => m.OutpostId)']").change(function () {
            $("select[name='@Html.NameFor(m => m.OutpostId)'] option[value='@Guid.Empty.ToString()']").remove();

        });
    </script>
}
*@