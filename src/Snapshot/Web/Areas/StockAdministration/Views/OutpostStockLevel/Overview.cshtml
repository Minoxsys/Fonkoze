
@section page_title{
Outpost Stock Level Current
}
@{
    Html.RenderPartial("_OutpostStockLevelSubNavigation");
    Html.RenderPartial("_OutpostStockLevelSideBar");
    
}
<script type="text/javascript">
    Ext.onReady(function () {

        var outpostStockLevelBtnId = window.res.header.navigation.outpostStockLevel;
        var outpostStockLevelBtn = Ext.getCmp(outpostStockLevelBtnId);
        outpostStockLevelBtn.toggle(true);

        var outpostStockLevelBtnId = window.res.content.maincontent.sidebar.outpostStockLevelCurrent;
        var outpostStockLevelBtn = Ext.getCmp(outpostStockLevelBtnId);
        outpostStockLevelBtn.toggle(true);

    });
</script>
<script type="text/javascript">
    Ext.onReady(function () {

        window.feature = {};
        window.feature.comboboxCountriesId = 'comboboxCountriesId';
        window.feature.comboboxRegionsId = 'combobxRegionsId';
        window.feature.comboboxDistrictsId = 'comboboxDistrictsId';
        window.feature.comboboxOutpostsId = 'comboboxOutpostId';
        window.feature.ProductLevelValueForEditRecord = '';
        window.feature.OutpostStockLevelIdForEditRecord = '';

        window.feature.CountryStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetCountries" })',
                reader: {
                    type: 'json',
                    root: 'countries',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.RegionStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetRegions" })',
                reader: {
                    type: 'json',
                    root: 'regions',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.DistrictStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetDistricts" })',
                reader: {
                    type: 'json',
                    root: 'districts',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.OutpostStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetOutposts" })',
                reader: {
                    type: 'json',
                    root: 'outposts',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.comboBoxCountries = Ext.create('Ext.form.ComboBox', {
            store: window.feature.CountryStore,
            queryMode: 'local',
            id: window.feature.comboboxCountriesId,
            labelAlign: 'top',
            fieldLabel: 'Selected Country',
            displayField: 'Name',
            labelClsExtra: 'combo-label',
            valueField: 'Id',
            emptyText: _t('Country List'),
            editable: false,
            typeAhead: false,
            listeners: {
                select: function (combo, record, index) {
                    var selectedCountryId = record[0].data.Id;
                    var comboboxRegions = Ext.getCmp(window.feature.comboboxRegionsId);
                    comboboxRegions.setValue(null);
                    comboboxRegions.setDisabled(false);

                    window.feature.RegionStore.load({ params: { countryId: selectedCountryId} });

                    var comboboxDistricts = Ext.getCmp(window.feature.comboboxDistrictsId);
                    var comboboxOutposts = Ext.getCmp(window.feature.comboboxOutpostsId);


                    comboboxDistricts.setValue(null);
                    comboboxDistricts.setDisabled(true);

                    comboboxOutposts.setValue(null);
                    comboboxOutposts.setDisabled(true);

                }
            }
        });

        window.feature.comboBoxRegions = Ext.create('Ext.form.ComboBox', {
            store: window.feature.RegionStore,
            queryMode: 'local',
            id: window.feature.comboboxRegionsId,
            labelAlign: 'top',
            fieldLabel: 'Selected Region',
            labelClsExtra: 'combo-label',
            displayField: 'Name',
            valueField: 'Id',
            disabled: true,
            editable: false,
            typeAhead: false,
            emptyText: _t('Region List'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedRegionId = record[0].data.Id;
                    Ext.getCmp(window.feature.comboboxDistrictsId).setDisabled(false);
                    Ext.getCmp(window.feature.comboboxDistrictsId).setValue(null);
                    window.feature.DistrictStore.load({ params: { regionId: selectedRegionId} });

                    var comboboxOutpost = Ext.getCmp(window.feature.comboboxOutpostsId);

                    comboboxOutpost.setValue(null);
                    comboboxOutpost.setDisabled(true);

                }
            }
        });

        window.feature.comboBoxDistricts = Ext.create('Ext.form.ComboBox', {
            store: window.feature.DistrictStore,
            queryMode: 'local',
            id: window.feature.comboboxDistrictsId,
            labelAlign: 'top',
            fieldLabel: 'Selected District',
            labelClsExtra: 'combo-label',
            displayField: 'Name',
            valueField: 'Id',
            disabled: true,
            editable: false,
            typeAhead: false,
            emptyText: _t('District List'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedDistrictId = record[0].data.Id;
                    window.feature.OutpostStore.load({ params: { districtId: selectedDistrictId} });

                    Ext.getCmp(window.feature.comboboxOutpostsId).setDisabled(false);

                }
            }
        });

        window.feature.comboBoxOutposts = Ext.create('Ext.form.ComboBox', {
            store: window.feature.OutpostStore,
            queryMode: 'local',
            id: window.feature.comboboxOutpostsId,
            labelAlign: 'top',
            fieldLabel: 'Selected Outpost',
            displayField: 'Name',
            labelClsExtra: 'combo-label',
            valueField: 'Id',
            disabled: true,
            editable: false,
            typeAhead: false,
            emptyText: _t('Outpost List')

        });
        window.feature.fieldOutpostNameId = 'fieldOutpostNAmeId';
        window.feature.fieldProductNameId = 'fieldProductNameId';
        window.feature.fieldSMSCodeId = 'fieldSMSCodeId';
        window.feature.fieldUpdateMethodId = 'fieldUpdateMethodId';
        window.feature.fieldProductLevelId = 'fieldProductLevelId';
        window.feature.fieldPreviousLevelId = 'fieldPreviousLevelId';
        window.feature.fieldProductGroupNameId = 'fieldProductGroupNameId';
        window.feature.fieldDescriptionId = 'fielddescriptionId';
        window.feature.labelLastUpdateId = 'labelLastUpdatedId';
        window.feature.fieldOutpostStockLevelId = 'OutpostStockLevelId';

        window.feature.ModalWindowForEdit = Ext.define('Ext.feature.OutpostStockLevelEdit.Modal', {
            extend: 'Ext.window.Window',
            title: 'Edit a current level for an outpost',
            height: 370,
            width: 750,
            modal: true,
            ui: 'snapshot-popup-window',
           initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{
                        xtype: 'container',
                        layout: {
                            type: 'hbox'
                        },
                       items: [{ xtype: 'container',
                            layout: {
                                type: 'vbox'
                            },
                            items: [{ xtype: 'textfield',
                                fieldLabel: 'Outpost Name',
                                name: 'OutpostName',
                                padding:10,
                                width:300,
                                id: window.feature.fieldOutpostNameId,
                                readOnly: true
                            }, { xtype: 'textfield',
                                fieldLabel: 'Product',
                                padding: 10,
                                width:300,
                                name: 'ProductName',
                                id: window.feature.fieldProductNameId,
                                readOnly: true
                            }, { xtype: 'textfield',
                                fieldLabel: 'SMS Code',
                                padding: 10,
                                name: 'SMSCode',
                                id: window.feature.fieldSMSCodeId,
                                width: 150,
                                readOnly: true
                            }, { xtype: 'textfield',
                                fieldLabel: 'Update Method',
                                name: 'UpdateMethod',
                                padding: 10,
                                width: 190,
                                id: window.feature.fieldUpdateMethodId,
                                readOnly: true
                            }, { xtype: 'numberfield',
                                fieldLabel: 'Product Stock Level',
                                name: 'ProductLevel',
                                padding: 10,
                                width: 190,
                                id: window.feature.fieldProductLevelId,
                                allowBlank: false
                            }, { xtype: 'textfield',
                                fieldLabel: 'Previous Stock Level',
                                name: 'PreviousLevel',
                                padding: 10,
                                width: 190,
                                id: window.feature.fieldPreviousLevelId,
                                readOnly: true
                            }]
                        }, { xtype: 'container',
                            layout: {
                                type: 'vbox'
                            },
                            items: [{ xtype: 'textfield',
                                fieldLabel: 'Product Group',
                                name: 'ProductGroupName',
                                padding: '10 10 0 90',
                                width:320,
                                id: window.feature.fieldProductGroupNameId,
                                readOnly: true
                            }, { xtype: 'textarea',
                                fieldLabel: 'Description',
                                name: 'Description',
                                padding: '10 10 0 90',
                                id: window.feature.fieldDescriptionId,
                                width:320,
                                height:80,
                                readOnly: true
                            }, { xtype: 'container',
                                layout: { type: 'hbox' },
                                items: [{ xtype: 'label',
                                    text: 'Last Update At',
                                    padding:'10 10 0 90'
                                }, { xtype: 'label',
                                    id: window.feature.labelLastUpdateId,
                                    padding:'10 10 0 10',
                                    text: ''
                                }, { xtype: 'textfield',
                                    id: window.feature.fieldOutpostStockLevelId,
                                    hidden: true
                                }]
                            }]
                        }]
                    }]
                });

                me.buttons = [{ text: 'Cancel',
                  margin: '10 10 20 0',
                    ui: 'snapshot-cancel-btn',
                    cls: 'x-add-button-gradient',
                 handler: function () { me.close(); me.destroy(); }
                }, {
                    text: 'Save',
                    margin: '10 10 20 0',
                    ui: 'snapshot-add-btn',
                    cls: 'x-add-button-gradient',
                    handler: function () {
                        var outpostStockLevelId = Ext.getCmp(window.feature.fieldOutpostStockLevelId);
                        var ProductLevel = me.down('#' + window.feature.fieldProductLevelId);

                        var ok = IsValid(ProductLevel);
                        if (ok == true) {
                            var values = {
                                'outpostStockLevelInput.StockLevel': ProductLevel.getValue(),
                                'outpostStockLevelInput.Id': outpostStockLevelId.getValue()
                            };
                            var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "Edit" })';
                            var action = $.post(postToUrl, values);
                            action.success(function (result) {

                            var selectedOutpostId = window.feature.comboBoxOutposts.getValue();
                             var selectedDistrictId = window.feature.comboBoxDistricts.getValue();
                             var ProductGroupExpanded = Ext.getCmp(window.feature.fieldProductGroupNameId).getValue();
                             window.feature.treegrid.getStore().proxy.extraParams.OutpostId = selectedOutpostId;
                             window.feature.treegrid.getStore().proxy.extraParams.DistrictId = selectedDistrictId;
                             window.feature.treegrid.getStore().proxy.extraParams.ProductGroupExpandedOnEdit = ProductGroupExpanded;
                             window.feature.treegrid.setRootNode(null);
                             window.feature.treegrid.getRootNode().expand();
                             
                             me.close();
                             me.destroy();

                            });
                        }
                    }
                }]
                me.callParent(arguments);
            }
        });

        function IsValid(ProductLevel) {

            var ok = true;
            if (ProductLevel.getValue() == '') {
                ProductLevel.markInvalid('Field Product Stock Level is required!');
                ProductLevel.setValue(null);
                ok = false;
            }
            return ok;
        }

        Ext.define('OutpostStockLevel', {
            extend: 'Ext.data.Model',
            fields: ['Name', 'Id', 'ProductLevel', 'SMSCode', 'LastUpdate', 'UpdateMethod', 'PreviousLevel', 'Description', 'ProductGroupName', 'OutpostName', 'leaf']
        });

        window.feature.treeStore = Ext.create('Ext.data.TreeStore', {
            model: 'OutpostStockLevel',
            autoLoad: false,
            root: {},
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "OutpostStockLevel", action = "GetOutpostStockLevelData" })',
                extraParams: { OutpostId: '', DistrictId: '', ProductGroupExpandedOnEdit: '' }
            }
        });

        window.feature.treegrid = Ext.create('Ext.tree.Panel', {
            useArrows: true,
            rootVisible: false,
            cls: 'white-border',
            flex: 3,
            root: {},
            store: window.feature.treeStore,
            multiSelect: true,
            singleExpand: false,
            columns: [{
                xtype: 'treecolumn',
                text: 'Products',
                flex: 1.2,
                minWidth: 120,
                menuDisabled: true,
                sortable: true,
                dataIndex: 'Name'
            }, {
                xtype: 'templatecolumn',
                text: 'Product Level',
                flex: 1,
                minWidth: 80,
                menuDisabled: true,
                sortable: true,
                dataIndex: 'ProductLevel',
                align: 'center',
                tpl: Ext.create('Ext.XTemplate', '{ProductLevel:this.ProductLevel}', {
                    ProductLevel: function (value) {
                        if (value === 0) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, {
                xtype: 'templatecolumn',
                text: 'SMS Code',
                flex: 1,
                minWidth: 80,
                menuDisabled:true,
                sortable: false,
                dataIndex: 'SMSCode',
                align: 'center',
                tpl: Ext.create('Ext.XTemplate', '{SMSCode:this.SMSCode}', {
                    SMSCode: function (value) {
                        if (value === null) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'templatecolumn',
                text: 'Last Update',
                flex: 1,
                minWidth: 120,
                menuDisabled: true,
                dataIndex: 'LastUpdate',
                align: 'center',
                tpl: Ext.create('Ext.XTemplate', '{LastUpdate:this.LastUpdate}', {
                    LastUpdate: function (value) {
                        if (value === null) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'templatecolumn',
                text: 'Update Method',
                flex: 1,
                minWidth: 100,
                menuDisabled: true,
                dataIndex: 'UpdateMethod',
                align: 'center',
                tpl: Ext.create('Ext.XTemplate', '{UpdateMethod:this.UpdateMethod}', {
                    UpdateMethod: function (value) {
                        if (value === null) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'templatecolumn',
                text: ' Previous Level',
                flex: 1,
                minWidth: 80,
                menuDisabled: true,
                dataIndex: 'PreviousLevel',
                align: 'center',
                tpl: Ext.create('Ext.XTemplate', '{PreviousLevel:this.PreviousLevel}', {
                    PreviousLevel: function (value) {
                        if (value === 0) {
                            return '';
                        }
                        else { return value; }

                    }
                })
            }, { xtype: 'actioncolumn',
                 text: 'Actions',
                 menuDisabled: true,
                 flex:1,
                 minWidth: 150,
                 items: [{ icon: '@Url.AssetUrl("img/edit.png")',
                    tooltip: _t('Edit product level'),
                    handler: function (grid, rowIndex, colIndex) {
                    if(@(ViewBag.HasNoRightsToEdit) === true){
                                           var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert("Alert","You have no rights for this action!");
                            }else{
                        var recordData = grid.store.getAt(rowIndex);

                        var ModalWindowForEdit = new window.feature.ModalWindowForEdit();

                        Ext.getCmp(window.feature.fieldOutpostNameId).setValue(recordData.data.OutpostName);
                        Ext.getCmp(window.feature.fieldOutpostStockLevelId).setValue(recordData.data.Id);
                        Ext.getCmp(window.feature.fieldProductNameId).setValue(recordData.data.Name);
                        Ext.getCmp(window.feature.fieldSMSCodeId).setValue(recordData.data.SMSCode);
                        Ext.getCmp(window.feature.fieldUpdateMethodId).setValue(recordData.data.UpdateMethod);
                        Ext.getCmp(window.feature.fieldDescriptionId).setValue(recordData.data.Description);
                        Ext.getCmp(window.feature.fieldPreviousLevelId).setValue(recordData.data.PreviousLevel);
                        Ext.getCmp(window.feature.fieldProductGroupNameId).setValue(recordData.data.ProductGroupName);
                        Ext.getCmp(window.feature.fieldProductLevelId).setValue(recordData.data.ProductLevel);
                        Ext.getCmp(window.feature.labelLastUpdateId).text = recordData.data.LastUpdate;

                        ModalWindowForEdit.show();}
                    },
                     getClass:function(value,metadata,record){
                        var leaf = record.data.leaf;
                        if(leaf == false)
                            return 'x-hide-display';
                        }
                }]
               
            }]
        });
        
        var contentRes = window.res.content;
        window.feature.CountryStore.load();

        var mainContent = Ext.getCmp(contentRes.maincontent.id);
        mainContent.add({
            xtype: 'container',
            margin: '15 15 15 15',
            padding: '20 20 0 20',
            autoScroll:true,
            id:'TopContainer',
            layout: {
                align: 'stretch',
                type: 'vbox'
            },
            items: [
            {
                xtype: 'container',
                layout: {
                    align: 'stretch',
                    type: 'vbox'
                },
                height: 110,
                items: [
                {
                    xtype: 'container',
                    height: 45,
                    layout: {
                        type: 'column'
                    },
                    items: [{
                        xtype: 'container',
                        width: 20,
                        html:'&nbsp;'
                    },{xtype: 'image',
                       src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/OutpostStockLevel/CurrentProductLevel.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                       margin: '0 20 0 10'
                      },{
                        xtype: 'label',
                        cls: 'x-title-label',
                        text: 'Current Product Status'

                    }]
                    },{
						xtype: 'container',
                        height: 65,
						layout: {
							type: 'column'
						},
						items: [
						{
							xtype: 'container',
							html:'&nbsp;'
						}, 
                            window.feature.comboBoxCountries, 
							window.feature.comboBoxRegions,
							window.feature.comboBoxDistricts,
							window.feature.comboBoxOutposts 
                        ,{ 
                            xtype: 'button',
                            margin: '25 0 10 0',
                            text: 'View Product Status',
                            ui: 'snapshot-add-btn',
                            cls: 'x-add-button-gradient',
                            handler: function () {
                                var selectedOutpostId = window.feature.comboBoxOutposts.getValue();
                                var selectedDistrictId = window.feature.comboBoxDistricts.getValue();
                                
                                window.feature.treeStore.setRootNode(null);        
                                if(selectedOutpostId !==null){
                                    window.feature.treegrid.getStore().proxy.extraParams.OutpostId = selectedOutpostId;
                                    window.feature.treegrid.getStore().proxy.extraParams.DistrictId = selectedDistrictId;
                                    window.feature.treegrid.getStore().proxy.extraParams.ProductGroupExpandedOnEdit = '';
                                    window.feature.treegrid.getRootNode().expand();
                                }else{
                                    var msgAlert = Ext.Msg;
                                     msgAlert.ui = 'snapshot-popup-window';
                                     msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                     msgAlert.msgButtons['ok'].margin = '10 10 20 0',
                                     msgAlert.alert("Alert", "Please select all option in order to see outpost stock level data!");
                                    
                                }
                            }
                        }]
				    }]
			},
				window.feature.treegrid
            ]
        });

    });
</script>