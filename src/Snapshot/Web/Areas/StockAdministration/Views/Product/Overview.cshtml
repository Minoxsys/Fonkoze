@model Web.Areas.StockAdministration.Models.Product.ProductOverviewModel
@using Microsoft.Web.Mvc;
@using Web.Areas.OutpostManagement.HtmlHelpers;
@section page_title{
Product Item: Overview
}
@{
    Html.RenderPartial("_SubNavigation");
    Html.RenderPartial("_ProductAdministrationSideBar");
}
<script type="text/javascript">
    Ext.onReady(function () {

        var administrationBtnId = window.res.header.navigation.administration;
        var administrationBtn = Ext.getCmp(administrationBtnId);
        administrationBtn.toggle(true);

        var productSideBarBtnId = window.res.content.maincontent.sidebar.product;
        var productBtn = Ext.getCmp(productSideBarBtnId);

        productBtn.toggle(true);


        var productAdministrationBtnId = window.res.header.subnavigation.buttonTabs.product;
        var productAdministrationBtn = Ext.getCmp(productAdministrationBtnId);
        productAdministrationBtn.toggle(true);
    });
</script>
<script type="text/javascript">
    Ext.onReady(function () {
        window.feature = {};
        window.feature.searchTextFieldId = 'searchTextField';
        window.feature.comboboxProductGroupsId = 'comboboxProductGroupId';
        window.feature.comboboxProductGroupsForModalId = 'comboboxForModalId';
        window.feature.ProductNameId = 'productNameId';
        window.feature.ProductDescriptionId = 'productDescriptionId';
        window.feature.ProductLowerLimitId = 'productLowerLimitId';
        window.feature.ProductUpperLimitId = 'productUpperLimitId';
        window.feature.ProductSMSReferecenceCodeId = 'productSMSCodeId';
        window.feature.formProductGroupNameId = 'productGroupName';
        window.feature.formProductGroupReferenceCodeId = 'productGroupRef';
        window.feature.formProductGroupDescriptionId = 'productGroupDesc';
        window.feature.productId = 'productId';
        var timeout;

        window.feature.modalAddProductGroup = Ext.define('Ext.feature.productGroup.Modal', {
            extend: 'Ext.window.Window',
            modal: true,
            height: 230,
            width: 390,
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },

            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{
                        xtype: 'textfield',
                        name: 'Name',
                        fieldLabel: 'Product Group Name',
                        anchor: '100%',
                        itemId: window.feature.formProductGroupNameId
                    }, {
                        xtype: 'textfield',
                        name: 'ReferenceCode',
                        fieldLabel: 'Product Group Reference Code',
                        anchor: '100%',
                        itemId: window.feature.formProductGroupReferenceCodeId
                    }, {
                        xtype: 'textareafield',
                        name: 'Description',
                        fieldLabel: 'Description',
                        grow: true,
                        anchor: '100%',
                        itemId: window.feature.formProductGroupDescriptionId
                    }]
                });

                me.callParent(arguments);
            }
        });

        window.feature.ProductGroupStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "GetProductGroups" })',
                reader: {
                    type: 'json',
                    root: 'productGroups',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });
        window.feature.ProductGroupStoreForModal = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            pageSize: 50,
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "GetProductGroups" })',
                reader: {
                    type: 'json',
                    root: 'productGroups',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });
        window.feature.comboBoxProductGroups = Ext.create('Ext.form.ComboBox', {
            store: window.feature.ProductGroupStore,
            queryMode: 'local',
            id: window.feature.comboboxProductGroupsId,
            displayField: 'Name',
            fieldLabel: 'Product Group',
            valueField: 'Id',
            margin: '0 0 0 30',
            emptyText: _t('Selected product group'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedProductGroupId = record[0].data.Id;
                    window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupId;
                    window.feature.store.loadPage(1);

                }
            }
        });
        function IsValid(productGroup, productName, productSMSCode) {

            var ok = true;
            if (productGroup.getValue() == '') {
                productGroup.markInvalid('Field Product Group is required!');
                productGroup.setValue(null);
                ok = false;
            }

            if (productName.getValue() == '') {
                productName.markInvalid('Field Product is required!');
                productName.setValue(null);
                ok = false;
            }

            if (productSMSCode.getValue() == '') {
                productSMSCode.markInvalid('Field SMS Code is required!');
                productSMSCode.setValue(null);
                ok = false;
            }
            return ok;
        }
        window.feature.modal = Ext.define('Ext.feature.product.Modal', {
            extend: 'Ext.window.Window',
            title: 'Add new product',
            height: 320,
            width: 690,
            modal: true,
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{
                        xtype: 'container',
                        layout: {
                            type: 'hbox'
                        },
                        height: 50,
                        items: [{ xtype: 'combobox',
                            fieldLabel: 'Product Group',
                            store: window.feature.ProductGroupStoreForModal,
                            queryMode: 'local',
                            displayField: 'Name',
                            valueField: 'Id',
                            id: window.feature.comboboxProductGroupsForModalId,
                            emptyText: 'Select a product group'
                        },{
                            xtype: 'button',
                            text: 'Add a New Group',
                            width: 160,
                            height: 24,
                            margin: '0 0 0 70',
                            handler: function () {                            
                            var winAdd = new window.feature.modalAddProductGroup({
                                title: 'Add New Product Group',
                                buttons: [
                                    { text: 'Cancel', handler:function(){ winAdd.close(); winAdd.destroy();} },
                                    { text: 'Save',  handler:function(){

                                        var productGroupName = winAdd.down('#'+window.feature.formProductGroupNameId);
                                        var productGroupDescription = winAdd.down('#'+window.feature.formProductGroupDescriptionId);
                                        var productGroupReferenceCode = winAdd.down('#'+window.feature.formProductGroupReferenceCodeId);
                                    
                                        var ok = IsValid(productGroupName, productGroupDescription, productGroupReferenceCode);
                                        if (ok == true){
                                            var values = {
                                                Name:  productGroupName.getValue(),
                                                Description:  productGroupDescription.getValue(),
                                                ReferenceCode: productGroupReferenceCode.getValue(),
                                            };

                                            var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "ProductGroup", action = "Create" })';
                                            var action = $.post(postToUrl, values);
                                            action.success(function(serverResponse){
                                                if(serverResponse.Status === "Error"){
                                                }
                                                var productGroupNameSaved = productGroupName.getValue();

                                                window.feature.ProductGroupStoreForModal.load();

                                                clearTimeout(timeout);
                                                    timeout = setTimeout(function () {
                                                 var comboboxProductGroupsForModal = Ext.getCmp(window.feature.comboboxProductGroupsForModalId); 
                                                 var indexOfProductGroupSaved = window.feature.ProductGroupStoreForModal.find('Name',productGroupNameSaved);
                                                 var record = window.feature.ProductGroupStoreForModal.getAt(indexOfProductGroupSaved);
                                                 var id = record.data.Id;
                                                 comboboxProductGroupsForModal.setValue(id);  
                                                }, 1000);
                                                        
                                                winAdd.close();
                                                winAdd.destroy();                                                
                                                window.feature.ProductGroupStore.load();
                                                
                                                
                                            });
                                            
                                        }

                                    }
                                    }
                                ]
                            });
                            winAdd.show();

                            }
                        }]
                    }, {
                        xtype: 'textfield',
                        name: 'Name',
                        fieldLabel: 'Product',
                        allowBlank: false,
                        id: window.feature.ProductNameId,
                        width: 10,
                        anchor: '-10'
                    }, {
                        xtype: 'textarea',
                        name: 'Description',
                        fieldLabel: 'Description',

                        id: window.feature.ProductDescriptionId

                    }, { xtype: 'numberfield',
                        name: 'LowerLimit',
                        fieldLabel: 'Lower Limit',
                        id: window.feature.ProductLowerLimitId
                    }, { xtype: 'numberfield',
                        name: 'UpperLimit',
                        fieldLabel: 'Upper Limit',
                        id: window.feature.ProductUpperLimitId

                    }, { xtype: 'textfield',
                        name: 'SMSReferenceCode',
                        fieldLabel: 'SMS Code',
                        id: window.feature.ProductSMSReferecenceCodeId

                    }]
                });
                me.listeners = {
                    afterrender: function () {
                        window.feature.ProductGroupStoreForModal.load();

                        var selectedProductGroupId = window.feature.comboBoxProductGroups.getValue();
                        var comboboxProductGroupsForModal = Ext.getCmp(window.feature.comboboxProductGroupsForModalId);

                        if (selectedProductGroupId !== null) {
                            comboboxProductGroupsForModal.value = selectedProductGroupId;
                        }
                    }
                };

                me.buttons = [{ text: 'Cancel', handler: function () { me.close(); me.destroy(); window.feature.ProductGroupStore.load(); }
                }, {
                    text: 'Save', handler: function () {
                        var productGroup = Ext.getCmp(window.feature.comboboxProductGroupsForModalId);
                        var productName = me.down('#' + window.feature.ProductNameId);
                        var productDescription = me.down('#' + window.feature.ProductDescriptionId);
                        var productLowerLimit = me.down('#' + window.feature.ProductLowerLimitId);
                        var productUpperLimit = me.down('#' + window.feature.ProductUpperLimitId);
                        var productSMSCode = me.down('#' + window.feature.ProductSMSReferecenceCodeId);

                        var ok = IsValid(productGroup, productName, productSMSCode);
                        if (ok == true) {
                            var values = {
                                'inputProductModel.Name': productName.getValue(),
                                'inputProductModel.ProductGroup.Id': productGroup.getValue(),
                                'inputProductModel.LowerLimit': productLowerLimit.getValue(),
                                'inputProductModel.UpperLimit': productUpperLimit.getValue(),
                                'inputProductModel.SMSReferenceCode': productSMSCode.getValue(),
                                'inputProductModel.Description': productDescription.getValue()
                            };
                            var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "Create" })';
                            var action = $.post(postToUrl, values);
                            action.success(function (result) {

                                if (result.CloseModal === false) {
                                    Ext.Msg.alert(result.Status, result.Message);
                                }
                                else {
                                   if(result.Status === "Error"){
                                                Ext.Msg.alert(result.Status, result.Message);
                                                }
                                    var selectedProductGroupInModal = Ext.getCmp(window.feature.comboboxProductGroupsForModalId).getValue();
                                    me.close();
                                    me.destroy();
                                    window.feature.ProductGroupStore.load();

                                    var comboboxProductGroups = Ext.getCmp(window.feature.comboboxProductGroupsId);
                                    comboboxProductGroups.setValue(selectedProductGroupInModal);
                                    Ext.getCmp(window.feature.comboboxProductGroupsId).value = selectedProductGroupInModal;

                                    window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupInModal;
                                    window.feature.store.loadPage(1);
                                }
                            });
                        }
                    }
                }]
                me.callParent(arguments);
            }
        });

         window.feature.modalEdit = Ext.define('Ext.feature.product.Modal', {
            extend: 'Ext.window.Window',
            title: 'Edit product',
            height: 470,
            width: 690,
            modal: true,
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{
                        xtype: 'container',
                        layout: {
                            type: 'hbox'
                        },
                        height: 50,
                        items: [{ xtype: 'combobox',
                            fieldLabel: 'Product Group',
                            store: window.feature.ProductGroupStoreForModal,
                            queryMode: 'local',
                            displayField: 'Name',
                            valueField: 'Id',
                            id: window.feature.comboboxProductGroupsForModalId,
                            emptyText: 'Select a product group'
                        }, {
                            xtype: 'button',
                            text: 'Add a New Group',
                            width: 150,
                            handler: function () {                            
                            var winAdd = new window.feature.modalAddProductGroup({
                                title: 'Add New Product Group',
                                buttons: [
                                    { text: 'Cancel', handler:function(){ winAdd.close(); winAdd.destroy();} },
                                    { text: 'Save',  handler:function(){

                                        var productGroupName = winAdd.down('#'+window.feature.formProductGroupNameId);
                                        var productGroupDescription = winAdd.down('#'+window.feature.formProductGroupDescriptionId);
                                        var productGroupReferenceCode = winAdd.down('#'+window.feature.formProductGroupReferenceCodeId);
                                    
                                        var ok = IsValid(productGroupName, productGroupDescription, productGroupReferenceCode);
                                        if (ok == true){
                                            var values = {
                                                Name:  productGroupName.getValue(),
                                                Description:  productGroupDescription.getValue(),
                                                ReferenceCode: productGroupReferenceCode.getValue(),
                                            };

                                            var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "ProductGroup", action = "Create" })';
                                            var action = $.post(postToUrl, values);
                                            action.success(function(serverResponse){
                                                if(serverResponse.Status === "Error"){
                                                }
                                                window.feature.ProductGroupStoreForModal.load();

                                                clearTimeout(timeout);
                                                    timeout = setTimeout(function () {
                                                 var comboboxProductGroupsForModal = Ext.getCmp(window.feature.comboboxProductGroupsForModalId); 
                                                 var indexOfProductGroupSaved = window.feature.ProductGroupStoreForModal.find('Name',productGroupName.getValue());
                                                 var record = window.feature.ProductGroupStoreForModal.getAt(indexOfProductGroupSaved);
                                                 var id = record.data.Id;
                                                 comboboxProductGroupsForModal.setValue(id);  
                                                }, 1000);
                                                  
                                                winAdd.close();
                                                winAdd.destroy();                                                
                                                window.feature.ProductGroupStore.load();
                                                
                                            });
                                            
                                        }

                                    }
                                    }
                                ]
                            });
                            winAdd.show();

                            }
                        }]
                    }, {
                        xtype: 'textfield',
                        name: 'Name',
                        fieldLabel: 'Product',
                        allowBlank: false,
                        id: window.feature.ProductNameId,
                        width: 50

                    }, {
                        xtype: 'textarea',
                        name: 'Description',
                        fieldLabel: 'Description',

                        id: window.feature.ProductDescriptionId

                    }, { xtype: 'numberfield',
                        name: 'LowerLimit',
                        fieldLabel: 'Lower Limit',
                        id: window.feature.ProductLowerLimitId
                    }, { xtype: 'numberfield',
                        name: 'UpperLimit',
                        fieldLabel: 'Upper Limit',
                        id: window.feature.ProductUpperLimitId

                    }, { xtype: 'textfield',
                        name: 'SMSReferenceCode',
                        fieldLabel: 'SMS Code',
                        id: window.feature.ProductSMSReferecenceCodeId

                    },{ xtype: 'textfield',
                        hidden: true,
                        id: window.feature.productId
                    }]
                });
                me.listeners = {
                    afterrender: function () {
                        window.feature.ProductGroupStoreForModal.load();

                        var selectedProductGroupId = window.feature.comboBoxProductGroups.getValue();
                        var comboboxProductGroupsForModal = Ext.getCmp(window.feature.comboboxProductGroupsForModalId);

                        if (selectedProductGroupId !== null) {
                            comboboxProductGroupsForModal.value = selectedProductGroupId;
                        }
                    }
                };

                me.buttons = [{ text: 'Cancel', handler: function () { me.close(); me.destroy(); window.feature.ProductGroupStore.load(); }
                }, {
                    text: 'Save', handler: function () {
                        var productGroup = Ext.getCmp(window.feature.comboboxProductGroupsForModalId);
                        var productName = me.down('#' + window.feature.ProductNameId);
                        var productDescription = me.down('#' + window.feature.ProductDescriptionId);
                        var productLowerLimit = me.down('#' + window.feature.ProductLowerLimitId);
                        var productUpperLimit = me.down('#' + window.feature.ProductUpperLimitId);
                        var productSMSCode = me.down('#' + window.feature.ProductSMSReferecenceCodeId);
                        var productId = me.down('#' + window.feature.productId);

                        var ok = IsValid(productGroup, productName, productSMSCode);
                        if (ok == true) {
                            var values = {
                                'inputProductModel.Name': productName.getValue(),
                                'inputProductModel.ProductGroup.Id': productGroup.getValue(),
                                'inputProductModel.LowerLimit': productLowerLimit.getValue(),
                                'inputProductModel.UpperLimit': productUpperLimit.getValue(),
                                'inputProductModel.SMSReferenceCode': productSMSCode.getValue(),
                                'inputProductModel.Description': productDescription.getValue(),
                                'inputProductModel.Id': productId.getValue()
                            };
                            var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "Edit" })';
                            var action = $.post(postToUrl, values);
                            action.success(function (result) {

                                if (result.CloseModal === false) {
                                    Ext.Msg.alert(result.Status, result.Message);
                                }
                                else {
                                   if(result.Status === "Error"){
                                                Ext.Msg.alert(result.Status, result.Message);
                                                }
                                    var selectedProductGroupInModal = Ext.getCmp(window.feature.comboboxProductGroupsForModalId).getValue();
                                    me.close();
                                    me.destroy();
                                    window.feature.ProductGroupStore.load();

                                    var comboboxProductGroups = Ext.getCmp(window.feature.comboboxProductGroupsId);
                                    comboboxProductGroups.setValue(selectedProductGroupInModal);
                                    Ext.getCmp(window.feature.comboboxProductGroupsId).value = selectedProductGroupInModal;

                                    window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupInModal;
                                    window.feature.store.loadPage(1);
                                }
                            });
                        }
                    }
                }]
                me.callParent(arguments);
            }
        });

        window.feature.store = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: true,
            fields: ['Name', 'ProductGroupName', 'SMSReferenceCode', 'LowerLimit', 'UpperLimit', 'Id', 'Description'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "GetProducts" })',
                extraParams: { productGroupId: '', searchName: '' },
                reader: { type: 'json',
                    root: 'products',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true

            },
            sorters: [{
                property: 'Name',
                direction: 'DESC'
            }]
        });

        window.feature.grid = Ext.create('Ext.grid.Panel', {
            flex: 3,
            store: window.feature.store,
            disableSelection: true,
            loadMask: true,
            columns: [{
                text: "Products",
                dataIndex: 'Name',
                anchor: '90%',
                sortable: true,
                flex: 1,
                renderer: function (value, metaData, record, colIndex, store, view) {
                    var description = record.data.Description;
                    metaData.tdAttr = 'data-qtip="' + value + '"';
                    return value;
                }
            }, {
                text: "Product Groups",
                dataIndex: 'ProductGroupName',
                flex: 1,
                sortable: true
            }, {
                text: "SMS Code",
                dataIndex: 'SMSReferenceCode',
                flex: 1,
                sortable: false
            }, {
                text: "Lower Limit",
                dataIndex: 'LowerLimit',
                flex: 1,
                sortable: false
            }, {
                text: "Upper Limit",
                dataIndex: 'UpperLimit',
                flex: 1,
                sortable: false
            }, {
                xtype: 'actioncolumn',
                text: 'Actions',
                items: [{
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/edit.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',     
                    tooltip: _t('Edit this product'),
                    handler: function (grid, rowIndex, colIndex) {
                        var record = grid.store.getAt(rowIndex);
                        var selectedProductGroupId = Ext.getCmp(window.feature.comboboxProductGroupsId).getValue();
                        
                        var modalForEdit = new window.feature.modalEdit();
                        Ext.getCmp(window.feature.ProductNameId).setValue(record.data.Name);
                        Ext.getCmp(window.feature.ProductLowerLimitId).setValue(record.data.LowerLimit);
                        Ext.getCmp(window.feature.ProductUpperLimitId).setValue(record.data.UpperLimit);
                        Ext.getCmp(window.feature.ProductSMSReferecenceCodeId).setValue(record.data.SMSReferenceCode);
                        Ext.getCmp(window.feature.ProductDescriptionId).setValue(record.data.Description);
                        Ext.getCmp(window.feature.productId).setValue(record.data.Id);
                        Ext.getCmp(window.feature.comboboxProductGroupsForModalId).setValue(record.data.ProductGroupId);
                        modalForEdit.show();
                    }
                },{
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/delete.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',     
                    tooltip: _t('Remove this product'),
                    handler: function (grid, rowIndex, colIndex) {

                    var record = grid.store.getAt(rowIndex);

                    Ext.MessageBox.confirm('Confirm', 'Are you sure you want to delete the product?', function (button) {

                            var values = { guid: record.data.Id
                            };
                            if (button === 'yes') {

                                var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "Delete" })';
                                var action = $.post(postToUrl, values);
                                action.success(function (result) {
                                    if(result.Status === "Error"){
                                                Ext.Msg.alert(result.Status, result.Message);
                                                }                                      
                                    var selectedProductGroupId = Ext.getCmp(window.feature.comboboxProductGroupsId).getValue();
                                    
                                    if (selectedProductGroupId) {
                                        window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupId;
                                        window.feature.store.loadPage(1);
                                    } else {
                                            window.feature.store.proxy.extraParams.productGroupId ='';
                                            window.feature.store.loadPage(1);
                                        
                                    }

                                });

                            }

                        });
                    }                    
                }

            ]
            }],
            bbar: Ext.create('Ext.PagingToolbar', {
                store: window.feature.store,
                displayInfo: true,
                displayMsg: 'Displaying topics {0} - {1} of {2}',
                emptyMsg: "No topics to display"
            })
        });
        function GetStoreWithProductsSpecificToProductGroupWith(selectedProductGroupId) {

            window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupId;
            window.feature.store.loadPage(1);
        }

        var contentRes = window.res.content;
        window.feature.ProductGroupStore.load();

        var mainContent = Ext.getCmp(contentRes.maincontent.id);
        mainContent.add({
            xtype: 'container',
            margin:'20 50 20 0',
			autoScroll:true,
			id:'TopContainer',
			layout: {
				align: 'stretch',
				type: 'vbox'
			},
			items: [
				{
					xtype: 'container',
					layout: {
						align: 'stretch',
						type: 'vbox'
					},
					height:70,
					items: [{
							xtype: 'container',
							flex: 1,
                            layout: {
                                type: 'hbox',
                            },
                            items: [{
                                xtype: 'container',
                                flex: 1,
							    layout: {
								    type: 'column'
							    },
							    items: [{
									xtype: 'container',
									height: 30,
									width: 30,
									html:'&nbsp;'
								},{
									xtype: 'label',
									text: 'Products',
								},{
									xtype: 'button',
                                    margin: '0 0 0 20',
                                    text: 'Add New Product',
                                    handler: function () {
                                        var productModal = new window.feature.modal();
                                        productModal.show();
                                    }
								}]
                            },{
                                xtype: 'container',
                                flex: 1,
							    layout: {
								    type: 'hbox',
                                    pack:'end'
							    },
                                items: [{
                                    xtype: 'textfield',
                                    id: window.feature.searchTextFieldId,
                                    width: 200,
                                    frame: true,
                                    emptyText: 'Product Search',
                                    enableKeyEvents: true,
                                    listeners: {
                                        specialkey: function (field, e) {
                                            if (e.getKey() == Ext.EventObject.ESC) {
                                                var selectedProductGroupId = Ext.getCmp(window.feature.comboboxProductGroupsId).getValue();

                                                window.feature.store.proxy.extraParams.searchName = '';

                                                Ext.getCmp(window.feature.searchTextFieldId).setValue('');
                                                if (selectedProductGroupId) {
                                                    GetStoreWithProductsSpecificToProductGroupWith(selectedProductGroupId)
                                                } else {
                                                    window.feature.store.loadPage(1);
                                                }
                                            }
                                        },
                                        keyup: function () {

                                            var selectedProductId = Ext.getCmp(window.feature.comboboxProductGroupsId).getValue();
                                            var searchByName = Ext.getCmp(window.feature.searchTextFieldId).getValue();

                                            window.feature.store.proxy.extraParams.searchName = searchByName;

                                            clearTimeout(timeout);
                                            timeout = setTimeout(function () {

                                                if (selectedProductId) {
                                                    GetStoreWithProductsSpecificToProductGroupWith(selectedProductId)
                                                } else {
                                                    window.feature.store.loadPage(1);
                                                }
                                            }, 1000);


                                        }
                                    }
                                }]
                            }]
						},{
							xtype: 'container',
							flex: 1,
							layout: {
								type: 'column'
							},
							items: [
								window.feature.comboBoxProductGroups
							]
						}
					]
				},
					window.feature.grid
				,{
					xtype:'container',
					height:150
				}
			]
        });

         window.feature.store.loadPage(1);
    });
</script>
