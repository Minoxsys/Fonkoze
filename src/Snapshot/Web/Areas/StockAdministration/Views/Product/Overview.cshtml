@model Web.Areas.StockAdministration.Models.Product.ProductOverviewModel
@using Microsoft.Web.Mvc;
@using Web.Areas.OutpostManagement.HtmlHelpers;
@section page_title{
    Product Item: Overview
}
@{
    Html.RenderPartial("_SubNavigation");
    Html.RenderPartial("_ProductAdministrationSideBar");
}
<script type="text/javascript">
    Ext.onReady(function () {

        var administrationBtnId = window.res.header.navigation.administration;
        var administrationBtn = Ext.getCmp(administrationBtnId);
        administrationBtn.toggle(true);

        var productSideBarBtnId = window.res.content.maincontent.sidebar.product;
        var productBtn = Ext.getCmp(productSideBarBtnId);

        productBtn.toggle(true);
       

        var productAdministrationBtnId = window.res.header.subnavigation.buttonTabs.product;
        var productAdministrationBtn = Ext.getCmp(productAdministrationBtnId);
        productAdministrationBtn.toggle(true);
        productAdministrationBtn.setIcon('@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Administration/SubMenu/ProductSelected.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))');
    });
</script>
<script type="text/javascript">
    Ext.onReady(function () {
        window.feature = {};
        window.feature.searchTextFieldId = 'searchTextField';
        window.feature.comboboxProductGroupsId = 'comboboxProductGroupId';
        window.feature.comboboxProductGroupsForModalId = 'comboboxForModalId';
        window.feature.ProductNameId = 'productNameId';
        window.feature.ProductDescriptionId = 'productDescriptionId';
        window.feature.ProductLowerLimitId = 'productLowerLimitId';
        window.feature.ProductUpperLimitId = 'productUpperLimitId';
        window.feature.ProductSMSReferecenceCodeId = 'productSMSCodeId';
        window.feature.formProductGroupNameId = 'productGroupName';
        window.feature.formProductGroupReferenceCodeId = 'productGroupRef';
        window.feature.formProductGroupDescriptionId = 'productGroupDesc';
        window.feature.productId = 'productId';
    
        window.feature.modalAddProductGroup = Ext.define('Ext.feature.productGroup.Modal', {
            extend: 'Ext.window.Window',
            modal: true,
            ui: 'snapshot-popup-window',
            height: 250,
            width: 390,
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
    
            initComponent: function () {
                var me = this;
    
                Ext.applyIf(me, {
                    items: [
                        {
                            xtype: 'textfield',
                            name: 'Name',
                            fieldLabel: 'Product Group Name',
                            anchor: '100%',
                            itemId: window.feature.formProductGroupNameId
                        }, {
                            xtype: 'textfield',
                            name: 'ReferenceCode',
                            fieldLabel: 'Product Group Reference Code',
                            anchor: '100%',
                            itemId: window.feature.formProductGroupReferenceCodeId
                        }, {
                            xtype: 'textareafield',
                            name: 'Description',
                            fieldLabel: 'Description',
                            grow: true,
                            anchor: '100%',
                            itemId: window.feature.formProductGroupDescriptionId
                        }
                    ]
                });
    
                me.callParent(arguments);
            }
        });
    
    });
</script>
<script type='text/javascript'>
    
    Ext.onReady(function(){
        window.feature.ProductGroupStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "GetProductGroups" })',
                reader: {
                    type: 'json',
                    root: 'productGroups',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });
        window.feature.ProductGroupStoreForModal = Ext.create('Ext.data.Store', {
            fields: ['Id','Name'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "GetProductGroups" })',
                reader: {
                    type: 'json',
                    root: 'productGroups'
                }
            }
        });
        window.feature.comboBoxProductGroups = Ext.create('Ext.form.ComboBox', {
            store: window.feature.ProductGroupStore,
            queryMode: 'local',
            id: window.feature.comboboxProductGroupsId,
            displayField: 'Name',
            fieldLabel: 'Product Group',
            valueField: 'Id',
            margin: '0 0 0 75',
            emptyText: _t('Selected product group'),
            editable: false,
            typeAhead: false,
            listeners: {
                select: function (combo, record, index) {
                    var selectedProductGroupId = record[0].data.Id;
                    window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupId;
                    window.feature.store.loadPage(1);
    
                }
            }
        });

        function IsValid(productGroup, productName, productSMSCode,productLowerLimit, productUpperLimit) {
    
            var ok = true;
            if (productGroup.getValue() == '') {
                productGroup.markInvalid('Field Product Group is required!');
                productGroup.setValue(null);
                ok = false;
            }
            
            if(productLowerLimit.getValue() > productUpperLimit.getValue()){
            productLowerLimit.markInvalid('Value of product lower limit should be less than value of product upper limit!');
            ok = false;
            }

            if(productLowerLimit.getValue() === productUpperLimit.getValue()){
            productLowerLimit.markInvalid('Value of product lower limit should not be equal with value of product upper limit!');
            ok = false;
            }

            if (productName.getValue() == '') {
                productName.markInvalid('Field Product is required!');
                productName.setValue(null);
                ok = false;
            }
    
            if (productSMSCode.getValue() == '') {
                productSMSCode.markInvalid('Field Product Code is required!');
                productSMSCode.setValue(null);
                ok = false;
            }

             if (productSMSCode.getValue().length > 1) {
                productSMSCode.markInvalid('Field Product Code should have maximum one character!');
                ok = false;
            }

            if (!productSMSCode.isValid()){
                 ok = false;
            }

            return ok;
        };
    
        function IsValidProductGroup(name, description, referenceCode){
            var ok = true;
            if (name.getValue() == ''){
                name.markInvalid('Field Name is required!');  
                name.setValue(null);
                ok = false;
            }
    
            if (description.getValue() == ''){
                description.markInvalid('Field Description is required!');  
                description.setValue(null);
                ok = false;
            }
    
            if (referenceCode.getValue() == ''){
                referenceCode.markInvalid('Field Product Group Reference Code is required!');  
                referenceCode.setValue(null);
                ok = false;
            }
            else{
                if (referenceCode.getValue().length > 3 || referenceCode.getValue().length < 3){
                    referenceCode.markInvalid('Imput length value must be 3!');  
                    ok = false;
                }
            }
    
            return ok;
        };
        window.feature.modal = Ext.define('Ext.feature.product.AddModal', {
            extend: 'Ext.window.Window',
            title: 'Add new product',
            height: 360,
            width: 690,
            ui: 'snapshot-popup-window',
            modal: true,
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
            initComponent: function () {
                var me = this;

                window.feature.ProductGroupStoreForModal.load();
    
                Ext.applyIf(me, {
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'column'
                            },
                            height: 30,
                            items: [
                                {
                                    xtype:'combobox',
                                    store: window.feature.ProductGroupStore,
                                    queryMode: 'local',
                                    itemId: window.feature.comboboxProductGroupsForModalId,
                                    displayField: 'Name',
                                    fieldLabel: 'Product Group',
                                    valueField: 'Id',
                                    width: 300,
                                    emptyText: _t('Select Product group'),
                                    editable: false,
                                    typeAhead: false,
                                    value: me.recordProductGroupId,
                                    listeners: {
                                        select: function (combo, record, index) {
                                            var selectedProductGroupId = record[0].data.Id;
                                             window.feature.comboBoxProductGroups.setValue(selectedProductGroupId);

                                            window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupId;
                                            window.feature.store.loadPage(1);
    
                                        }
                                    }
                                },{
                                    xtype: 'button',
                                    text: 'Add a New Group',
                                    ui: 'snapshot-add-btn',
                                    cls: 'x-add-button-gradient',
                                    width: 160,
                                    height: 24,
                                    margin: '0 0 0 70',
                                    handler: function () {                            
                                        var winAdd = new window.feature.modalAddProductGroup({
                                            title: 'Add New Product Group',

                                            buttons: [
                                                {
                                                    text: 'Cancel', 
                                                    margin: '10 10 20 0',
                                                    ui: 'snapshot-cancel-btn',
                                                    cls: 'x-add-button-gradient', 
                                                    handler:function(){
                                                        winAdd.close();
                                                        winAdd.destroy();
                                                    }
                                                },{
                                                    text: 'Save',
                                                    margin: '0 20 20 10',
                                                    ui: 'snapshot-add-btn',
                                                    cls: 'x-add-button-gradient', 
                                                    handler:function(){
    
                                                        var productGroupName = winAdd.down('#' + window.feature.formProductGroupNameId);
                                                        var productGroupDescription = winAdd.down('#' + window.feature.formProductGroupDescriptionId);
                                                        var productGroupReferenceCode = winAdd.down('#' + window.feature.formProductGroupReferenceCodeId);
    
                                                        var ok = IsValidProductGroup(productGroupName, productGroupDescription, productGroupReferenceCode);
                                                        if (ok == true){
                                                            var values = {
                                                                Name:  productGroupName.getValue(),
                                                                Description:  productGroupDescription.getValue(),
                                                                ReferenceCode: productGroupReferenceCode.getValue()
                                                            };
    
                                                            var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "ProductGroup", action = "Create" })';
                                                            var action = $.post(postToUrl, values);
                                                            action.success(function(serverResponse){
                                                            
                                                                if(serverResponse.Status === "Error"){
                                                                    var msgAlert = Ext.Msg;
                                                                    msgAlert.ui = 'snapshot-popup-window';
                                                                    msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                                                    msgAlert.msgButtons['ok'].margin = '10 10 20 0',
                                                                    msgAlert.alert(serverResponse.Status, serverResponse.Message);
                                                                    
                                                                }else{
                                                                
                                                                
                                                                window.feature.ProductGroupStoreForModal.load();
                                                                var comboboxProductGroupsForModal = me.down('#' + window.feature.comboboxProductGroupsForModalId);
    
                                                                comboboxProductGroupsForModal.setValue(serverResponse.ProductGroupId);  
    
                                                                winAdd.close();
                                                                winAdd.destroy();                                                
                                                                window.feature.ProductGroupStore.load();
                                                                }
    
                                                            });
    
                                                        }
    
                                                    }
                                                }
                                            ]
                                        });
                                        winAdd.show();
    
                                    }
                                }
                            ]
                        }, {
                            xtype: 'textfield',
                            name: 'Name',
                            fieldLabel: 'Product',
                            allowBlank: false,
                            itemId: window.feature.ProductNameId,
                            width: 10,
                            anchor: '-10',
                            value: me.recordName
                        }, {
                            xtype: 'textfield',
                            name: 'SMSReferenceCode',
                            fieldLabel: 'Product Code',
                            allowBlank:false,
                            itemId: window.feature.ProductSMSReferecenceCodeId,
                            value: me.recordSMSReferenceCode,
                            regex: /^[A-Za-z]{1}$/,
                            regexText:'You need to provide 1 letter!'
                        }, {
                            xtype: 'textarea',
                            name: 'Description',
                            fieldLabel: 'Description',
    
                            itemId: window.feature.ProductDescriptionId,
                            value: me.recordDescription
    
                        }, {
                            xtype: 'numberfield',
                            name: 'LowerLimit',
                            fieldLabel: 'Lower Limit',
                            itemId: window.feature.ProductLowerLimitId,
                            value: me.recordLowerLimit
    
                        }, {
                            xtype: 'numberfield',
                            name: 'UpperLimit',
                            fieldLabel: 'Upper Limit',
                            itemId: window.feature.ProductUpperLimitId,
                            value: me.recordUpperLimit

                        },{
                            xtype:'hiddenfield',
                            name: 'Id',
                            value: me.recordId
                        }
                    ]
                });
    
                me.buttons = [
                    {
                        text: 'Cancel', 
                        margin: '10 10 20 0',
                        ui: 'snapshot-cancel-btn',
                        cls: 'x-add-button-gradient', 
                        handler: function () {
                            me.close();
                            me.destroy();
                            window.feature.ProductGroupStore.load();
                        }
                    }, {
                        text: 'Save', 
                        margin: '0 20 20 10',
                        ui: 'snapshot-add-btn',
                        cls: 'x-add-button-gradient', 
                        handler: function () {
                            var productGroup = me.down('#' + window.feature.comboboxProductGroupsForModalId);
                            var productName = me.down('#' + window.feature.ProductNameId);
                            var productDescription = me.down('#' + window.feature.ProductDescriptionId);
                            var productLowerLimit = me.down('#' + window.feature.ProductLowerLimitId);
                            var productUpperLimit = me.down('#' + window.feature.ProductUpperLimitId);
                            var productSMSCode = me.down('#' + window.feature.ProductSMSReferecenceCodeId);

                            var ok = IsValid(productGroup, productName, productSMSCode,productLowerLimit,productUpperLimit);

                            if (ok == true) {
                                var values = {
                                    'Name': productName.getValue(),
                                    'ProductGroup.Id': productGroup.getValue(),
                                    'LowerLimit': productLowerLimit.getValue(),
                                    'UpperLimit': productUpperLimit.getValue(),
                                    'SMSReferenceCode': productSMSCode.getValue(),
                                    'Description': productDescription.getValue()
                                };
                                if (me.recordId){
                                    values['Id'] = me.recordId;
                                }
                                var createUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "Create" })';
                                var editUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "Edit" })';
                                var postToUrl = (me.recordId !== undefined ? editUrl : createUrl);
                                var action = $.post(postToUrl, values);
                                action.success(function (result) {
    
                                    if (result.CloseModal === false) {
                                        var msgAlert = Ext.Msg;
                                         msgAlert.ui = 'snapshot-popup-window';
                                         msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                         msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                         msgAlert.alert(result.Status, result.Message);
                                    }
                                    else {
                                        if (result.Status === "Error"){
                                            var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert(result.Status, result.Message);
                                        }
                                        var selectedProductGroupInModal = me.down('#' + window.feature.comboboxProductGroupsForModalId).getValue();
                                        me.close();
                                        me.destroy();
                                        window.feature.ProductGroupStore.load();
    
                                        var comboboxProductGroups = Ext.getCmp(window.feature.comboboxProductGroupsId);
                                        comboboxProductGroups.setValue(selectedProductGroupInModal);
    
                                        window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupInModal;
                                        window.feature.store.loadPage(1);
                                    }
                                });
                            }
                        }
                    }
                ]
                me.callParent(arguments);
            }
        });
    
        window.feature.store = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: true,
            fields: ['Name', 'ProductGroupName', 'SMSReferenceCode', 'LowerLimit', 'UpperLimit', 'Id', 'Description', 'ProductGroupId'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "GetProducts" })',
                extraParams: { productGroupId: '', searchName: '' },
                reader: {
                    type: 'json',
                    root: 'products',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true
    
            },
            sorters: [
                {
                    property: 'Name',
                    direction: 'DESC'
                }
            ]
        });
    
        Ext.QuickTips.init();

        function addTooltip(val, meta, rec, rowIdx, colIdx, ds){
            meta.tdAttr = 'data-qtip="' + rec.get('Description') +'"' ;
            return val;
        }; 
        window.feature.grid = Ext.create('Ext.grid.Panel', {
            flex: 3,
            store: window.feature.store,
            disableSelection: true,
            loadMask: true,
            cls: 'white-border',
            columns: [
                {
                    text: "Products",
                    dataIndex: 'Name',
                    anchor: '90%',
                    sortable: true,
                    flex: 1,
                    
                    menuDisabled: true,
                    renderer: addTooltip
                }, {
                    text: "Product Groups",
                    dataIndex: 'ProductGroupName',
                    flex: 1,
                    align: 'center',
                    menuDisabled: true,
                    sortable: true
                }, {
                    text: "Product Code",
                    dataIndex: 'SMSReferenceCode',
                    flex: 1,
                    align: 'center',
                    menuDisabled: true,
                    sortable: false
                }, {
                    text: "Lower Limit",
                    dataIndex: 'LowerLimit',
                    flex: 1,
                    align: 'right',
                    menuDisabled: true,
                    sortable: false
                }, {
                    text: "Upper Limit",
                    dataIndex: 'UpperLimit',
                    flex: 1,
                    align: 'right',
                    menuDisabled: true,
                    sortable: false
                }, {
                    xtype: 'actioncolumn',
                    text: 'Actions',
                    menuDisabled:true,
                    flex: 1.3,
                    items: [
                        {
                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/edit.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',     
                            tooltip: _t('Edit this product'),
                            handler: function (grid, rowIndex, colIndex) {
                            if(@(ViewBag.HasNoRightsToAdd) === true){
                                           var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert("Alert","You have no rights for this action!");
                            }else{
                                var record = grid.store.getAt(rowIndex);
            
                                var modalForEdit = new window.feature.modal({
                                    recordName: record.get('Name'),
                                    recordUpperLimit: record.get('UpperLimit'),
                                    recordLowerLimit: record.get('LowerLimit'),
                                    recordSMSReferenceCode: record.get('SMSReferenceCode'),
                                    recordDescription: record.get('Description'),
                                    recordId: record.get('Id'),
                                    recordProductGroupId: record.get('ProductGroupId')
                                });
                                modalForEdit.show();
                                }
                            }
                        },{
                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/delete.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',     
                            tooltip: _t('Remove this product'),
                            handler: function (grid, rowIndex, colIndex) {
                            if(@(ViewBag.HasNoRightsToDelete) === true){
                                           var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert("Alert","You have no rights for this action!");
                            }else{
    
                                var record = grid.store.getAt(rowIndex);
                                 var msgConfirm = Ext.Msg;
                                 msgConfirm.ui = 'snapshot-popup-window';
                                 msgConfirm.msgButtons['no'].ui = 'snapshot-cancel-btn';
                                 msgConfirm.msgButtons['no'].margin = '10 10 20 0',
                                 msgConfirm.msgButtons['yes'].ui = 'snapshot-add-btn';
                                 msgConfirm.msgButtons['ok'].ui = 'snapshot-add-btn';
                                 msgConfirm.msgButtons['ok'].margin = '10 10 20 0',
                                 msgConfirm.confirm('Confirm', 'Are you sure you want to delete the product?', function (button) {
    
                                    var values = {
                                        guid: record.data.Id
                                    };
                                    if (button === 'yes') {
    
                                        var postToUrl = '@Url.RouteUrl(StockAdministrationAreaRegistration.DEFAULT_ROUTE, new { controller = "Product", action = "Delete" })';
                                        var action = $.post(postToUrl, values);
                                        action.success(function (result) {
                                            if (result.Status === "Error"){
                                                var msgAlert = Ext.Msg;
                                                msgAlert.ui = 'snapshot-popup-window';
                                                msgAlert.alert(result.Status, result.Message);
                                            }                                      
                                            var selectedProductGroupId = Ext.getCmp(window.feature.comboboxProductGroupsId).getValue();
    
                                            if (selectedProductGroupId) {
                                                window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupId;
                                                window.feature.store.loadPage(1);
                                            }
                                            else {
                                                window.feature.store.proxy.extraParams.productGroupId ='';
                                                window.feature.store.loadPage(1);
    
                                            }
    
                                        });
    
                                    }
    
                                });
                                }
                            }                    
                        }
    
                    ]
                }
            ],
            bbar: Ext.create('Ext.PagingToolbar', {
                store: window.feature.store,
                displayInfo: true,
                displayMsg: 'Displaying topics {0} - {1} of {2}',
                emptyMsg: "No topics to display",
                ui: 'snapshot-pagination-toolbar'
            })
        });

        function GetStoreWithProductsSpecificToProductGroupWith(selectedProductGroupId) {
    
            window.feature.store.proxy.extraParams.productGroupId = selectedProductGroupId;
            window.feature.store.loadPage(1);
        };

        window.feature.doSearch = new Ext.util.DelayedTask(function(){
			window.feature.store.loadPage(1);
		});  
    
        var contentRes = window.res.content;
        window.feature.ProductGroupStore.load();
    
        var mainContent = Ext.getCmp(contentRes.maincontent.id);
        mainContent.add({
            xtype: 'container',
            margin:'45 50 20 20',
            padding:'20 0 0 20',
            autoScroll:true,
            id:'TopContainer',
            layout: {
                align: 'stretch',
                type: 'vbox'
            },
            items: [
                {
                    xtype: 'container',
                    layout: {
                        align: 'stretch',
                        type: 'vbox'
                    },
                    height: 130,
                    items: [
                        {
                            xtype: 'container',
                            flex: 1,
                            layout: {
                                type: 'hbox'
                            },
                            items: [
                                {
                                    xtype: 'container',
                                    flex: 1,
                                    layout: {
                                        type: 'column'
                                    },
                                    items: [
                                        {
                                            xtype: 'container',
                                            height: 30,
                                            width: 30,
                                            html:'&nbsp;'
                                        },{xtype: 'image',
                                          src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Administration/SubMenu/ProductSelected.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                          margin: '0 10 10 10'
                                        },{
                                            xtype: 'label',
                                            cls: 'x-title-label',
                                            text: 'Products'
                                        },{
                                            xtype: 'button',
                                            margin: '0 0 0 20',
                                            ui: 'snapshot-add-btn',
                                            cls: 'x-add-button-gradient',
                                            disabled: @(ViewBag.HasNoRightsToAdd),
                                            text: 'Add New Product',
                                            handler: function () {
                                                var productModal = new window.feature.modal({
                                                    recordProductGroupId: window.feature.comboBoxProductGroups.getValue()
                                                });
                                                productModal.show();
                                            }
                                        }
                                    ]
                                },{
                                    xtype: 'container',
                                    flex: 1,
                                    layout: {
                                        type: 'hbox',
                                        pack:'end'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            id: window.feature.searchTextFieldId,
                                            width: 200,
                                            frame: true,
                                            emptyText: 'Product Search',
                                            enableKeyEvents: true,
                                            listeners: {
                                                'specialkey': function (field, e) {
                                                        var selectedProductId = Ext.getCmp(window.feature.comboboxProductGroupsId).getValue();
                                                        Ext.getCmp(window.feature.searchTextFieldId).setValue('');
                                                        window.feature.store.proxy.extraParams.searchName = '';
                                                        
                                                        if (selectedProductId){
                                                            window.feature.store.proxy.extraParams.productGroupId = selectedProductId;
                                                        }
                                                        
                                                        window.feature.doSearch.delay(500);
                                                        },
                                                'keyup': {
                                                    fn: function(key) {
                                                        var selectedProductId = Ext.getCmp(window.feature.comboboxProductGroupsId).getValue();
                                                        var searchByName = Ext.getCmp(window.feature.searchTextFieldId).getValue();
                                                        window.feature.store.proxy.extraParams.searchName = searchByName;
                                                        
                                                        if (selectedProductId){
                                                            window.feature.store.proxy.extraParams.productGroupId = selectedProductId;
                                                        }
                                                        
                                                        window.feature.doSearch.delay(500);
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },{
                            xtype: 'container',
                            flex: 1,
                            layout: {
                                type: 'column'
                            },
                            items: [{
									xtype: 'container',
									height: 30,
									//margin: '0 0 0 75',
									html:'&nbsp;'
								},
                                window.feature.comboBoxProductGroups
                            ]
                        }
                    ]
                },
                window.feature.grid
                ,{
                    xtype:'container',
                    height:150
                }
            ]
        });
    
        window.feature.store.loadPage(1);
    });
</script>
